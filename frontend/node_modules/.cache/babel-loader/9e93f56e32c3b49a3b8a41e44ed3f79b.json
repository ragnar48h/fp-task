{"ast":null,"code":"import React, { Fragment, isValidElement, cloneElement, createElement, forwardRef, useCallback, useRef, useEffect, useLayoutEffect, useState, createContext, useContext, useMemo, useReducer, createRef } from 'react';\nimport { createPortal } from 'react-dom';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n  return arr2;\n}\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      return function () {\n        if (i >= o.length) return {\n          done: true\n        };\n        return {\n          done: false,\n          value: o[i++]\n        };\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  it = o[Symbol.iterator]();\n  return it.next.bind(it);\n}\n\nfunction match(value, lookup) {\n  if (value in lookup) {\n    var returnValue = lookup[value];\n\n    for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n      args[_key - 2] = arguments[_key];\n    }\n\n    return typeof returnValue === 'function' ? returnValue.apply(void 0, args) : returnValue;\n  }\n\n  var error = new Error(\"Tried to handle \\\"\" + value + \"\\\" but there is no handler defined. Only defined handlers are: \" + Object.keys(lookup).map(function (key) {\n    return \"\\\"\" + key + \"\\\"\";\n  }).join(', ') + \".\");\n  if (Error.captureStackTrace) Error.captureStackTrace(error, match);\n  throw error;\n}\n\nvar Features;\n\n(function (Features) {\n  /** No features at all */\n  Features[Features[\"None\"] = 0] = \"None\";\n  /**\r\n   * When used, this will allow us to use one of the render strategies.\r\n   *\r\n   * **The render strategies are:**\r\n   *    - **Unmount**   _(Will unmount the component.)_\r\n   *    - **Hidden**    _(Will hide the component using the [hidden] attribute.)_\r\n   */\n\n  Features[Features[\"RenderStrategy\"] = 1] = \"RenderStrategy\";\n  /**\r\n   * When used, this will allow the user of our component to be in control. This can be used when\r\n   * you want to transition based on some state.\r\n   */\n\n  Features[Features[\"Static\"] = 2] = \"Static\";\n})(Features || (Features = {}));\n\nvar RenderStrategy;\n\n(function (RenderStrategy) {\n  RenderStrategy[RenderStrategy[\"Unmount\"] = 0] = \"Unmount\";\n  RenderStrategy[RenderStrategy[\"Hidden\"] = 1] = \"Hidden\";\n})(RenderStrategy || (RenderStrategy = {}));\n\nfunction render(_ref) {\n  var props = _ref.props,\n      slot = _ref.slot,\n      defaultTag = _ref.defaultTag,\n      features = _ref.features,\n      _ref$visible = _ref.visible,\n      visible = _ref$visible === void 0 ? true : _ref$visible,\n      name = _ref.name; // Visible always render\n\n  if (visible) return _render(props, slot, defaultTag, name);\n  var featureFlags = features != null ? features : Features.None;\n\n  if (featureFlags & Features.Static) {\n    var _props$static = props[\"static\"],\n        isStatic = _props$static === void 0 ? false : _props$static,\n        rest = _objectWithoutPropertiesLoose(props, [\"static\"]); // When the `static` prop is passed as `true`, then the user is in control, thus we don't care about anything else\n\n\n    if (isStatic) return _render(rest, slot, defaultTag, name);\n  }\n\n  if (featureFlags & Features.RenderStrategy) {\n    var _match;\n\n    var _props$unmount = props.unmount,\n        unmount = _props$unmount === void 0 ? true : _props$unmount,\n        _rest = _objectWithoutPropertiesLoose(props, [\"unmount\"]);\n\n    var strategy = unmount ? RenderStrategy.Unmount : RenderStrategy.Hidden;\n    return match(strategy, (_match = {}, _match[RenderStrategy.Unmount] = function () {\n      return null;\n    }, _match[RenderStrategy.Hidden] = function () {\n      return _render(_extends({}, _rest, {\n        hidden: true,\n        style: {\n          display: 'none'\n        }\n      }), slot, defaultTag, name);\n    }, _match));\n  } // No features enabled, just render\n\n\n  return _render(props, slot, defaultTag, name);\n}\n\nfunction _render(props, slot, tag, name) {\n  var _ref2;\n\n  if (slot === void 0) {\n    slot = {};\n  }\n\n  var _omit = omit(props, ['unmount', 'static']),\n      _omit$as = _omit.as,\n      Component = _omit$as === void 0 ? tag : _omit$as,\n      children = _omit.children,\n      _omit$refName = _omit.refName,\n      refName = _omit$refName === void 0 ? 'ref' : _omit$refName,\n      passThroughProps = _objectWithoutPropertiesLoose(_omit, [\"as\", \"children\", \"refName\"]); // This allows us to use `<HeadlessUIComponent as={MyComponent} refName=\"innerRef\" />`\n\n\n  var refRelatedProps = props.ref !== undefined ? (_ref2 = {}, _ref2[refName] = props.ref, _ref2) : {};\n  var resolvedChildren = typeof children === 'function' ? children(slot) : children; // Allow for className to be a function with the slot as the contents\n\n  if (passThroughProps.className && typeof passThroughProps.className === 'function') {\n    passThroughProps.className = passThroughProps.className(slot);\n  }\n\n  if (Component === Fragment) {\n    if (Object.keys(passThroughProps).length > 0) {\n      if (!isValidElement(resolvedChildren) || Array.isArray(resolvedChildren) && resolvedChildren.length > 1) {\n        throw new Error(['Passing props on \"Fragment\"!', '', \"The current component <\" + name + \" /> is rendering a \\\"Fragment\\\".\", \"However we need to passthrough the following props:\", Object.keys(passThroughProps).map(function (line) {\n          return \"  - \" + line;\n        }).join('\\n'), '', 'You can apply a few solutions:', ['Add an `as=\"...\"` prop, to ensure that we render an actual element instead of a \"Fragment\".', 'Render a single element as the child so that we can forward the props onto that element.'].map(function (line) {\n          return \"  - \" + line;\n        }).join('\\n')].join('\\n'));\n      }\n\n      return cloneElement(resolvedChildren, Object.assign({}, // Filter out undefined values so that they don't override the existing values\n      mergeEventFunctions(compact(omit(passThroughProps, ['ref'])), resolvedChildren.props, ['onClick']), refRelatedProps));\n    }\n  }\n\n  return createElement(Component, Object.assign({}, omit(passThroughProps, ['ref']), Component !== Fragment && refRelatedProps), resolvedChildren);\n}\n/**\r\n * We can use this function for the following useCase:\r\n *\r\n * <Menu.Item> <button onClick={console.log} /> </Menu.Item>\r\n *\r\n * Our `Menu.Item` will have an internal `onClick`, if you passthrough an `onClick` to the actual\r\n * `Menu.Item` component we will call it correctly. However, when we have an `onClick` on the actual\r\n * first child, that one should _also_ be called (but before this implementation, it was just\r\n * overriding the `onClick`). But it is only when we *render* that we have access to the existing\r\n * props of this component.\r\n *\r\n * It's a bit hacky, and not that clean, but it is something internal and we have tests to rely on\r\n * so that we can refactor this later (if needed).\r\n */\n\n\nfunction mergeEventFunctions(passThroughProps, existingProps, functionsToMerge) {\n  var clone = Object.assign({}, passThroughProps);\n\n  var _loop = function _loop() {\n    var func = _step.value;\n\n    if (passThroughProps[func] !== undefined && existingProps[func] !== undefined) {\n      var _Object$assign;\n\n      Object.assign(clone, (_Object$assign = {}, _Object$assign[func] = function (event) {\n        // Props we control\n        if (!event.defaultPrevented) passThroughProps[func](event); // Existing props on the component\n\n        if (!event.defaultPrevented) existingProps[func](event);\n      }, _Object$assign));\n    }\n  };\n\n  for (var _iterator = _createForOfIteratorHelperLoose(functionsToMerge), _step; !(_step = _iterator()).done;) {\n    _loop();\n  }\n\n  return clone;\n}\n/**\r\n * This is a hack, but basically we want to keep the full 'API' of the component, but we do want to\r\n * wrap it in a forwardRef so that we _can_ passthrough the ref\r\n */\n\n\nfunction forwardRefWithAs(component) {\n  var _component$displayNam;\n\n  return Object.assign(forwardRef(component), {\n    displayName: (_component$displayNam = component.displayName) != null ? _component$displayNam : component.name\n  });\n}\n\nfunction compact(object) {\n  var clone = Object.assign({}, object);\n\n  for (var key in clone) {\n    if (clone[key] === undefined) delete clone[key];\n  }\n\n  return clone;\n}\n\nfunction omit(object, keysToOmit) {\n  if (keysToOmit === void 0) {\n    keysToOmit = [];\n  }\n\n  var clone = Object.assign({}, object);\n\n  for (var _iterator2 = _createForOfIteratorHelperLoose(keysToOmit), _step2; !(_step2 = _iterator2()).done;) {\n    var key = _step2.value;\n    if (key in clone) delete clone[key];\n  }\n\n  return clone;\n}\n\nfunction useSyncRefs() {\n  for (var _len = arguments.length, refs = new Array(_len), _key = 0; _key < _len; _key++) {\n    refs[_key] = arguments[_key];\n  }\n\n  var cache = useRef(refs);\n  useEffect(function () {\n    cache.current = refs;\n  }, [refs]);\n  return useCallback(function (value) {\n    for (var _iterator = _createForOfIteratorHelperLoose(cache.current), _step; !(_step = _iterator()).done;) {\n      var ref = _step.value;\n      if (ref == null) continue;\n      if (typeof ref === 'function') ref(value);else ref.current = value;\n    }\n  }, [cache]);\n} // TODO: This must already exist somewhere, right? 🤔\n// Ref: https://www.w3.org/TR/uievents-key/#named-key-attribute-values\n\n\nvar Keys;\n\n(function (Keys) {\n  Keys[\"Space\"] = \" \";\n  Keys[\"Enter\"] = \"Enter\";\n  Keys[\"Escape\"] = \"Escape\";\n  Keys[\"Backspace\"] = \"Backspace\";\n  Keys[\"ArrowLeft\"] = \"ArrowLeft\";\n  Keys[\"ArrowUp\"] = \"ArrowUp\";\n  Keys[\"ArrowRight\"] = \"ArrowRight\";\n  Keys[\"ArrowDown\"] = \"ArrowDown\";\n  Keys[\"Home\"] = \"Home\";\n  Keys[\"End\"] = \"End\";\n  Keys[\"PageUp\"] = \"PageUp\";\n  Keys[\"PageDown\"] = \"PageDown\";\n  Keys[\"Tab\"] = \"Tab\";\n})(Keys || (Keys = {})); // See: https://github.com/facebook/react/issues/7711\n// See: https://github.com/facebook/react/pull/20612\n// See: https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#concept-fe-disabled (2.)\n\n\nfunction isDisabledReactIssue7711(element) {\n  var _ref, _parent;\n\n  var parent = element.parentElement;\n  var legend = null;\n\n  while (parent && !(parent instanceof HTMLFieldSetElement)) {\n    if (parent instanceof HTMLLegendElement) legend = parent;\n    parent = parent.parentElement;\n  }\n\n  var isParentDisabled = (_ref = ((_parent = parent) == null ? void 0 : _parent.getAttribute('disabled')) === '') != null ? _ref : false;\n  if (isParentDisabled && isFirstLegend(legend)) return false;\n  return isParentDisabled;\n}\n\nfunction isFirstLegend(element) {\n  if (!element) return false;\n  var previous = element.previousElementSibling;\n\n  while (previous !== null) {\n    if (previous instanceof HTMLLegendElement) return false;\n    previous = previous.previousElementSibling;\n  }\n\n  return true;\n}\n\nvar useIsoMorphicEffect = typeof window !== 'undefined' ? useLayoutEffect : useEffect; // didn't take care of the Suspense case. To fix this we used the approach the @reach-ui/auto-id\n// uses.\n//\n// Credits: https://github.com/reach/reach-ui/blob/develop/packages/auto-id/src/index.tsx\n\nvar state = {\n  serverHandoffComplete: false\n};\nvar id = 0;\n\nfunction generateId() {\n  return ++id;\n}\n\nfunction useId() {\n  var _useState = useState(state.serverHandoffComplete ? generateId : null),\n      id = _useState[0],\n      setId = _useState[1];\n\n  useIsoMorphicEffect(function () {\n    if (id === null) setId(generateId());\n  }, [id]);\n  useEffect(function () {\n    if (state.serverHandoffComplete === false) state.serverHandoffComplete = true;\n  }, []);\n  return id != null ? '' + id : undefined;\n} //  - https://stackoverflow.com/a/30753870\n\n\nvar focusableSelector = /*#__PURE__*/['[contentEditable=true]', '[tabindex]', 'a[href]', 'area[href]', 'button:not([disabled])', 'iframe', 'input:not([disabled])', 'select:not([disabled])', 'textarea:not([disabled])'].map(process.env.NODE_ENV === 'test' ? // TODO: Remove this once JSDOM fixes the issue where an element that is\n// \"hidden\" can be the document.activeElement, because this is not possible\n// in real browsers.\n// TODO: Remove this once JSDOM fixes the issue where an element that is\nfunction (selector) {\n  return selector + \":not([tabindex='-1']):not([style*='display: none'])\";\n} : function (selector) {\n  return selector + \":not([tabindex='-1'])\";\n}).join(',');\nvar Focus;\n\n(function (Focus) {\n  /** Focus the first non-disabled element */\n  Focus[Focus[\"First\"] = 1] = \"First\";\n  /** Focus the previous non-disabled element */\n\n  Focus[Focus[\"Previous\"] = 2] = \"Previous\";\n  /** Focus the next non-disabled element */\n\n  Focus[Focus[\"Next\"] = 4] = \"Next\";\n  /** Focus the last non-disabled element */\n\n  Focus[Focus[\"Last\"] = 8] = \"Last\";\n  /** Wrap tab around */\n\n  Focus[Focus[\"WrapAround\"] = 16] = \"WrapAround\";\n  /** Prevent scrolling the focusable elements into view */\n\n  Focus[Focus[\"NoScroll\"] = 32] = \"NoScroll\";\n})(Focus || (Focus = {}));\n\nvar FocusResult;\n\n(function (FocusResult) {\n  FocusResult[FocusResult[\"Error\"] = 0] = \"Error\";\n  FocusResult[FocusResult[\"Overflow\"] = 1] = \"Overflow\";\n  FocusResult[FocusResult[\"Success\"] = 2] = \"Success\";\n  FocusResult[FocusResult[\"Underflow\"] = 3] = \"Underflow\";\n})(FocusResult || (FocusResult = {}));\n\nvar Direction;\n\n(function (Direction) {\n  Direction[Direction[\"Previous\"] = -1] = \"Previous\";\n  Direction[Direction[\"Next\"] = 1] = \"Next\";\n})(Direction || (Direction = {}));\n\nfunction getFocusableElements(container) {\n  if (container === void 0) {\n    container = document.body;\n  }\n\n  if (container == null) return [];\n  return Array.from(container.querySelectorAll(focusableSelector));\n}\n\nvar FocusableMode;\n\n(function (FocusableMode) {\n  /** The element itself must be focusable. */\n  FocusableMode[FocusableMode[\"Strict\"] = 0] = \"Strict\";\n  /** The element should be inside of a focusable element. */\n\n  FocusableMode[FocusableMode[\"Loose\"] = 1] = \"Loose\";\n})(FocusableMode || (FocusableMode = {}));\n\nfunction isFocusableElement(element, mode) {\n  var _match;\n\n  if (mode === void 0) {\n    mode = FocusableMode.Strict;\n  }\n\n  if (element === document.body) return false;\n  return match(mode, (_match = {}, _match[FocusableMode.Strict] = function () {\n    return element.matches(focusableSelector);\n  }, _match[FocusableMode.Loose] = function () {\n    var next = element;\n\n    while (next !== null) {\n      if (next.matches(focusableSelector)) return true;\n      next = next.parentElement;\n    }\n\n    return false;\n  }, _match));\n}\n\nfunction focusElement(element) {\n  element == null ? void 0 : element.focus({\n    preventScroll: true\n  });\n}\n\nfunction focusIn(container, focus) {\n  var elements = Array.isArray(container) ? container : getFocusableElements(container);\n  var active = document.activeElement;\n\n  var direction = function () {\n    if (focus & (Focus.First | Focus.Next)) return Direction.Next;\n    if (focus & (Focus.Previous | Focus.Last)) return Direction.Previous;\n    throw new Error('Missing Focus.First, Focus.Previous, Focus.Next or Focus.Last');\n  }();\n\n  var startIndex = function () {\n    if (focus & Focus.First) return 0;\n    if (focus & Focus.Previous) return Math.max(0, elements.indexOf(active)) - 1;\n    if (focus & Focus.Next) return Math.max(0, elements.indexOf(active)) + 1;\n    if (focus & Focus.Last) return elements.length - 1;\n    throw new Error('Missing Focus.First, Focus.Previous, Focus.Next or Focus.Last');\n  }();\n\n  var focusOptions = focus & Focus.NoScroll ? {\n    preventScroll: true\n  } : {};\n  var offset = 0;\n  var total = elements.length;\n  var next = undefined;\n\n  do {\n    var _next; // Guard against infinite loops\n\n\n    if (offset >= total || offset + total <= 0) return FocusResult.Error;\n    var nextIdx = startIndex + offset;\n\n    if (focus & Focus.WrapAround) {\n      nextIdx = (nextIdx + total) % total;\n    } else {\n      if (nextIdx < 0) return FocusResult.Underflow;\n      if (nextIdx >= total) return FocusResult.Overflow;\n    }\n\n    next = elements[nextIdx]; // Try the focus the next element, might not work if it is \"hidden\" to the user.\n\n    (_next = next) == null ? void 0 : _next.focus(focusOptions); // Try the next one in line\n\n    offset += direction;\n  } while (next !== document.activeElement); // This is a little weird, but let me try and explain: There are a few scenario's\n  // in chrome for example where a focused `<a>` tag does not get the default focus\n  // styles and sometimes they do. This highly depends on whether you started by\n  // clicking or by using your keyboard. When you programmatically add focus `anchor.focus()`\n  // then the active element (document.activeElement) is this anchor, which is expected.\n  // However in that case the default focus styles are not applied *unless* you\n  // also add this tabindex.\n\n\n  if (!next.hasAttribute('tabindex')) next.setAttribute('tabindex', '0');\n  return FocusResult.Success;\n}\n\nfunction contains(containers, element) {\n  for (var _iterator = _createForOfIteratorHelperLoose(containers), _step; !(_step = _iterator()).done;) {\n    var container = _step.value;\n    if (container.contains(element)) return true;\n  }\n\n  return false;\n}\n\nfunction useWindowEvent(type, listener, options) {\n  useEffect(function () {\n    window.addEventListener(type, listener, options);\n    return function () {\n      return window.removeEventListener(type, listener, options);\n    };\n  }, [type, listener, options]);\n}\n\nfunction useFocusTrap(containers, enabled, options) {\n  if (enabled === void 0) {\n    enabled = true;\n  }\n\n  if (options === void 0) {\n    options = {};\n  }\n\n  var restoreElement = useRef(typeof window !== 'undefined' ? document.activeElement : null);\n  var previousActiveElement = useRef(null);\n  var mounted = useRef(false); // Handle initial focus\n\n  useIsoMorphicEffect(function () {\n    var _options$initialFocus, _options$initialFocus3;\n\n    if (!enabled) return;\n    if (containers.current.size !== 1) return;\n    mounted.current = true;\n    var activeElement = document.activeElement;\n\n    if ((_options$initialFocus = options.initialFocus) == null ? void 0 : _options$initialFocus.current) {\n      var _options$initialFocus2;\n\n      if (((_options$initialFocus2 = options.initialFocus) == null ? void 0 : _options$initialFocus2.current) === activeElement) {\n        return; // Initial focus ref is already the active element\n      }\n    } else if (contains(containers.current, activeElement)) {\n      return; // Already focused within Dialog\n    }\n\n    restoreElement.current = activeElement; // Try to focus the initialFocus ref\n\n    if ((_options$initialFocus3 = options.initialFocus) == null ? void 0 : _options$initialFocus3.current) {\n      focusElement(options.initialFocus.current);\n    } else {\n      var couldFocus = false;\n\n      for (var _iterator = _createForOfIteratorHelperLoose(containers.current), _step; !(_step = _iterator()).done;) {\n        var container = _step.value;\n        var result = focusIn(container, Focus.First);\n\n        if (result === FocusResult.Success) {\n          couldFocus = true;\n          break;\n        }\n      }\n\n      if (!couldFocus) throw new Error('There are no focusable elements inside the <FocusTrap />');\n    }\n\n    previousActiveElement.current = document.activeElement;\n    return function () {\n      mounted.current = false;\n      focusElement(restoreElement.current);\n      restoreElement.current = null;\n      previousActiveElement.current = null;\n    };\n  }, [enabled, containers, mounted, options.initialFocus]); // Handle Tab & Shift+Tab keyboard events\n\n  useWindowEvent('keydown', function (event) {\n    if (!enabled) return;\n    if (event.key !== Keys.Tab) return;\n    if (!document.activeElement) return;\n    if (containers.current.size !== 1) return;\n    event.preventDefault();\n\n    for (var _iterator2 = _createForOfIteratorHelperLoose(containers.current), _step2; !(_step2 = _iterator2()).done;) {\n      var element = _step2.value;\n      var result = focusIn(element, (event.shiftKey ? Focus.Previous : Focus.Next) | Focus.WrapAround);\n\n      if (result === FocusResult.Success) {\n        previousActiveElement.current = document.activeElement;\n        break;\n      }\n    }\n  }); // Prevent programmatically escaping\n\n  useWindowEvent('focus', function (event) {\n    if (!enabled) return;\n    if (containers.current.size !== 1) return;\n    var previous = previousActiveElement.current;\n    if (!previous) return;\n    if (!mounted.current) return;\n    var toElement = event.target;\n\n    if (toElement && toElement instanceof HTMLElement) {\n      if (!contains(containers.current, toElement)) {\n        event.preventDefault();\n        event.stopPropagation();\n        focusElement(previous);\n      } else {\n        previousActiveElement.current = toElement;\n        focusElement(toElement);\n      }\n    } else {\n      focusElement(previousActiveElement.current);\n    }\n  }, true);\n}\n\nvar interactables = /*#__PURE__*/new Set();\nvar originals = /*#__PURE__*/new Map();\n\nfunction inert(element) {\n  element.setAttribute('aria-hidden', 'true'); // @ts-expect-error `inert` does not exist on HTMLElement (yet!)\n\n  element.inert = true;\n}\n\nfunction restore(element) {\n  var original = originals.get(element);\n  if (!original) return;\n  if (original['aria-hidden'] === null) element.removeAttribute('aria-hidden');else element.setAttribute('aria-hidden', original['aria-hidden']); // @ts-expect-error `inert` does not exist on HTMLElement (yet!)\n\n  element.inert = original.inert;\n}\n\nfunction useInertOthers(container, enabled) {\n  if (enabled === void 0) {\n    enabled = true;\n  }\n\n  useIsoMorphicEffect(function () {\n    if (!enabled) return;\n    if (!container.current) return;\n    var element = container.current; // Mark myself as an interactable element\n\n    interactables.add(element); // Restore elements that now contain an interactable child\n\n    for (var _iterator = _createForOfIteratorHelperLoose(originals.keys()), _step; !(_step = _iterator()).done;) {\n      var original = _step.value;\n\n      if (original.contains(element)) {\n        restore(original);\n        originals[\"delete\"](original);\n      }\n    } // Collect direct children of the body\n\n\n    document.querySelectorAll('body > *').forEach(function (child) {\n      if (!(child instanceof HTMLElement)) return; // Skip non-HTMLElements\n      // Skip the interactables, and the parents of the interactables\n\n      for (var _iterator2 = _createForOfIteratorHelperLoose(interactables), _step2; !(_step2 = _iterator2()).done;) {\n        var interactable = _step2.value;\n        if (child.contains(interactable)) return;\n      } // Keep track of the elements\n\n\n      if (interactables.size === 1) {\n        originals.set(child, {\n          'aria-hidden': child.getAttribute('aria-hidden'),\n          // @ts-expect-error `inert` does not exist on HTMLElement (yet!)\n          inert: child.inert\n        }); // Mutate the element\n\n        inert(child);\n      }\n    });\n    return function () {\n      // Inert is disabled on the current element\n      interactables[\"delete\"](element); // We still have interactable elements, therefore this one and its parent\n      // will become inert as well.\n\n      if (interactables.size > 0) {\n        // Collect direct children of the body\n        document.querySelectorAll('body > *').forEach(function (child) {\n          if (!(child instanceof HTMLElement)) return; // Skip non-HTMLElements\n          // Skip already inert parents\n\n          if (originals.has(child)) return; // Skip the interactables, and the parents of the interactables\n\n          for (var _iterator3 = _createForOfIteratorHelperLoose(interactables), _step3; !(_step3 = _iterator3()).done;) {\n            var interactable = _step3.value;\n            if (child.contains(interactable)) return;\n          }\n\n          originals.set(child, {\n            'aria-hidden': child.getAttribute('aria-hidden'),\n            // @ts-expect-error `inert` does not exist on HTMLElement (yet!)\n            inert: child.inert\n          }); // Mutate the element\n\n          inert(child);\n        });\n      } else {\n        for (var _iterator4 = _createForOfIteratorHelperLoose(originals.keys()), _step4; !(_step4 = _iterator4()).done;) {\n          var _element = _step4.value; // Restore\n\n          restore(_element); // Cleanup\n\n          originals[\"delete\"](_element);\n        }\n      }\n    };\n  }, [enabled]);\n}\n\nvar StackContext = /*#__PURE__*/createContext(function () {});\nStackContext.displayName = 'StackContext';\nvar StackMessage;\n\n(function (StackMessage) {\n  StackMessage[StackMessage[\"AddElement\"] = 0] = \"AddElement\";\n  StackMessage[StackMessage[\"RemoveElement\"] = 1] = \"RemoveElement\";\n})(StackMessage || (StackMessage = {}));\n\nfunction useStackContext() {\n  return useContext(StackContext);\n}\n\nfunction useElementStack(element) {\n  var notify = useStackContext();\n  useIsoMorphicEffect(function () {\n    if (!element) return;\n    notify(StackMessage.AddElement, element);\n    return function () {\n      return notify(StackMessage.RemoveElement, element);\n    };\n  }, [element]);\n}\n\nfunction StackProvider(_ref) {\n  var children = _ref.children,\n      onUpdate = _ref.onUpdate;\n  var parentUpdate = useStackContext();\n  var notify = useCallback(function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    } // Notify our layer\n\n\n    onUpdate == null ? void 0 : onUpdate.apply(void 0, args); // Notify the parent\n\n    parentUpdate.apply(void 0, args);\n  }, [parentUpdate, onUpdate]);\n  return React.createElement(StackContext.Provider, {\n    value: notify\n  }, children);\n}\n\nvar ForcePortalRootContext = /*#__PURE__*/createContext(false);\n\nfunction usePortalRoot() {\n  return useContext(ForcePortalRootContext);\n}\n\nfunction ForcePortalRoot(props) {\n  return React.createElement(ForcePortalRootContext.Provider, {\n    value: props.force\n  }, props.children);\n}\n\nfunction usePortalTarget() {\n  var forceInRoot = usePortalRoot();\n  var groupTarget = useContext(PortalGroupContext);\n\n  var _useState = useState(function () {\n    // Group context is used, but still null\n    if (!forceInRoot && groupTarget !== null) return null; // No group context is used, let's create a default portal root\n\n    if (typeof window === 'undefined') return null;\n    var existingRoot = document.getElementById('headlessui-portal-root');\n    if (existingRoot) return existingRoot;\n    var root = document.createElement('div');\n    root.setAttribute('id', 'headlessui-portal-root');\n    return document.body.appendChild(root);\n  }),\n      target = _useState[0],\n      setTarget = _useState[1];\n\n  useEffect(function () {\n    if (forceInRoot) return;\n    if (groupTarget === null) return;\n    setTarget(groupTarget.current);\n  }, [groupTarget, setTarget, forceInRoot]);\n  return target;\n} // ---\n\n\nvar DEFAULT_PORTAL_TAG = Fragment;\n\nfunction Portal(props) {\n  var passthroughProps = props;\n  var target = usePortalTarget();\n\n  var _useState2 = useState(function () {\n    return typeof window === 'undefined' ? null : document.createElement('div');\n  }),\n      element = _useState2[0];\n\n  useElementStack(element);\n  useIsoMorphicEffect(function () {\n    if (!target) return;\n    if (!element) return;\n    target.appendChild(element);\n    return function () {\n      if (!target) return;\n      if (!element) return;\n      target.removeChild(element);\n\n      if (target.childNodes.length <= 0) {\n        var _target$parentElement;\n\n        (_target$parentElement = target.parentElement) == null ? void 0 : _target$parentElement.removeChild(target);\n      }\n    };\n  }, [target, element]);\n  return React.createElement(StackProvider, null, !target || !element ? null : createPortal(render({\n    props: passthroughProps,\n    defaultTag: DEFAULT_PORTAL_TAG,\n    name: 'Portal'\n  }), element));\n} // ---\n\n\nvar DEFAULT_GROUP_TAG = Fragment;\nvar PortalGroupContext = /*#__PURE__*/createContext(null);\n\nfunction Group(props) {\n  var target = props.target,\n      passthroughProps = _objectWithoutPropertiesLoose(props, [\"target\"]);\n\n  return React.createElement(PortalGroupContext.Provider, {\n    value: target\n  }, render({\n    props: passthroughProps,\n    defaultTag: DEFAULT_GROUP_TAG,\n    name: 'Popover.Group'\n  }));\n} // ---\n\n\nPortal.Group = Group;\nvar DescriptionContext = /*#__PURE__*/createContext(null);\n\nfunction useDescriptionContext() {\n  var context = useContext(DescriptionContext);\n\n  if (context === null) {\n    var err = new Error('You used a <Description /> component, but it is not inside a relevant parent.');\n    if (Error.captureStackTrace) Error.captureStackTrace(err, useDescriptionContext);\n    throw err;\n  }\n\n  return context;\n}\n\nfunction useDescriptions() {\n  var _useState = useState([]),\n      descriptionIds = _useState[0],\n      setDescriptionIds = _useState[1];\n\n  return [// The actual id's as string or undefined\n  descriptionIds.length > 0 ? descriptionIds.join(' ') : undefined, // The provider component\n  useMemo(function () {\n    return function DescriptionProvider(props) {\n      var register = useCallback(function (value) {\n        setDescriptionIds(function (existing) {\n          return [].concat(existing, [value]);\n        });\n        return function () {\n          return setDescriptionIds(function (existing) {\n            var clone = existing.slice();\n            var idx = clone.indexOf(value);\n            if (idx !== -1) clone.splice(idx, 1);\n            return clone;\n          });\n        };\n      }, []);\n      var contextBag = useMemo(function () {\n        return {\n          register: register,\n          slot: props.slot,\n          name: props.name,\n          props: props.props\n        };\n      }, [register, props.slot, props.name, props.props]);\n      return React.createElement(DescriptionContext.Provider, {\n        value: contextBag\n      }, props.children);\n    };\n  }, [setDescriptionIds])];\n} // ---\n\n\nvar DEFAULT_DESCRIPTION_TAG = 'p';\n\nfunction Description(props) {\n  var context = useDescriptionContext();\n  var id = \"headlessui-description-\" + useId();\n  useIsoMorphicEffect(function () {\n    return context.register(id);\n  }, [id, context.register]);\n  var passThroughProps = props;\n\n  var propsWeControl = _extends({}, context.props, {\n    id: id\n  });\n\n  return render({\n    props: _extends({}, passThroughProps, propsWeControl),\n    slot: context.slot || {},\n    defaultTag: DEFAULT_DESCRIPTION_TAG,\n    name: context.name || 'Description'\n  });\n}\n\nvar _reducers;\n\nvar DialogStates;\n\n(function (DialogStates) {\n  DialogStates[DialogStates[\"Open\"] = 0] = \"Open\";\n  DialogStates[DialogStates[\"Closed\"] = 1] = \"Closed\";\n})(DialogStates || (DialogStates = {}));\n\nvar ActionTypes;\n\n(function (ActionTypes) {\n  ActionTypes[ActionTypes[\"SetTitleId\"] = 0] = \"SetTitleId\";\n})(ActionTypes || (ActionTypes = {}));\n\nvar reducers = (_reducers = {}, _reducers[ActionTypes.SetTitleId] = function (state, action) {\n  if (state.titleId === action.id) return state;\n  return _extends({}, state, {\n    titleId: action.id\n  });\n}, _reducers);\nvar DialogContext = /*#__PURE__*/createContext(null);\nDialogContext.displayName = 'DialogContext';\n\nfunction useDialogContext(component) {\n  var context = useContext(DialogContext);\n\n  if (context === null) {\n    var err = new Error(\"<\" + component + \" /> is missing a parent <\" + Dialog.displayName + \" /> component.\");\n    if (Error.captureStackTrace) Error.captureStackTrace(err, useDialogContext);\n    throw err;\n  }\n\n  return context;\n}\n\nfunction stateReducer(state, action) {\n  return match(action.type, reducers, state, action);\n} // ---\n\n\nvar DEFAULT_DIALOG_TAG = 'div';\nvar DialogRenderFeatures = Features.RenderStrategy | Features.Static;\nvar DialogRoot = /*#__PURE__*/forwardRefWithAs(function Dialog(props, ref) {\n  var open = props.open,\n      onClose = props.onClose,\n      initialFocus = props.initialFocus,\n      rest = _objectWithoutPropertiesLoose(props, [\"open\", \"onClose\", \"initialFocus\"]);\n\n  var containers = useRef(new Set());\n  var internalDialogRef = useRef(null);\n  var dialogRef = useSyncRefs(internalDialogRef, ref); // Validations\n\n  var hasOpen = props.hasOwnProperty('open');\n  var hasOnClose = props.hasOwnProperty('onClose');\n\n  if (!hasOpen && !hasOnClose) {\n    throw new Error(\"You have to provide an `open` and an `onClose` prop to the `Dialog` component.\");\n  }\n\n  if (!hasOpen) {\n    throw new Error(\"You provided an `onClose` prop to the `Dialog`, but forgot an `open` prop.\");\n  }\n\n  if (!hasOnClose) {\n    throw new Error(\"You provided an `open` prop to the `Dialog`, but forgot an `onClose` prop.\");\n  }\n\n  if (typeof open !== 'boolean') {\n    throw new Error(\"You provided an `open` prop to the `Dialog`, but the value is not a boolean. Received: \" + open);\n  }\n\n  if (typeof onClose !== 'function') {\n    throw new Error(\"You provided an `onClose` prop to the `Dialog`, but the value is not a function. Received: \" + onClose);\n  }\n\n  var dialogState = open ? DialogStates.Open : DialogStates.Closed;\n\n  var _useReducer = useReducer(stateReducer, {\n    titleId: null,\n    descriptionId: null\n  }),\n      state = _useReducer[0],\n      dispatch = _useReducer[1];\n\n  var close = useCallback(function () {\n    return onClose(false);\n  }, [onClose]);\n  var setTitleId = useCallback(function (id) {\n    return dispatch({\n      type: ActionTypes.SetTitleId,\n      id: id\n    });\n  }, [dispatch]); // Handle outside click\n\n  useWindowEvent('mousedown', function (event) {\n    var target = event.target;\n    if (dialogState !== DialogStates.Open) return;\n    if (containers.current.size !== 1) return;\n    if (contains(containers.current, target)) return;\n    close();\n  }); // Scroll lock\n\n  useEffect(function () {\n    if (dialogState !== DialogStates.Open) return;\n    var overflow = document.documentElement.style.overflow;\n    var paddingRight = document.documentElement.style.paddingRight;\n    var scrollbarWidth = window.innerWidth - document.documentElement.clientWidth;\n    document.documentElement.style.overflow = 'hidden';\n    document.documentElement.style.paddingRight = scrollbarWidth + \"px\";\n    return function () {\n      document.documentElement.style.overflow = overflow;\n      document.documentElement.style.paddingRight = paddingRight;\n    };\n  }, [dialogState]); // Trigger close when the FocusTrap gets hidden\n\n  useEffect(function () {\n    if (dialogState !== DialogStates.Open) return;\n    if (!internalDialogRef.current) return;\n    var observer = new IntersectionObserver(function (entries) {\n      for (var _iterator = _createForOfIteratorHelperLoose(entries), _step; !(_step = _iterator()).done;) {\n        var entry = _step.value;\n\n        if (entry.boundingClientRect.x === 0 && entry.boundingClientRect.y === 0 && entry.boundingClientRect.width === 0 && entry.boundingClientRect.height === 0) {\n          close();\n        }\n      }\n    });\n    observer.observe(internalDialogRef.current);\n    return function () {\n      return observer.disconnect();\n    };\n  }, [dialogState, internalDialogRef, close]);\n  var enabled = dialogState === DialogStates.Open;\n  useFocusTrap(containers, enabled, {\n    initialFocus: initialFocus\n  });\n  useInertOthers(internalDialogRef, enabled);\n\n  var _useDescriptions = useDescriptions(),\n      describedby = _useDescriptions[0],\n      DescriptionProvider = _useDescriptions[1];\n\n  var id = \"headlessui-dialog-\" + useId();\n  var contextBag = useMemo(function () {\n    return [{\n      dialogState: dialogState,\n      close: close,\n      setTitleId: setTitleId\n    }, state];\n  }, [dialogState, state, close, setTitleId]);\n  var slot = useMemo(function () {\n    return {\n      open: dialogState === DialogStates.Open\n    };\n  }, [dialogState]);\n  var propsWeControl = {\n    ref: dialogRef,\n    id: id,\n    role: 'dialog',\n    'aria-modal': dialogState === DialogStates.Open ? true : undefined,\n    'aria-labelledby': state.titleId,\n    'aria-describedby': describedby,\n    onClick: function onClick(event) {\n      event.stopPropagation();\n    },\n    // Handle `Escape` to close\n    onKeyDown: function onKeyDown(event) {\n      if (event.key !== Keys.Escape) return;\n      if (dialogState !== DialogStates.Open) return;\n      if (containers.current.size > 1) return; // 1 is myself, otherwise other elements in the Stack\n\n      event.preventDefault();\n      event.stopPropagation();\n      close();\n    }\n  };\n  var passthroughProps = rest;\n  return React.createElement(StackProvider, {\n    onUpdate: function onUpdate(message, element) {\n      var _match;\n\n      return match(message, (_match = {}, _match[StackMessage.AddElement] = function () {\n        containers.current.add(element);\n      }, _match[StackMessage.RemoveElement] = function () {\n        containers.current[\"delete\"](element);\n      }, _match));\n    }\n  }, React.createElement(ForcePortalRoot, {\n    force: true\n  }, React.createElement(Portal, null, React.createElement(DialogContext.Provider, {\n    value: contextBag\n  }, React.createElement(Portal.Group, {\n    target: internalDialogRef\n  }, React.createElement(ForcePortalRoot, {\n    force: false\n  }, React.createElement(DescriptionProvider, {\n    slot: slot,\n    name: \"Dialog.Description\"\n  }, render({\n    props: _extends({}, passthroughProps, propsWeControl),\n    slot: slot,\n    defaultTag: DEFAULT_DIALOG_TAG,\n    features: DialogRenderFeatures,\n    visible: dialogState === DialogStates.Open,\n    name: 'Dialog'\n  }))))))));\n}); // ---\n\nvar DEFAULT_OVERLAY_TAG = 'div';\nvar Overlay = /*#__PURE__*/forwardRefWithAs(function Overlay(props, ref) {\n  var _useDialogContext = useDialogContext([Dialog.displayName, Overlay.name].join('.')),\n      _useDialogContext$ = _useDialogContext[0],\n      dialogState = _useDialogContext$.dialogState,\n      close = _useDialogContext$.close;\n\n  var overlayRef = useSyncRefs(ref);\n  var id = \"headlessui-dialog-overlay-\" + useId();\n  var handleClick = useCallback(function (event) {\n    if (isDisabledReactIssue7711(event.currentTarget)) return event.preventDefault();\n    event.preventDefault();\n    event.stopPropagation();\n    close();\n  }, [close]);\n  var slot = useMemo(function () {\n    return {\n      open: dialogState === DialogStates.Open\n    };\n  }, [dialogState]);\n  var propsWeControl = {\n    ref: overlayRef,\n    id: id,\n    'aria-hidden': true,\n    onClick: handleClick\n  };\n  var passthroughProps = props;\n  return render({\n    props: _extends({}, passthroughProps, propsWeControl),\n    slot: slot,\n    defaultTag: DEFAULT_OVERLAY_TAG,\n    name: 'Dialog.Overlay'\n  });\n}); // ---\n\nvar DEFAULT_TITLE_TAG = 'h2';\n\nfunction Title(props) {\n  var _useDialogContext2 = useDialogContext([Dialog.displayName, Title.name].join('.')),\n      _useDialogContext2$ = _useDialogContext2[0],\n      dialogState = _useDialogContext2$.dialogState,\n      setTitleId = _useDialogContext2$.setTitleId;\n\n  var id = \"headlessui-dialog-title-\" + useId();\n  useEffect(function () {\n    setTitleId(id);\n    return function () {\n      return setTitleId(null);\n    };\n  }, [id, setTitleId]);\n  var slot = useMemo(function () {\n    return {\n      open: dialogState === DialogStates.Open\n    };\n  }, [dialogState]);\n  var propsWeControl = {\n    id: id\n  };\n  var passthroughProps = props;\n  return render({\n    props: _extends({}, passthroughProps, propsWeControl),\n    slot: slot,\n    defaultTag: DEFAULT_TITLE_TAG,\n    name: 'Dialog.Title'\n  });\n} // ---\n\n\nvar Dialog = /*#__PURE__*/Object.assign(DialogRoot, {\n  Overlay: Overlay,\n  Title: Title,\n  Description: Description\n});\n\nvar _reducers$1;\n\nvar DisclosureStates;\n\n(function (DisclosureStates) {\n  DisclosureStates[DisclosureStates[\"Open\"] = 0] = \"Open\";\n  DisclosureStates[DisclosureStates[\"Closed\"] = 1] = \"Closed\";\n})(DisclosureStates || (DisclosureStates = {}));\n\nvar ActionTypes$1;\n\n(function (ActionTypes) {\n  ActionTypes[ActionTypes[\"ToggleDisclosure\"] = 0] = \"ToggleDisclosure\";\n  ActionTypes[ActionTypes[\"SetButtonId\"] = 1] = \"SetButtonId\";\n  ActionTypes[ActionTypes[\"SetPanelId\"] = 2] = \"SetPanelId\";\n  ActionTypes[ActionTypes[\"LinkPanel\"] = 3] = \"LinkPanel\";\n  ActionTypes[ActionTypes[\"UnlinkPanel\"] = 4] = \"UnlinkPanel\";\n})(ActionTypes$1 || (ActionTypes$1 = {}));\n\nvar reducers$1 = (_reducers$1 = {}, _reducers$1[ActionTypes$1.ToggleDisclosure] = function (state) {\n  var _match;\n\n  return _extends({}, state, {\n    disclosureState: match(state.disclosureState, (_match = {}, _match[DisclosureStates.Open] = DisclosureStates.Closed, _match[DisclosureStates.Closed] = DisclosureStates.Open, _match))\n  });\n}, _reducers$1[ActionTypes$1.LinkPanel] = function (state) {\n  if (state.linkedPanel === true) return state;\n  return _extends({}, state, {\n    linkedPanel: true\n  });\n}, _reducers$1[ActionTypes$1.UnlinkPanel] = function (state) {\n  if (state.linkedPanel === false) return state;\n  return _extends({}, state, {\n    linkedPanel: false\n  });\n}, _reducers$1[ActionTypes$1.SetButtonId] = function (state, action) {\n  if (state.buttonId === action.buttonId) return state;\n  return _extends({}, state, {\n    buttonId: action.buttonId\n  });\n}, _reducers$1[ActionTypes$1.SetPanelId] = function (state, action) {\n  if (state.panelId === action.panelId) return state;\n  return _extends({}, state, {\n    panelId: action.panelId\n  });\n}, _reducers$1);\nvar DisclosureContext = /*#__PURE__*/createContext(null);\nDisclosureContext.displayName = 'DisclosureContext';\n\nfunction useDisclosureContext(component) {\n  var context = useContext(DisclosureContext);\n\n  if (context === null) {\n    var err = new Error(\"<\" + component + \" /> is missing a parent <\" + Disclosure.name + \" /> component.\");\n    if (Error.captureStackTrace) Error.captureStackTrace(err, useDisclosureContext);\n    throw err;\n  }\n\n  return context;\n}\n\nfunction stateReducer$1(state, action) {\n  return match(action.type, reducers$1, state, action);\n} // ---\n\n\nvar DEFAULT_DISCLOSURE_TAG = Fragment;\n\nfunction Disclosure(props) {\n  var _props$defaultOpen = props.defaultOpen,\n      defaultOpen = _props$defaultOpen === void 0 ? false : _props$defaultOpen,\n      passthroughProps = _objectWithoutPropertiesLoose(props, [\"defaultOpen\"]);\n\n  var buttonId = \"headlessui-disclosure-button-\" + useId();\n  var panelId = \"headlessui-disclosure-panel-\" + useId();\n  var reducerBag = useReducer(stateReducer$1, {\n    disclosureState: defaultOpen ? DisclosureStates.Open : DisclosureStates.Closed,\n    linkedPanel: false,\n    buttonId: buttonId,\n    panelId: panelId\n  });\n  var disclosureState = reducerBag[0].disclosureState,\n      dispatch = reducerBag[1];\n  useEffect(function () {\n    return dispatch({\n      type: ActionTypes$1.SetButtonId,\n      buttonId: buttonId\n    });\n  }, [buttonId, dispatch]);\n  useEffect(function () {\n    return dispatch({\n      type: ActionTypes$1.SetPanelId,\n      panelId: panelId\n    });\n  }, [panelId, dispatch]);\n  var slot = useMemo(function () {\n    return {\n      open: disclosureState === DisclosureStates.Open\n    };\n  }, [disclosureState]);\n  return React.createElement(DisclosureContext.Provider, {\n    value: reducerBag\n  }, render({\n    props: passthroughProps,\n    slot: slot,\n    defaultTag: DEFAULT_DISCLOSURE_TAG,\n    name: 'Disclosure'\n  }));\n} // ---\n\n\nvar DEFAULT_BUTTON_TAG = 'button';\nvar Button = /*#__PURE__*/forwardRefWithAs(function Button(props, ref) {\n  var _useDisclosureContext = useDisclosureContext([Disclosure.name, Button.name].join('.')),\n      state = _useDisclosureContext[0],\n      dispatch = _useDisclosureContext[1];\n\n  var buttonRef = useSyncRefs(ref);\n  var handleKeyDown = useCallback(function (event) {\n    switch (event.key) {\n      case Keys.Space:\n      case Keys.Enter:\n        event.preventDefault();\n        event.stopPropagation();\n        dispatch({\n          type: ActionTypes$1.ToggleDisclosure\n        });\n        break;\n    }\n  }, [dispatch]);\n  var handleKeyUp = useCallback(function (event) {\n    switch (event.key) {\n      case Keys.Space:\n        // Required for firefox, event.preventDefault() in handleKeyDown for\n        // the Space key doesn't cancel the handleKeyUp, which in turn\n        // triggers a *click*.\n        event.preventDefault();\n        break;\n    }\n  }, []);\n  var handleClick = useCallback(function (event) {\n    if (isDisabledReactIssue7711(event.currentTarget)) return;\n    if (props.disabled) return;\n    dispatch({\n      type: ActionTypes$1.ToggleDisclosure\n    });\n  }, [dispatch, props.disabled]);\n  var slot = useMemo(function () {\n    return {\n      open: state.disclosureState === DisclosureStates.Open\n    };\n  }, [state]);\n  var passthroughProps = props;\n  var propsWeControl = {\n    ref: buttonRef,\n    id: state.buttonId,\n    type: 'button',\n    'aria-expanded': state.disclosureState === DisclosureStates.Open ? true : undefined,\n    'aria-controls': state.linkedPanel ? state.panelId : undefined,\n    onKeyDown: handleKeyDown,\n    onKeyUp: handleKeyUp,\n    onClick: handleClick\n  };\n  return render({\n    props: _extends({}, passthroughProps, propsWeControl),\n    slot: slot,\n    defaultTag: DEFAULT_BUTTON_TAG,\n    name: 'Disclosure.Button'\n  });\n}); // ---\n\nvar DEFAULT_PANEL_TAG = 'div';\nvar PanelRenderFeatures = Features.RenderStrategy | Features.Static;\nvar Panel = /*#__PURE__*/forwardRefWithAs(function Panel(props, ref) {\n  var _useDisclosureContext2 = useDisclosureContext([Disclosure.name, Panel.name].join('.')),\n      state = _useDisclosureContext2[0],\n      dispatch = _useDisclosureContext2[1];\n\n  var panelRef = useSyncRefs(ref, function () {\n    if (state.linkedPanel) return;\n    dispatch({\n      type: ActionTypes$1.LinkPanel\n    });\n  }); // Unlink on \"unmount\" myself\n\n  useEffect(function () {\n    return function () {\n      return dispatch({\n        type: ActionTypes$1.UnlinkPanel\n      });\n    };\n  }, [dispatch]); // Unlink on \"unmount\" children\n\n  useEffect(function () {\n    var _props$unmount;\n\n    if (state.disclosureState === DisclosureStates.Closed && ((_props$unmount = props.unmount) != null ? _props$unmount : true)) {\n      dispatch({\n        type: ActionTypes$1.UnlinkPanel\n      });\n    }\n  }, [state.disclosureState, props.unmount, dispatch]);\n  var slot = useMemo(function () {\n    return {\n      open: state.disclosureState === DisclosureStates.Open\n    };\n  }, [state]);\n  var propsWeControl = {\n    ref: panelRef,\n    id: state.panelId\n  };\n  var passthroughProps = props;\n  return render({\n    props: _extends({}, passthroughProps, propsWeControl),\n    slot: slot,\n    defaultTag: DEFAULT_PANEL_TAG,\n    features: PanelRenderFeatures,\n    visible: state.disclosureState === DisclosureStates.Open,\n    name: 'Disclosure.Panel'\n  });\n}); // ---\n\nDisclosure.Button = Button;\nDisclosure.Panel = Panel;\nvar DEFAULT_FOCUS_TRAP_TAG = 'div';\n\nfunction FocusTrap(props) {\n  var containers = useRef(new Set());\n\n  var initialFocus = props.initialFocus,\n      passthroughProps = _objectWithoutPropertiesLoose(props, [\"initialFocus\"]);\n\n  useFocusTrap(containers, true, {\n    initialFocus: initialFocus\n  });\n  var propsWeControl = {\n    ref: function ref(element) {\n      if (!element) return;\n      containers.current.add(element);\n    }\n  };\n  return render({\n    props: _extends({}, passthroughProps, propsWeControl),\n    defaultTag: DEFAULT_FOCUS_TRAP_TAG,\n    name: 'FocusTrap'\n  });\n}\n\nfunction disposables() {\n  var disposables = [];\n  var api = {\n    requestAnimationFrame: function (_requestAnimationFrame) {\n      function requestAnimationFrame() {\n        return _requestAnimationFrame.apply(this, arguments);\n      }\n\n      requestAnimationFrame.toString = function () {\n        return _requestAnimationFrame.toString();\n      };\n\n      return requestAnimationFrame;\n    }(function () {\n      var raf = requestAnimationFrame.apply(void 0, arguments);\n      api.add(function () {\n        return cancelAnimationFrame(raf);\n      });\n    }),\n    nextFrame: function nextFrame() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      api.requestAnimationFrame(function () {\n        api.requestAnimationFrame.apply(api, args);\n      });\n    },\n    setTimeout: function (_setTimeout) {\n      function setTimeout() {\n        return _setTimeout.apply(this, arguments);\n      }\n\n      setTimeout.toString = function () {\n        return _setTimeout.toString();\n      };\n\n      return setTimeout;\n    }(function () {\n      var timer = setTimeout.apply(void 0, arguments);\n      api.add(function () {\n        return clearTimeout(timer);\n      });\n    }),\n    add: function add(cb) {\n      disposables.push(cb);\n    },\n    dispose: function dispose() {\n      for (var _iterator = _createForOfIteratorHelperLoose(disposables.splice(0)), _step; !(_step = _iterator()).done;) {\n        var dispose = _step.value;\n        dispose();\n      }\n    }\n  };\n  return api;\n}\n\nfunction useDisposables() {\n  // Using useState instead of useRef so that we can use the initializer function.\n  var _useState = useState(disposables),\n      d = _useState[0];\n\n  useEffect(function () {\n    return function () {\n      return d.dispose();\n    };\n  }, [d]);\n  return d;\n}\n\nfunction useComputed(cb, dependencies) {\n  var _useState = useState(cb),\n      value = _useState[0],\n      setValue = _useState[1];\n\n  var cbRef = useRef(cb);\n  useIsoMorphicEffect(function () {\n    cbRef.current = cb;\n  }, [cb]);\n  useIsoMorphicEffect(function () {\n    return setValue(cbRef.current);\n  }, [cbRef, setValue].concat(dependencies));\n  return value;\n}\n\nfunction assertNever(x) {\n  throw new Error('Unexpected object: ' + x);\n}\n\nvar Focus$1;\n\n(function (Focus) {\n  /** Focus the first non-disabled item. */\n  Focus[Focus[\"First\"] = 0] = \"First\";\n  /** Focus the previous non-disabled item. */\n\n  Focus[Focus[\"Previous\"] = 1] = \"Previous\";\n  /** Focus the next non-disabled item. */\n\n  Focus[Focus[\"Next\"] = 2] = \"Next\";\n  /** Focus the last non-disabled item. */\n\n  Focus[Focus[\"Last\"] = 3] = \"Last\";\n  /** Focus a specific item based on the `id` of the item. */\n\n  Focus[Focus[\"Specific\"] = 4] = \"Specific\";\n  /** Focus no items at all. */\n\n  Focus[Focus[\"Nothing\"] = 5] = \"Nothing\";\n})(Focus$1 || (Focus$1 = {}));\n\nfunction calculateActiveIndex(action, resolvers) {\n  var items = resolvers.resolveItems();\n  if (items.length <= 0) return null;\n  var currentActiveIndex = resolvers.resolveActiveIndex();\n  var activeIndex = currentActiveIndex != null ? currentActiveIndex : -1;\n\n  var nextActiveIndex = function () {\n    switch (action.focus) {\n      case Focus$1.First:\n        return items.findIndex(function (item) {\n          return !resolvers.resolveDisabled(item);\n        });\n\n      case Focus$1.Previous:\n        {\n          var idx = items.slice().reverse().findIndex(function (item, idx, all) {\n            if (activeIndex !== -1 && all.length - idx - 1 >= activeIndex) return false;\n            return !resolvers.resolveDisabled(item);\n          });\n          if (idx === -1) return idx;\n          return items.length - 1 - idx;\n        }\n\n      case Focus$1.Next:\n        return items.findIndex(function (item, idx) {\n          if (idx <= activeIndex) return false;\n          return !resolvers.resolveDisabled(item);\n        });\n\n      case Focus$1.Last:\n        {\n          var _idx = items.slice().reverse().findIndex(function (item) {\n            return !resolvers.resolveDisabled(item);\n          });\n\n          if (_idx === -1) return _idx;\n          return items.length - 1 - _idx;\n        }\n\n      case Focus$1.Specific:\n        return items.findIndex(function (item) {\n          return resolvers.resolveId(item) === action.id;\n        });\n\n      case Focus$1.Nothing:\n        return null;\n\n      default:\n        assertNever(action);\n    }\n  }();\n\n  return nextActiveIndex === -1 ? currentActiveIndex : nextActiveIndex;\n}\n\nvar _reducers$2;\n\nvar ListboxStates;\n\n(function (ListboxStates) {\n  ListboxStates[ListboxStates[\"Open\"] = 0] = \"Open\";\n  ListboxStates[ListboxStates[\"Closed\"] = 1] = \"Closed\";\n})(ListboxStates || (ListboxStates = {}));\n\nvar ActionTypes$2;\n\n(function (ActionTypes) {\n  ActionTypes[ActionTypes[\"OpenListbox\"] = 0] = \"OpenListbox\";\n  ActionTypes[ActionTypes[\"CloseListbox\"] = 1] = \"CloseListbox\";\n  ActionTypes[ActionTypes[\"SetDisabled\"] = 2] = \"SetDisabled\";\n  ActionTypes[ActionTypes[\"GoToOption\"] = 3] = \"GoToOption\";\n  ActionTypes[ActionTypes[\"Search\"] = 4] = \"Search\";\n  ActionTypes[ActionTypes[\"ClearSearch\"] = 5] = \"ClearSearch\";\n  ActionTypes[ActionTypes[\"RegisterOption\"] = 6] = \"RegisterOption\";\n  ActionTypes[ActionTypes[\"UnregisterOption\"] = 7] = \"UnregisterOption\";\n})(ActionTypes$2 || (ActionTypes$2 = {}));\n\nvar reducers$2 = (_reducers$2 = {}, _reducers$2[ActionTypes$2.CloseListbox] = function (state) {\n  if (state.disabled) return state;\n  if (state.listboxState === ListboxStates.Closed) return state;\n  return _extends({}, state, {\n    activeOptionIndex: null,\n    listboxState: ListboxStates.Closed\n  });\n}, _reducers$2[ActionTypes$2.OpenListbox] = function (state) {\n  if (state.disabled) return state;\n  if (state.listboxState === ListboxStates.Open) return state;\n  return _extends({}, state, {\n    listboxState: ListboxStates.Open\n  });\n}, _reducers$2[ActionTypes$2.SetDisabled] = function (state, action) {\n  if (state.disabled === action.disabled) return state;\n  return _extends({}, state, {\n    disabled: action.disabled\n  });\n}, _reducers$2[ActionTypes$2.GoToOption] = function (state, action) {\n  if (state.disabled) return state;\n  if (state.listboxState === ListboxStates.Closed) return state;\n  var activeOptionIndex = calculateActiveIndex(action, {\n    resolveItems: function resolveItems() {\n      return state.options;\n    },\n    resolveActiveIndex: function resolveActiveIndex() {\n      return state.activeOptionIndex;\n    },\n    resolveId: function resolveId(item) {\n      return item.id;\n    },\n    resolveDisabled: function resolveDisabled(item) {\n      return item.dataRef.current.disabled;\n    }\n  });\n  if (state.searchQuery === '' && state.activeOptionIndex === activeOptionIndex) return state;\n  return _extends({}, state, {\n    searchQuery: '',\n    activeOptionIndex: activeOptionIndex\n  });\n}, _reducers$2[ActionTypes$2.Search] = function (state, action) {\n  if (state.disabled) return state;\n  if (state.listboxState === ListboxStates.Closed) return state;\n  var searchQuery = state.searchQuery + action.value.toLowerCase();\n  var match = state.options.findIndex(function (option) {\n    var _option$dataRef$curre;\n\n    return !option.dataRef.current.disabled && ((_option$dataRef$curre = option.dataRef.current.textValue) == null ? void 0 : _option$dataRef$curre.startsWith(searchQuery));\n  });\n  if (match === -1 || match === state.activeOptionIndex) return _extends({}, state, {\n    searchQuery: searchQuery\n  });\n  return _extends({}, state, {\n    searchQuery: searchQuery,\n    activeOptionIndex: match\n  });\n}, _reducers$2[ActionTypes$2.ClearSearch] = function (state) {\n  if (state.disabled) return state;\n  if (state.listboxState === ListboxStates.Closed) return state;\n  if (state.searchQuery === '') return state;\n  return _extends({}, state, {\n    searchQuery: ''\n  });\n}, _reducers$2[ActionTypes$2.RegisterOption] = function (state, action) {\n  return _extends({}, state, {\n    options: [].concat(state.options, [{\n      id: action.id,\n      dataRef: action.dataRef\n    }])\n  });\n}, _reducers$2[ActionTypes$2.UnregisterOption] = function (state, action) {\n  var nextOptions = state.options.slice();\n  var currentActiveOption = state.activeOptionIndex !== null ? nextOptions[state.activeOptionIndex] : null;\n  var idx = nextOptions.findIndex(function (a) {\n    return a.id === action.id;\n  });\n  if (idx !== -1) nextOptions.splice(idx, 1);\n  return _extends({}, state, {\n    options: nextOptions,\n    activeOptionIndex: function () {\n      if (idx === state.activeOptionIndex) return null;\n      if (currentActiveOption === null) return null; // If we removed the option before the actual active index, then it would be out of sync. To\n      // fix this, we will find the correct (new) index position.\n\n      return nextOptions.indexOf(currentActiveOption);\n    }()\n  });\n}, _reducers$2);\nvar ListboxContext = /*#__PURE__*/createContext(null);\nListboxContext.displayName = 'ListboxContext';\n\nfunction useListboxContext(component) {\n  var context = useContext(ListboxContext);\n\n  if (context === null) {\n    var err = new Error(\"<\" + component + \" /> is missing a parent <\" + Listbox.name + \" /> component.\");\n    if (Error.captureStackTrace) Error.captureStackTrace(err, useListboxContext);\n    throw err;\n  }\n\n  return context;\n}\n\nfunction stateReducer$2(state, action) {\n  return match(action.type, reducers$2, state, action);\n} // ---\n\n\nvar DEFAULT_LISTBOX_TAG = Fragment;\n\nfunction Listbox(props) {\n  var value = props.value,\n      onChange = props.onChange,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      passThroughProps = _objectWithoutPropertiesLoose(props, [\"value\", \"onChange\", \"disabled\"]);\n\n  var reducerBag = useReducer(stateReducer$2, {\n    listboxState: ListboxStates.Closed,\n    propsRef: {\n      current: {\n        value: value,\n        onChange: onChange\n      }\n    },\n    labelRef: createRef(),\n    buttonRef: createRef(),\n    optionsRef: createRef(),\n    disabled: disabled,\n    options: [],\n    searchQuery: '',\n    activeOptionIndex: null\n  });\n  var _reducerBag$ = reducerBag[0],\n      listboxState = _reducerBag$.listboxState,\n      propsRef = _reducerBag$.propsRef,\n      optionsRef = _reducerBag$.optionsRef,\n      buttonRef = _reducerBag$.buttonRef,\n      dispatch = reducerBag[1];\n  useIsoMorphicEffect(function () {\n    propsRef.current.value = value;\n  }, [value, propsRef]);\n  useIsoMorphicEffect(function () {\n    propsRef.current.onChange = onChange;\n  }, [onChange, propsRef]);\n  useIsoMorphicEffect(function () {\n    return dispatch({\n      type: ActionTypes$2.SetDisabled,\n      disabled: disabled\n    });\n  }, [disabled]); // Handle outside click\n\n  useWindowEvent('mousedown', function (event) {\n    var _buttonRef$current, _optionsRef$current;\n\n    var target = event.target;\n    if (listboxState !== ListboxStates.Open) return;\n    if ((_buttonRef$current = buttonRef.current) == null ? void 0 : _buttonRef$current.contains(target)) return;\n    if ((_optionsRef$current = optionsRef.current) == null ? void 0 : _optionsRef$current.contains(target)) return;\n    dispatch({\n      type: ActionTypes$2.CloseListbox\n    });\n\n    if (!isFocusableElement(target, FocusableMode.Loose)) {\n      var _buttonRef$current2;\n\n      event.preventDefault();\n      (_buttonRef$current2 = buttonRef.current) == null ? void 0 : _buttonRef$current2.focus();\n    }\n  });\n  var slot = useMemo(function () {\n    return {\n      open: listboxState === ListboxStates.Open,\n      disabled: disabled\n    };\n  }, [listboxState, disabled]);\n  return React.createElement(ListboxContext.Provider, {\n    value: reducerBag\n  }, render({\n    props: passThroughProps,\n    slot: slot,\n    defaultTag: DEFAULT_LISTBOX_TAG,\n    name: 'Listbox'\n  }));\n} // ---\n\n\nvar DEFAULT_BUTTON_TAG$1 = 'button';\nvar Button$1 = /*#__PURE__*/forwardRefWithAs(function Button(props, ref) {\n  var _state$optionsRef$cur;\n\n  var _useListboxContext = useListboxContext([Listbox.name, Button.name].join('.')),\n      state = _useListboxContext[0],\n      dispatch = _useListboxContext[1];\n\n  var buttonRef = useSyncRefs(state.buttonRef, ref);\n  var id = \"headlessui-listbox-button-\" + useId();\n  var d = useDisposables();\n  var handleKeyDown = useCallback(function (event) {\n    switch (event.key) {\n      // Ref: https://www.w3.org/TR/wai-aria-practices-1.2/#keyboard-interaction-13\n      case Keys.Space:\n      case Keys.Enter:\n      case Keys.ArrowDown:\n        event.preventDefault();\n        dispatch({\n          type: ActionTypes$2.OpenListbox\n        });\n        d.nextFrame(function () {\n          if (!state.propsRef.current.value) dispatch({\n            type: ActionTypes$2.GoToOption,\n            focus: Focus$1.First\n          });\n        });\n        break;\n\n      case Keys.ArrowUp:\n        event.preventDefault();\n        dispatch({\n          type: ActionTypes$2.OpenListbox\n        });\n        d.nextFrame(function () {\n          if (!state.propsRef.current.value) dispatch({\n            type: ActionTypes$2.GoToOption,\n            focus: Focus$1.Last\n          });\n        });\n        break;\n    }\n  }, [dispatch, state, d]);\n  var handleKeyUp = useCallback(function (event) {\n    switch (event.key) {\n      case Keys.Space:\n        // Required for firefox, event.preventDefault() in handleKeyDown for\n        // the Space key doesn't cancel the handleKeyUp, which in turn\n        // triggers a *click*.\n        event.preventDefault();\n        break;\n    }\n  }, []);\n  var handleClick = useCallback(function (event) {\n    if (isDisabledReactIssue7711(event.currentTarget)) return event.preventDefault();\n\n    if (state.listboxState === ListboxStates.Open) {\n      dispatch({\n        type: ActionTypes$2.CloseListbox\n      });\n      d.nextFrame(function () {\n        var _state$buttonRef$curr;\n\n        return (_state$buttonRef$curr = state.buttonRef.current) == null ? void 0 : _state$buttonRef$curr.focus({\n          preventScroll: true\n        });\n      });\n    } else {\n      event.preventDefault();\n      dispatch({\n        type: ActionTypes$2.OpenListbox\n      });\n    }\n  }, [dispatch, d, state]);\n  var labelledby = useComputed(function () {\n    if (!state.labelRef.current) return undefined;\n    return [state.labelRef.current.id, id].join(' ');\n  }, [state.labelRef.current, id]);\n  var slot = useMemo(function () {\n    return {\n      open: state.listboxState === ListboxStates.Open,\n      disabled: state.disabled\n    };\n  }, [state]);\n  var passthroughProps = props;\n  var propsWeControl = {\n    ref: buttonRef,\n    id: id,\n    type: 'button',\n    'aria-haspopup': true,\n    'aria-controls': (_state$optionsRef$cur = state.optionsRef.current) == null ? void 0 : _state$optionsRef$cur.id,\n    'aria-expanded': state.listboxState === ListboxStates.Open ? true : undefined,\n    'aria-labelledby': labelledby,\n    disabled: state.disabled,\n    onKeyDown: handleKeyDown,\n    onKeyUp: handleKeyUp,\n    onClick: handleClick\n  };\n  return render({\n    props: _extends({}, passthroughProps, propsWeControl),\n    slot: slot,\n    defaultTag: DEFAULT_BUTTON_TAG$1,\n    name: 'Listbox.Button'\n  });\n}); // ---\n\nvar DEFAULT_LABEL_TAG = 'label';\n\nfunction Label(props) {\n  var _useListboxContext2 = useListboxContext([Listbox.name, Label.name].join('.')),\n      state = _useListboxContext2[0];\n\n  var id = \"headlessui-listbox-label-\" + useId();\n  var handleClick = useCallback(function () {\n    var _state$buttonRef$curr2;\n\n    return (_state$buttonRef$curr2 = state.buttonRef.current) == null ? void 0 : _state$buttonRef$curr2.focus({\n      preventScroll: true\n    });\n  }, [state.buttonRef]);\n  var slot = useMemo(function () {\n    return {\n      open: state.listboxState === ListboxStates.Open,\n      disabled: state.disabled\n    };\n  }, [state]);\n  var propsWeControl = {\n    ref: state.labelRef,\n    id: id,\n    onClick: handleClick\n  };\n  return render({\n    props: _extends({}, props, propsWeControl),\n    slot: slot,\n    defaultTag: DEFAULT_LABEL_TAG,\n    name: 'Listbox.Label'\n  });\n} // ---\n\n\nvar DEFAULT_OPTIONS_TAG = 'ul';\nvar OptionsRenderFeatures = Features.RenderStrategy | Features.Static;\nvar Options = /*#__PURE__*/forwardRefWithAs(function Options(props, ref) {\n  var _state$options$state$;\n\n  var _useListboxContext3 = useListboxContext([Listbox.name, Options.name].join('.')),\n      state = _useListboxContext3[0],\n      dispatch = _useListboxContext3[1];\n\n  var optionsRef = useSyncRefs(state.optionsRef, ref);\n  var id = \"headlessui-listbox-options-\" + useId();\n  var d = useDisposables();\n  var searchDisposables = useDisposables();\n  useIsoMorphicEffect(function () {\n    var container = state.optionsRef.current;\n    if (!container) return;\n    if (state.listboxState !== ListboxStates.Open) return;\n    if (container === document.activeElement) return;\n    container.focus({\n      preventScroll: true\n    });\n  }, [state.listboxState, state.optionsRef]);\n  var handleKeyDown = useCallback(function (event) {\n    searchDisposables.dispose();\n\n    switch (event.key) {\n      // Ref: https://www.w3.org/TR/wai-aria-practices-1.2/#keyboard-interaction-12\n      // @ts-expect-error Fallthrough is expected here\n      case Keys.Space:\n        if (state.searchQuery !== '') {\n          event.preventDefault();\n          event.stopPropagation();\n          return dispatch({\n            type: ActionTypes$2.Search,\n            value: event.key\n          });\n        }\n\n      // When in type ahead mode, fallthrough\n\n      case Keys.Enter:\n        event.preventDefault();\n        event.stopPropagation();\n        dispatch({\n          type: ActionTypes$2.CloseListbox\n        });\n\n        if (state.activeOptionIndex !== null) {\n          var dataRef = state.options[state.activeOptionIndex].dataRef;\n          state.propsRef.current.onChange(dataRef.current.value);\n        }\n\n        disposables().nextFrame(function () {\n          var _state$buttonRef$curr3;\n\n          return (_state$buttonRef$curr3 = state.buttonRef.current) == null ? void 0 : _state$buttonRef$curr3.focus({\n            preventScroll: true\n          });\n        });\n        break;\n\n      case Keys.ArrowDown:\n        event.preventDefault();\n        event.stopPropagation();\n        return dispatch({\n          type: ActionTypes$2.GoToOption,\n          focus: Focus$1.Next\n        });\n\n      case Keys.ArrowUp:\n        event.preventDefault();\n        event.stopPropagation();\n        return dispatch({\n          type: ActionTypes$2.GoToOption,\n          focus: Focus$1.Previous\n        });\n\n      case Keys.Home:\n      case Keys.PageUp:\n        event.preventDefault();\n        event.stopPropagation();\n        return dispatch({\n          type: ActionTypes$2.GoToOption,\n          focus: Focus$1.First\n        });\n\n      case Keys.End:\n      case Keys.PageDown:\n        event.preventDefault();\n        event.stopPropagation();\n        return dispatch({\n          type: ActionTypes$2.GoToOption,\n          focus: Focus$1.Last\n        });\n\n      case Keys.Escape:\n        event.preventDefault();\n        event.stopPropagation();\n        dispatch({\n          type: ActionTypes$2.CloseListbox\n        });\n        return d.nextFrame(function () {\n          var _state$buttonRef$curr4;\n\n          return (_state$buttonRef$curr4 = state.buttonRef.current) == null ? void 0 : _state$buttonRef$curr4.focus({\n            preventScroll: true\n          });\n        });\n\n      case Keys.Tab:\n        event.preventDefault();\n        event.stopPropagation();\n        break;\n\n      default:\n        if (event.key.length === 1) {\n          dispatch({\n            type: ActionTypes$2.Search,\n            value: event.key\n          });\n          searchDisposables.setTimeout(function () {\n            return dispatch({\n              type: ActionTypes$2.ClearSearch\n            });\n          }, 350);\n        }\n\n        break;\n    }\n  }, [d, dispatch, searchDisposables, state]);\n  var labelledby = useComputed(function () {\n    var _state$labelRef$curre, _state$labelRef$curre2, _state$buttonRef$curr5;\n\n    return (_state$labelRef$curre = (_state$labelRef$curre2 = state.labelRef.current) == null ? void 0 : _state$labelRef$curre2.id) != null ? _state$labelRef$curre : (_state$buttonRef$curr5 = state.buttonRef.current) == null ? void 0 : _state$buttonRef$curr5.id;\n  }, [state.labelRef.current, state.buttonRef.current]);\n  var slot = useMemo(function () {\n    return {\n      open: state.listboxState === ListboxStates.Open\n    };\n  }, [state]);\n  var propsWeControl = {\n    'aria-activedescendant': state.activeOptionIndex === null ? undefined : (_state$options$state$ = state.options[state.activeOptionIndex]) == null ? void 0 : _state$options$state$.id,\n    'aria-labelledby': labelledby,\n    id: id,\n    onKeyDown: handleKeyDown,\n    role: 'listbox',\n    tabIndex: 0,\n    ref: optionsRef\n  };\n  var passthroughProps = props;\n  return render({\n    props: _extends({}, passthroughProps, propsWeControl),\n    slot: slot,\n    defaultTag: DEFAULT_OPTIONS_TAG,\n    features: OptionsRenderFeatures,\n    visible: state.listboxState === ListboxStates.Open,\n    name: 'Listbox.Options'\n  });\n}); // ---\n\nvar DEFAULT_OPTION_TAG = 'li';\n\nfunction Option(props) {\n  var _props$disabled2 = props.disabled,\n      disabled = _props$disabled2 === void 0 ? false : _props$disabled2,\n      value = props.value,\n      passthroughProps = _objectWithoutPropertiesLoose(props, [\"disabled\", \"value\"]);\n\n  var _useListboxContext4 = useListboxContext([Listbox.name, Option.name].join('.')),\n      state = _useListboxContext4[0],\n      dispatch = _useListboxContext4[1];\n\n  var id = \"headlessui-listbox-option-\" + useId();\n  var active = state.activeOptionIndex !== null ? state.options[state.activeOptionIndex].id === id : false;\n  var selected = state.propsRef.current.value === value;\n  var bag = useRef({\n    disabled: disabled,\n    value: value\n  });\n  useIsoMorphicEffect(function () {\n    bag.current.disabled = disabled;\n  }, [bag, disabled]);\n  useIsoMorphicEffect(function () {\n    bag.current.value = value;\n  }, [bag, value]);\n  useIsoMorphicEffect(function () {\n    var _document$getElementB, _document$getElementB2;\n\n    bag.current.textValue = (_document$getElementB = document.getElementById(id)) == null ? void 0 : (_document$getElementB2 = _document$getElementB.textContent) == null ? void 0 : _document$getElementB2.toLowerCase();\n  }, [bag, id]);\n  var select = useCallback(function () {\n    return state.propsRef.current.onChange(value);\n  }, [state.propsRef, value]);\n  useIsoMorphicEffect(function () {\n    dispatch({\n      type: ActionTypes$2.RegisterOption,\n      id: id,\n      dataRef: bag\n    });\n    return function () {\n      return dispatch({\n        type: ActionTypes$2.UnregisterOption,\n        id: id\n      });\n    };\n  }, [bag, id]);\n  useIsoMorphicEffect(function () {\n    var _document$getElementB3;\n\n    if (state.listboxState !== ListboxStates.Open) return;\n    if (!selected) return;\n    dispatch({\n      type: ActionTypes$2.GoToOption,\n      focus: Focus$1.Specific,\n      id: id\n    });\n    (_document$getElementB3 = document.getElementById(id)) == null ? void 0 : _document$getElementB3.focus == null ? void 0 : _document$getElementB3.focus();\n  }, [state.listboxState]);\n  useIsoMorphicEffect(function () {\n    if (state.listboxState !== ListboxStates.Open) return;\n    if (!active) return;\n    var d = disposables();\n    d.nextFrame(function () {\n      var _document$getElementB4;\n\n      return (_document$getElementB4 = document.getElementById(id)) == null ? void 0 : _document$getElementB4.scrollIntoView == null ? void 0 : _document$getElementB4.scrollIntoView({\n        block: 'nearest'\n      });\n    });\n    return d.dispose;\n  }, [id, active, state.listboxState]);\n  var handleClick = useCallback(function (event) {\n    if (disabled) return event.preventDefault();\n    select();\n    dispatch({\n      type: ActionTypes$2.CloseListbox\n    });\n    disposables().nextFrame(function () {\n      var _state$buttonRef$curr6;\n\n      return (_state$buttonRef$curr6 = state.buttonRef.current) == null ? void 0 : _state$buttonRef$curr6.focus({\n        preventScroll: true\n      });\n    });\n  }, [dispatch, state.buttonRef, disabled, select]);\n  var handleFocus = useCallback(function () {\n    if (disabled) return dispatch({\n      type: ActionTypes$2.GoToOption,\n      focus: Focus$1.Nothing\n    });\n    dispatch({\n      type: ActionTypes$2.GoToOption,\n      focus: Focus$1.Specific,\n      id: id\n    });\n  }, [disabled, id, dispatch]);\n  var handleMove = useCallback(function () {\n    if (disabled) return;\n    if (active) return;\n    dispatch({\n      type: ActionTypes$2.GoToOption,\n      focus: Focus$1.Specific,\n      id: id\n    });\n  }, [disabled, active, id, dispatch]);\n  var handleLeave = useCallback(function () {\n    if (disabled) return;\n    if (!active) return;\n    dispatch({\n      type: ActionTypes$2.GoToOption,\n      focus: Focus$1.Nothing\n    });\n  }, [disabled, active, dispatch]);\n  var slot = useMemo(function () {\n    return {\n      active: active,\n      selected: selected,\n      disabled: disabled\n    };\n  }, [active, selected, disabled]);\n  var propsWeControl = {\n    id: id,\n    role: 'option',\n    tabIndex: -1,\n    'aria-disabled': disabled === true ? true : undefined,\n    'aria-selected': selected === true ? true : undefined,\n    onClick: handleClick,\n    onFocus: handleFocus,\n    onPointerMove: handleMove,\n    onMouseMove: handleMove,\n    onPointerLeave: handleLeave,\n    onMouseLeave: handleLeave\n  };\n  return render({\n    props: _extends({}, passthroughProps, propsWeControl),\n    slot: slot,\n    defaultTag: DEFAULT_OPTION_TAG,\n    name: 'Listbox.Option'\n  });\n} // ---\n\n\nListbox.Button = Button$1;\nListbox.Label = Label;\nListbox.Options = Options;\nListbox.Option = Option;\n\nfunction useTreeWalker(_ref) {\n  var container = _ref.container,\n      accept = _ref.accept,\n      walk = _ref.walk,\n      _ref$enabled = _ref.enabled,\n      enabled = _ref$enabled === void 0 ? true : _ref$enabled;\n  var acceptRef = useRef(accept);\n  var walkRef = useRef(walk);\n  useEffect(function () {\n    acceptRef.current = accept;\n    walkRef.current = walk;\n  }, [accept, walk]);\n  useIsoMorphicEffect(function () {\n    if (!container) return;\n    if (!enabled) return;\n    var accept = acceptRef.current;\n    var walk = walkRef.current;\n    var acceptNode = Object.assign(function (node) {\n      return accept(node);\n    }, {\n      acceptNode: accept\n    });\n    var walker = document.createTreeWalker(container, NodeFilter.SHOW_ELEMENT, acceptNode, false);\n\n    while (walker.nextNode()) {\n      walk(walker.currentNode);\n    }\n  }, [container, enabled, acceptRef, walkRef]);\n}\n\nvar _reducers$3;\n\nvar MenuStates;\n\n(function (MenuStates) {\n  MenuStates[MenuStates[\"Open\"] = 0] = \"Open\";\n  MenuStates[MenuStates[\"Closed\"] = 1] = \"Closed\";\n})(MenuStates || (MenuStates = {}));\n\nvar ActionTypes$3;\n\n(function (ActionTypes) {\n  ActionTypes[ActionTypes[\"OpenMenu\"] = 0] = \"OpenMenu\";\n  ActionTypes[ActionTypes[\"CloseMenu\"] = 1] = \"CloseMenu\";\n  ActionTypes[ActionTypes[\"GoToItem\"] = 2] = \"GoToItem\";\n  ActionTypes[ActionTypes[\"Search\"] = 3] = \"Search\";\n  ActionTypes[ActionTypes[\"ClearSearch\"] = 4] = \"ClearSearch\";\n  ActionTypes[ActionTypes[\"RegisterItem\"] = 5] = \"RegisterItem\";\n  ActionTypes[ActionTypes[\"UnregisterItem\"] = 6] = \"UnregisterItem\";\n})(ActionTypes$3 || (ActionTypes$3 = {}));\n\nvar reducers$3 = (_reducers$3 = {}, _reducers$3[ActionTypes$3.CloseMenu] = function (state) {\n  if (state.menuState === MenuStates.Closed) return state;\n  return _extends({}, state, {\n    activeItemIndex: null,\n    menuState: MenuStates.Closed\n  });\n}, _reducers$3[ActionTypes$3.OpenMenu] = function (state) {\n  if (state.menuState === MenuStates.Open) return state;\n  return _extends({}, state, {\n    menuState: MenuStates.Open\n  });\n}, _reducers$3[ActionTypes$3.GoToItem] = function (state, action) {\n  var activeItemIndex = calculateActiveIndex(action, {\n    resolveItems: function resolveItems() {\n      return state.items;\n    },\n    resolveActiveIndex: function resolveActiveIndex() {\n      return state.activeItemIndex;\n    },\n    resolveId: function resolveId(item) {\n      return item.id;\n    },\n    resolveDisabled: function resolveDisabled(item) {\n      return item.dataRef.current.disabled;\n    }\n  });\n  if (state.searchQuery === '' && state.activeItemIndex === activeItemIndex) return state;\n  return _extends({}, state, {\n    searchQuery: '',\n    activeItemIndex: activeItemIndex\n  });\n}, _reducers$3[ActionTypes$3.Search] = function (state, action) {\n  var searchQuery = state.searchQuery + action.value.toLowerCase();\n  var match = state.items.findIndex(function (item) {\n    var _item$dataRef$current;\n\n    return ((_item$dataRef$current = item.dataRef.current.textValue) == null ? void 0 : _item$dataRef$current.startsWith(searchQuery)) && !item.dataRef.current.disabled;\n  });\n  if (match === -1 || match === state.activeItemIndex) return _extends({}, state, {\n    searchQuery: searchQuery\n  });\n  return _extends({}, state, {\n    searchQuery: searchQuery,\n    activeItemIndex: match\n  });\n}, _reducers$3[ActionTypes$3.ClearSearch] = function (state) {\n  if (state.searchQuery === '') return state;\n  return _extends({}, state, {\n    searchQuery: ''\n  });\n}, _reducers$3[ActionTypes$3.RegisterItem] = function (state, action) {\n  return _extends({}, state, {\n    items: [].concat(state.items, [{\n      id: action.id,\n      dataRef: action.dataRef\n    }])\n  });\n}, _reducers$3[ActionTypes$3.UnregisterItem] = function (state, action) {\n  var nextItems = state.items.slice();\n  var currentActiveItem = state.activeItemIndex !== null ? nextItems[state.activeItemIndex] : null;\n  var idx = nextItems.findIndex(function (a) {\n    return a.id === action.id;\n  });\n  if (idx !== -1) nextItems.splice(idx, 1);\n  return _extends({}, state, {\n    items: nextItems,\n    activeItemIndex: function () {\n      if (idx === state.activeItemIndex) return null;\n      if (currentActiveItem === null) return null; // If we removed the item before the actual active index, then it would be out of sync. To\n      // fix this, we will find the correct (new) index position.\n\n      return nextItems.indexOf(currentActiveItem);\n    }()\n  });\n}, _reducers$3);\nvar MenuContext = /*#__PURE__*/createContext(null);\nMenuContext.displayName = 'MenuContext';\n\nfunction useMenuContext(component) {\n  var context = useContext(MenuContext);\n\n  if (context === null) {\n    var err = new Error(\"<\" + component + \" /> is missing a parent <\" + Menu.name + \" /> component.\");\n    if (Error.captureStackTrace) Error.captureStackTrace(err, useMenuContext);\n    throw err;\n  }\n\n  return context;\n}\n\nfunction stateReducer$3(state, action) {\n  return match(action.type, reducers$3, state, action);\n} // ---\n\n\nvar DEFAULT_MENU_TAG = Fragment;\n\nfunction Menu(props) {\n  var reducerBag = useReducer(stateReducer$3, {\n    menuState: MenuStates.Closed,\n    buttonRef: createRef(),\n    itemsRef: createRef(),\n    items: [],\n    searchQuery: '',\n    activeItemIndex: null\n  });\n  var _reducerBag$ = reducerBag[0],\n      menuState = _reducerBag$.menuState,\n      itemsRef = _reducerBag$.itemsRef,\n      buttonRef = _reducerBag$.buttonRef,\n      dispatch = reducerBag[1]; // Handle outside click\n\n  useWindowEvent('mousedown', function (event) {\n    var _buttonRef$current, _itemsRef$current;\n\n    var target = event.target;\n    if (menuState !== MenuStates.Open) return;\n    if ((_buttonRef$current = buttonRef.current) == null ? void 0 : _buttonRef$current.contains(target)) return;\n    if ((_itemsRef$current = itemsRef.current) == null ? void 0 : _itemsRef$current.contains(target)) return;\n    dispatch({\n      type: ActionTypes$3.CloseMenu\n    });\n\n    if (!isFocusableElement(target, FocusableMode.Loose)) {\n      var _buttonRef$current2;\n\n      event.preventDefault();\n      (_buttonRef$current2 = buttonRef.current) == null ? void 0 : _buttonRef$current2.focus();\n    }\n  });\n  var slot = useMemo(function () {\n    return {\n      open: menuState === MenuStates.Open\n    };\n  }, [menuState]);\n  return React.createElement(MenuContext.Provider, {\n    value: reducerBag\n  }, render({\n    props: props,\n    slot: slot,\n    defaultTag: DEFAULT_MENU_TAG,\n    name: 'Menu'\n  }));\n} // ---\n\n\nvar DEFAULT_BUTTON_TAG$2 = 'button';\nvar Button$2 = /*#__PURE__*/forwardRefWithAs(function Button(props, ref) {\n  var _state$itemsRef$curre;\n\n  var _useMenuContext = useMenuContext([Menu.name, Button.name].join('.')),\n      state = _useMenuContext[0],\n      dispatch = _useMenuContext[1];\n\n  var buttonRef = useSyncRefs(state.buttonRef, ref);\n  var id = \"headlessui-menu-button-\" + useId();\n  var d = useDisposables();\n  var handleKeyDown = useCallback(function (event) {\n    switch (event.key) {\n      // Ref: https://www.w3.org/TR/wai-aria-practices-1.2/#keyboard-interaction-13\n      case Keys.Space:\n      case Keys.Enter:\n      case Keys.ArrowDown:\n        event.preventDefault();\n        event.stopPropagation();\n        dispatch({\n          type: ActionTypes$3.OpenMenu\n        });\n        d.nextFrame(function () {\n          return dispatch({\n            type: ActionTypes$3.GoToItem,\n            focus: Focus$1.First\n          });\n        });\n        break;\n\n      case Keys.ArrowUp:\n        event.preventDefault();\n        event.stopPropagation();\n        dispatch({\n          type: ActionTypes$3.OpenMenu\n        });\n        d.nextFrame(function () {\n          return dispatch({\n            type: ActionTypes$3.GoToItem,\n            focus: Focus$1.Last\n          });\n        });\n        break;\n    }\n  }, [dispatch, d]);\n  var handleKeyUp = useCallback(function (event) {\n    switch (event.key) {\n      case Keys.Space:\n        // Required for firefox, event.preventDefault() in handleKeyDown for\n        // the Space key doesn't cancel the handleKeyUp, which in turn\n        // triggers a *click*.\n        event.preventDefault();\n        break;\n    }\n  }, []);\n  var handleClick = useCallback(function (event) {\n    if (isDisabledReactIssue7711(event.currentTarget)) return event.preventDefault();\n    if (props.disabled) return;\n\n    if (state.menuState === MenuStates.Open) {\n      dispatch({\n        type: ActionTypes$3.CloseMenu\n      });\n      d.nextFrame(function () {\n        var _state$buttonRef$curr;\n\n        return (_state$buttonRef$curr = state.buttonRef.current) == null ? void 0 : _state$buttonRef$curr.focus({\n          preventScroll: true\n        });\n      });\n    } else {\n      event.preventDefault();\n      event.stopPropagation();\n      dispatch({\n        type: ActionTypes$3.OpenMenu\n      });\n    }\n  }, [dispatch, d, state, props.disabled]);\n  var slot = useMemo(function () {\n    return {\n      open: state.menuState === MenuStates.Open\n    };\n  }, [state]);\n  var passthroughProps = props;\n  var propsWeControl = {\n    ref: buttonRef,\n    id: id,\n    type: 'button',\n    'aria-haspopup': true,\n    'aria-controls': (_state$itemsRef$curre = state.itemsRef.current) == null ? void 0 : _state$itemsRef$curre.id,\n    'aria-expanded': state.menuState === MenuStates.Open ? true : undefined,\n    onKeyDown: handleKeyDown,\n    onKeyUp: handleKeyUp,\n    onClick: handleClick\n  };\n  return render({\n    props: _extends({}, passthroughProps, propsWeControl),\n    slot: slot,\n    defaultTag: DEFAULT_BUTTON_TAG$2,\n    name: 'Menu.Button'\n  });\n}); // ---\n\nvar DEFAULT_ITEMS_TAG = 'div';\nvar ItemsRenderFeatures = Features.RenderStrategy | Features.Static;\nvar Items = /*#__PURE__*/forwardRefWithAs(function Items(props, ref) {\n  var _state$items$state$ac, _state$buttonRef$curr4;\n\n  var _useMenuContext2 = useMenuContext([Menu.name, Items.name].join('.')),\n      state = _useMenuContext2[0],\n      dispatch = _useMenuContext2[1];\n\n  var itemsRef = useSyncRefs(state.itemsRef, ref);\n  var id = \"headlessui-menu-items-\" + useId();\n  var searchDisposables = useDisposables();\n  useEffect(function () {\n    var container = state.itemsRef.current;\n    if (!container) return;\n    if (state.menuState !== MenuStates.Open) return;\n    if (container === document.activeElement) return;\n    container.focus({\n      preventScroll: true\n    });\n  }, [state.menuState, state.itemsRef]);\n  useTreeWalker({\n    container: state.itemsRef.current,\n    enabled: state.menuState === MenuStates.Open,\n    accept: function accept(node) {\n      if (node.getAttribute('role') === 'menuitem') return NodeFilter.FILTER_REJECT;\n      if (node.hasAttribute('role')) return NodeFilter.FILTER_SKIP;\n      return NodeFilter.FILTER_ACCEPT;\n    },\n    walk: function walk(node) {\n      node.setAttribute('role', 'none');\n    }\n  });\n  var handleKeyDown = useCallback(function (event) {\n    searchDisposables.dispose();\n\n    switch (event.key) {\n      // Ref: https://www.w3.org/TR/wai-aria-practices-1.2/#keyboard-interaction-12\n      // @ts-expect-error Fallthrough is expected here\n      case Keys.Space:\n        if (state.searchQuery !== '') {\n          event.preventDefault();\n          event.stopPropagation();\n          return dispatch({\n            type: ActionTypes$3.Search,\n            value: event.key\n          });\n        }\n\n      // When in type ahead mode, fallthrough\n\n      case Keys.Enter:\n        event.preventDefault();\n        event.stopPropagation();\n        dispatch({\n          type: ActionTypes$3.CloseMenu\n        });\n\n        if (state.activeItemIndex !== null) {\n          var _document$getElementB;\n\n          var _id = state.items[state.activeItemIndex].id;\n          (_document$getElementB = document.getElementById(_id)) == null ? void 0 : _document$getElementB.click();\n        }\n\n        disposables().nextFrame(function () {\n          var _state$buttonRef$curr2;\n\n          return (_state$buttonRef$curr2 = state.buttonRef.current) == null ? void 0 : _state$buttonRef$curr2.focus({\n            preventScroll: true\n          });\n        });\n        break;\n\n      case Keys.ArrowDown:\n        event.preventDefault();\n        event.stopPropagation();\n        return dispatch({\n          type: ActionTypes$3.GoToItem,\n          focus: Focus$1.Next\n        });\n\n      case Keys.ArrowUp:\n        event.preventDefault();\n        event.stopPropagation();\n        return dispatch({\n          type: ActionTypes$3.GoToItem,\n          focus: Focus$1.Previous\n        });\n\n      case Keys.Home:\n      case Keys.PageUp:\n        event.preventDefault();\n        event.stopPropagation();\n        return dispatch({\n          type: ActionTypes$3.GoToItem,\n          focus: Focus$1.First\n        });\n\n      case Keys.End:\n      case Keys.PageDown:\n        event.preventDefault();\n        event.stopPropagation();\n        return dispatch({\n          type: ActionTypes$3.GoToItem,\n          focus: Focus$1.Last\n        });\n\n      case Keys.Escape:\n        event.preventDefault();\n        event.stopPropagation();\n        dispatch({\n          type: ActionTypes$3.CloseMenu\n        });\n        disposables().nextFrame(function () {\n          var _state$buttonRef$curr3;\n\n          return (_state$buttonRef$curr3 = state.buttonRef.current) == null ? void 0 : _state$buttonRef$curr3.focus({\n            preventScroll: true\n          });\n        });\n        break;\n\n      case Keys.Tab:\n        event.preventDefault();\n        event.stopPropagation();\n        break;\n\n      default:\n        if (event.key.length === 1) {\n          dispatch({\n            type: ActionTypes$3.Search,\n            value: event.key\n          });\n          searchDisposables.setTimeout(function () {\n            return dispatch({\n              type: ActionTypes$3.ClearSearch\n            });\n          }, 350);\n        }\n\n        break;\n    }\n  }, [dispatch, searchDisposables, state]);\n  var handleKeyUp = useCallback(function (event) {\n    switch (event.key) {\n      case Keys.Space:\n        // Required for firefox, event.preventDefault() in handleKeyDown for\n        // the Space key doesn't cancel the handleKeyUp, which in turn\n        // triggers a *click*.\n        event.preventDefault();\n        break;\n    }\n  }, []);\n  var slot = useMemo(function () {\n    return {\n      open: state.menuState === MenuStates.Open\n    };\n  }, [state]);\n  var propsWeControl = {\n    'aria-activedescendant': state.activeItemIndex === null ? undefined : (_state$items$state$ac = state.items[state.activeItemIndex]) == null ? void 0 : _state$items$state$ac.id,\n    'aria-labelledby': (_state$buttonRef$curr4 = state.buttonRef.current) == null ? void 0 : _state$buttonRef$curr4.id,\n    id: id,\n    onKeyDown: handleKeyDown,\n    onKeyUp: handleKeyUp,\n    role: 'menu',\n    tabIndex: 0,\n    ref: itemsRef\n  };\n  var passthroughProps = props;\n  return render({\n    props: _extends({}, passthroughProps, propsWeControl),\n    slot: slot,\n    defaultTag: DEFAULT_ITEMS_TAG,\n    features: ItemsRenderFeatures,\n    visible: state.menuState === MenuStates.Open,\n    name: 'Menu.Items'\n  });\n}); // ---\n\nvar DEFAULT_ITEM_TAG = Fragment;\n\nfunction Item(props) {\n  var _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      onClick = props.onClick,\n      passthroughProps = _objectWithoutPropertiesLoose(props, [\"disabled\", \"onClick\"]);\n\n  var _useMenuContext3 = useMenuContext([Menu.name, Item.name].join('.')),\n      state = _useMenuContext3[0],\n      dispatch = _useMenuContext3[1];\n\n  var id = \"headlessui-menu-item-\" + useId();\n  var active = state.activeItemIndex !== null ? state.items[state.activeItemIndex].id === id : false;\n  useIsoMorphicEffect(function () {\n    if (state.menuState !== MenuStates.Open) return;\n    if (!active) return;\n    var d = disposables();\n    d.nextFrame(function () {\n      var _document$getElementB2;\n\n      return (_document$getElementB2 = document.getElementById(id)) == null ? void 0 : _document$getElementB2.scrollIntoView == null ? void 0 : _document$getElementB2.scrollIntoView({\n        block: 'nearest'\n      });\n    });\n    return d.dispose;\n  }, [id, active, state.menuState]);\n  var bag = useRef({\n    disabled: disabled\n  });\n  useIsoMorphicEffect(function () {\n    bag.current.disabled = disabled;\n  }, [bag, disabled]);\n  useIsoMorphicEffect(function () {\n    var _document$getElementB3, _document$getElementB4;\n\n    bag.current.textValue = (_document$getElementB3 = document.getElementById(id)) == null ? void 0 : (_document$getElementB4 = _document$getElementB3.textContent) == null ? void 0 : _document$getElementB4.toLowerCase();\n  }, [bag, id]);\n  useIsoMorphicEffect(function () {\n    dispatch({\n      type: ActionTypes$3.RegisterItem,\n      id: id,\n      dataRef: bag\n    });\n    return function () {\n      return dispatch({\n        type: ActionTypes$3.UnregisterItem,\n        id: id\n      });\n    };\n  }, [bag, id]);\n  var handleClick = useCallback(function (event) {\n    if (disabled) return event.preventDefault();\n    dispatch({\n      type: ActionTypes$3.CloseMenu\n    });\n    disposables().nextFrame(function () {\n      var _state$buttonRef$curr5;\n\n      return (_state$buttonRef$curr5 = state.buttonRef.current) == null ? void 0 : _state$buttonRef$curr5.focus({\n        preventScroll: true\n      });\n    });\n    if (onClick) return onClick(event);\n  }, [dispatch, state.buttonRef, disabled, onClick]);\n  var handleFocus = useCallback(function () {\n    if (disabled) return dispatch({\n      type: ActionTypes$3.GoToItem,\n      focus: Focus$1.Nothing\n    });\n    dispatch({\n      type: ActionTypes$3.GoToItem,\n      focus: Focus$1.Specific,\n      id: id\n    });\n  }, [disabled, id, dispatch]);\n  var handleMove = useCallback(function () {\n    if (disabled) return;\n    if (active) return;\n    dispatch({\n      type: ActionTypes$3.GoToItem,\n      focus: Focus$1.Specific,\n      id: id\n    });\n  }, [disabled, active, id, dispatch]);\n  var handleLeave = useCallback(function () {\n    if (disabled) return;\n    if (!active) return;\n    dispatch({\n      type: ActionTypes$3.GoToItem,\n      focus: Focus$1.Nothing\n    });\n  }, [disabled, active, dispatch]);\n  var slot = useMemo(function () {\n    return {\n      active: active,\n      disabled: disabled\n    };\n  }, [active, disabled]);\n  var propsWeControl = {\n    id: id,\n    role: 'menuitem',\n    tabIndex: -1,\n    'aria-disabled': disabled === true ? true : undefined,\n    onClick: handleClick,\n    onFocus: handleFocus,\n    onPointerMove: handleMove,\n    onMouseMove: handleMove,\n    onPointerLeave: handleLeave,\n    onMouseLeave: handleLeave\n  };\n  return render({\n    props: _extends({}, passthroughProps, propsWeControl),\n    slot: slot,\n    defaultTag: DEFAULT_ITEM_TAG,\n    name: 'Menu.Item'\n  });\n} // ---\n\n\nMenu.Button = Button$2;\nMenu.Items = Items;\nMenu.Item = Item;\n\nvar _reducers$4;\n\nvar PopoverStates;\n\n(function (PopoverStates) {\n  PopoverStates[PopoverStates[\"Open\"] = 0] = \"Open\";\n  PopoverStates[PopoverStates[\"Closed\"] = 1] = \"Closed\";\n})(PopoverStates || (PopoverStates = {}));\n\nvar ActionTypes$4;\n\n(function (ActionTypes) {\n  ActionTypes[ActionTypes[\"TogglePopover\"] = 0] = \"TogglePopover\";\n  ActionTypes[ActionTypes[\"ClosePopover\"] = 1] = \"ClosePopover\";\n  ActionTypes[ActionTypes[\"SetButton\"] = 2] = \"SetButton\";\n  ActionTypes[ActionTypes[\"SetButtonId\"] = 3] = \"SetButtonId\";\n  ActionTypes[ActionTypes[\"SetPanel\"] = 4] = \"SetPanel\";\n  ActionTypes[ActionTypes[\"SetPanelId\"] = 5] = \"SetPanelId\";\n})(ActionTypes$4 || (ActionTypes$4 = {}));\n\nvar reducers$4 = (_reducers$4 = {}, _reducers$4[ActionTypes$4.TogglePopover] = function (state) {\n  var _match;\n\n  return _extends({}, state, {\n    popoverState: match(state.popoverState, (_match = {}, _match[PopoverStates.Open] = PopoverStates.Closed, _match[PopoverStates.Closed] = PopoverStates.Open, _match))\n  });\n}, _reducers$4[ActionTypes$4.ClosePopover] = function (state) {\n  if (state.popoverState === PopoverStates.Closed) return state;\n  return _extends({}, state, {\n    popoverState: PopoverStates.Closed\n  });\n}, _reducers$4[ActionTypes$4.SetButton] = function (state, action) {\n  if (state.button === action.button) return state;\n  return _extends({}, state, {\n    button: action.button\n  });\n}, _reducers$4[ActionTypes$4.SetButtonId] = function (state, action) {\n  if (state.buttonId === action.buttonId) return state;\n  return _extends({}, state, {\n    buttonId: action.buttonId\n  });\n}, _reducers$4[ActionTypes$4.SetPanel] = function (state, action) {\n  if (state.panel === action.panel) return state;\n  return _extends({}, state, {\n    panel: action.panel\n  });\n}, _reducers$4[ActionTypes$4.SetPanelId] = function (state, action) {\n  if (state.panelId === action.panelId) return state;\n  return _extends({}, state, {\n    panelId: action.panelId\n  });\n}, _reducers$4);\nvar PopoverContext = /*#__PURE__*/createContext(null);\nPopoverContext.displayName = 'PopoverContext';\n\nfunction usePopoverContext(component) {\n  var context = useContext(PopoverContext);\n\n  if (context === null) {\n    var err = new Error(\"<\" + component + \" /> is missing a parent <\" + Popover.name + \" /> component.\");\n    if (Error.captureStackTrace) Error.captureStackTrace(err, usePopoverContext);\n    throw err;\n  }\n\n  return context;\n}\n\nvar PopoverGroupContext = /*#__PURE__*/createContext(null);\nPopoverGroupContext.displayName = 'PopoverGroupContext';\n\nfunction usePopoverGroupContext() {\n  return useContext(PopoverGroupContext);\n}\n\nvar PopoverPanelContext = /*#__PURE__*/createContext(null);\nPopoverPanelContext.displayName = 'PopoverPanelContext';\n\nfunction usePopoverPanelContext() {\n  return useContext(PopoverPanelContext);\n}\n\nfunction stateReducer$4(state, action) {\n  return match(action.type, reducers$4, state, action);\n} // ---\n\n\nvar DEFAULT_POPOVER_TAG = 'div';\n\nfunction Popover(props) {\n  var buttonId = \"headlessui-popover-button-\" + useId();\n  var panelId = \"headlessui-popover-panel-\" + useId();\n  var reducerBag = useReducer(stateReducer$4, {\n    popoverState: PopoverStates.Closed,\n    button: null,\n    buttonId: buttonId,\n    panel: null,\n    panelId: panelId\n  });\n  var _reducerBag$ = reducerBag[0],\n      popoverState = _reducerBag$.popoverState,\n      button = _reducerBag$.button,\n      panel = _reducerBag$.panel,\n      dispatch = reducerBag[1];\n  useEffect(function () {\n    return dispatch({\n      type: ActionTypes$4.SetButtonId,\n      buttonId: buttonId\n    });\n  }, [buttonId, dispatch]);\n  useEffect(function () {\n    return dispatch({\n      type: ActionTypes$4.SetPanelId,\n      panelId: panelId\n    });\n  }, [panelId, dispatch]);\n  var registerBag = useMemo(function () {\n    return {\n      buttonId: buttonId,\n      panelId: panelId,\n      close: function close() {\n        return dispatch({\n          type: ActionTypes$4.ClosePopover\n        });\n      }\n    };\n  }, [buttonId, panelId, dispatch]);\n  var groupContext = usePopoverGroupContext();\n  var registerPopover = groupContext == null ? void 0 : groupContext.registerPopover;\n  var isFocusWithinPopoverGroup = useCallback(function () {\n    var _groupContext$isFocus;\n\n    return (_groupContext$isFocus = groupContext == null ? void 0 : groupContext.isFocusWithinPopoverGroup()) != null ? _groupContext$isFocus : (button == null ? void 0 : button.contains(document.activeElement)) || (panel == null ? void 0 : panel.contains(document.activeElement));\n  }, [groupContext, button, panel]);\n  useEffect(function () {\n    return registerPopover == null ? void 0 : registerPopover(registerBag);\n  }, [registerPopover, registerBag]); // Handle focus out\n\n  useWindowEvent('focus', function () {\n    if (popoverState !== PopoverStates.Open) return;\n    if (isFocusWithinPopoverGroup()) return;\n    if (!button) return;\n    if (!panel) return;\n    dispatch({\n      type: ActionTypes$4.ClosePopover\n    });\n  }, true); // Handle outside click\n\n  useWindowEvent('mousedown', function (event) {\n    var target = event.target;\n    if (popoverState !== PopoverStates.Open) return;\n    if (button == null ? void 0 : button.contains(target)) return;\n    if (panel == null ? void 0 : panel.contains(target)) return;\n    dispatch({\n      type: ActionTypes$4.ClosePopover\n    });\n\n    if (!isFocusableElement(target, FocusableMode.Loose)) {\n      event.preventDefault();\n      button == null ? void 0 : button.focus();\n    }\n  });\n  var slot = useMemo(function () {\n    return {\n      open: popoverState === PopoverStates.Open\n    };\n  }, [popoverState]);\n  return React.createElement(PopoverContext.Provider, {\n    value: reducerBag\n  }, render({\n    props: props,\n    slot: slot,\n    defaultTag: DEFAULT_POPOVER_TAG,\n    name: 'Popover'\n  }));\n} // ---\n\n\nvar DEFAULT_BUTTON_TAG$3 = 'button';\nvar Button$3 = /*#__PURE__*/forwardRefWithAs(function Button(props, ref) {\n  var _usePopoverContext = usePopoverContext([Popover.name, Button.name].join('.')),\n      state = _usePopoverContext[0],\n      dispatch = _usePopoverContext[1];\n\n  var internalButtonRef = useRef(null);\n  var groupContext = usePopoverGroupContext();\n  var closeOthers = groupContext == null ? void 0 : groupContext.closeOthers;\n  var panelContext = usePopoverPanelContext();\n  var isWithinPanel = panelContext === null ? false : panelContext === state.panelId;\n  var buttonRef = useSyncRefs(internalButtonRef, ref, isWithinPanel ? null : function (button) {\n    return dispatch({\n      type: ActionTypes$4.SetButton,\n      button: button\n    });\n  }); // TODO: Revisit when handling Tab/Shift+Tab when using Portal's\n\n  var activeElementRef = useRef(null);\n  var previousActiveElementRef = useRef(typeof window === 'undefined' ? null : document.activeElement);\n  useWindowEvent('focus', function () {\n    previousActiveElementRef.current = activeElementRef.current;\n    activeElementRef.current = document.activeElement;\n  }, true);\n  var handleKeyDown = useCallback(function (event) {\n    var _state$button;\n\n    if (isWithinPanel) {\n      if (state.popoverState === PopoverStates.Closed) return;\n\n      switch (event.key) {\n        case Keys.Space:\n        case Keys.Enter:\n          event.preventDefault(); // Prevent triggering a *click* event\n\n          event.stopPropagation();\n          dispatch({\n            type: ActionTypes$4.ClosePopover\n          });\n          (_state$button = state.button) == null ? void 0 : _state$button.focus(); // Re-focus the original opening Button\n\n          break;\n      }\n    } else {\n      switch (event.key) {\n        case Keys.Space:\n        case Keys.Enter:\n          event.preventDefault(); // Prevent triggering a *click* event\n\n          event.stopPropagation();\n          if (state.popoverState === PopoverStates.Closed) closeOthers == null ? void 0 : closeOthers(state.buttonId);\n          dispatch({\n            type: ActionTypes$4.TogglePopover\n          });\n          break;\n\n        case Keys.Escape:\n          if (state.popoverState !== PopoverStates.Open) return closeOthers == null ? void 0 : closeOthers(state.buttonId);\n          if (!internalButtonRef.current) return;\n          if (!internalButtonRef.current.contains(document.activeElement)) return;\n          dispatch({\n            type: ActionTypes$4.ClosePopover\n          });\n          break;\n\n        case Keys.Tab:\n          if (state.popoverState !== PopoverStates.Open) return;\n          if (!state.panel) return;\n          if (!state.button) return; // TODO: Revisit when handling Tab/Shift+Tab when using Portal's\n\n          if (event.shiftKey) {\n            var _state$button2; // Check if the last focused element exists, and check that it is not inside button or panel itself\n\n\n            if (!previousActiveElementRef.current) return;\n            if ((_state$button2 = state.button) == null ? void 0 : _state$button2.contains(previousActiveElementRef.current)) return;\n            if (state.panel.contains(previousActiveElementRef.current)) return; // Check if the last focused element is *after* the button in the DOM\n\n            var focusableElements = getFocusableElements();\n            var previousIdx = focusableElements.indexOf(previousActiveElementRef.current);\n            var buttonIdx = focusableElements.indexOf(state.button);\n            if (buttonIdx > previousIdx) return;\n            event.preventDefault();\n            event.stopPropagation();\n            focusIn(state.panel, Focus.Last);\n          } else {\n            event.preventDefault();\n            event.stopPropagation();\n            focusIn(state.panel, Focus.First);\n          }\n\n          break;\n      }\n    }\n  }, [dispatch, state.popoverState, state.buttonId, state.button, state.panel, internalButtonRef, closeOthers, isWithinPanel]);\n  var handleKeyUp = useCallback(function (event) {\n    var _state$button3;\n\n    if (isWithinPanel) return;\n\n    if (event.key === Keys.Space) {\n      // Required for firefox, event.preventDefault() in handleKeyDown for\n      // the Space key doesn't cancel the handleKeyUp, which in turn\n      // triggers a *click*.\n      event.preventDefault();\n    }\n\n    if (state.popoverState !== PopoverStates.Open) return;\n    if (!state.panel) return;\n    if (!state.button) return; // TODO: Revisit when handling Tab/Shift+Tab when using Portal's\n\n    switch (event.key) {\n      case Keys.Tab:\n        // Check if the last focused element exists, and check that it is not inside button or panel itself\n        if (!previousActiveElementRef.current) return;\n        if ((_state$button3 = state.button) == null ? void 0 : _state$button3.contains(previousActiveElementRef.current)) return;\n        if (state.panel.contains(previousActiveElementRef.current)) return; // Check if the last focused element is *after* the button in the DOM\n\n        var focusableElements = getFocusableElements();\n        var previousIdx = focusableElements.indexOf(previousActiveElementRef.current);\n        var buttonIdx = focusableElements.indexOf(state.button);\n        if (buttonIdx > previousIdx) return;\n        event.preventDefault();\n        event.stopPropagation();\n        focusIn(state.panel, Focus.Last);\n        break;\n    }\n  }, [state.popoverState, state.panel, state.button, isWithinPanel]);\n  var handleClick = useCallback(function (event) {\n    if (isDisabledReactIssue7711(event.currentTarget)) return;\n    if (props.disabled) return;\n\n    if (isWithinPanel) {\n      var _state$button4;\n\n      dispatch({\n        type: ActionTypes$4.ClosePopover\n      });\n      (_state$button4 = state.button) == null ? void 0 : _state$button4.focus(); // Re-focus the original opening Button\n    } else {\n      var _state$button5;\n\n      if (state.popoverState === PopoverStates.Closed) closeOthers == null ? void 0 : closeOthers(state.buttonId);\n      (_state$button5 = state.button) == null ? void 0 : _state$button5.focus();\n      dispatch({\n        type: ActionTypes$4.TogglePopover\n      });\n    }\n  }, [dispatch, state.button, state.popoverState, state.buttonId, props.disabled, closeOthers, isWithinPanel]);\n  var slot = useMemo(function () {\n    return {\n      open: state.popoverState === PopoverStates.Open\n    };\n  }, [state]);\n  var passthroughProps = props;\n  var propsWeControl = isWithinPanel ? {\n    type: 'button',\n    onKeyDown: handleKeyDown,\n    onClick: handleClick\n  } : {\n    ref: buttonRef,\n    id: state.buttonId,\n    type: 'button',\n    'aria-expanded': state.popoverState === PopoverStates.Open ? true : undefined,\n    'aria-controls': state.panel ? state.panelId : undefined,\n    onKeyDown: handleKeyDown,\n    onKeyUp: handleKeyUp,\n    onClick: handleClick\n  };\n  return render({\n    props: _extends({}, passthroughProps, propsWeControl),\n    slot: slot,\n    defaultTag: DEFAULT_BUTTON_TAG$3,\n    name: 'Popover.Button'\n  });\n}); // ---\n\nvar DEFAULT_OVERLAY_TAG$1 = 'div';\nvar OverlayRenderFeatures = Features.RenderStrategy | Features.Static;\nvar Overlay$1 = /*#__PURE__*/forwardRefWithAs(function Overlay(props, ref) {\n  var _usePopoverContext2 = usePopoverContext([Popover.name, Overlay.name].join('.')),\n      popoverState = _usePopoverContext2[0].popoverState,\n      dispatch = _usePopoverContext2[1];\n\n  var overlayRef = useSyncRefs(ref);\n  var id = \"headlessui-popover-overlay-\" + useId();\n  var handleClick = useCallback(function (event) {\n    if (isDisabledReactIssue7711(event.currentTarget)) return event.preventDefault();\n    dispatch({\n      type: ActionTypes$4.ClosePopover\n    });\n  }, [dispatch]);\n  var slot = useMemo(function () {\n    return {\n      open: popoverState === PopoverStates.Open\n    };\n  }, [popoverState]);\n  var propsWeControl = {\n    ref: overlayRef,\n    id: id,\n    'aria-hidden': true,\n    onClick: handleClick\n  };\n  var passthroughProps = props;\n  return render({\n    props: _extends({}, passthroughProps, propsWeControl),\n    slot: slot,\n    defaultTag: DEFAULT_OVERLAY_TAG$1,\n    features: OverlayRenderFeatures,\n    visible: popoverState === PopoverStates.Open,\n    name: 'Popover.Overlay'\n  });\n}); // ---\n\nvar DEFAULT_PANEL_TAG$1 = 'div';\nvar PanelRenderFeatures$1 = Features.RenderStrategy | Features.Static;\nvar Panel$1 = /*#__PURE__*/forwardRefWithAs(function Panel(props, ref) {\n  var _props$focus = props.focus,\n      focus = _props$focus === void 0 ? false : _props$focus,\n      passthroughProps = _objectWithoutPropertiesLoose(props, [\"focus\"]);\n\n  var _usePopoverContext3 = usePopoverContext([Popover.name, Panel.name].join('.')),\n      state = _usePopoverContext3[0],\n      dispatch = _usePopoverContext3[1];\n\n  var internalPanelRef = useRef(null);\n  var panelRef = useSyncRefs(internalPanelRef, ref, function (panel) {\n    dispatch({\n      type: ActionTypes$4.SetPanel,\n      panel: panel\n    });\n  });\n  var handleKeyDown = useCallback(function (event) {\n    var _state$button6;\n\n    switch (event.key) {\n      case Keys.Escape:\n        if (state.popoverState !== PopoverStates.Open) return;\n        if (!internalPanelRef.current) return;\n        if (!internalPanelRef.current.contains(document.activeElement)) return;\n        event.preventDefault();\n        dispatch({\n          type: ActionTypes$4.ClosePopover\n        });\n        (_state$button6 = state.button) == null ? void 0 : _state$button6.focus();\n        break;\n    }\n  }, [state, internalPanelRef, dispatch]); // Unlink on \"unmount\" myself\n\n  useEffect(function () {\n    return function () {\n      return dispatch({\n        type: ActionTypes$4.SetPanel,\n        panel: null\n      });\n    };\n  }, [dispatch]); // Unlink on \"unmount\" children\n\n  useEffect(function () {\n    var _props$unmount;\n\n    if (state.popoverState === PopoverStates.Closed && ((_props$unmount = props.unmount) != null ? _props$unmount : true)) {\n      dispatch({\n        type: ActionTypes$4.SetPanel,\n        panel: null\n      });\n    }\n  }, [state.popoverState, props.unmount, dispatch]); // Move focus within panel\n\n  useEffect(function () {\n    if (!focus) return;\n    if (state.popoverState !== PopoverStates.Open) return;\n    if (!internalPanelRef.current) return;\n    var activeElement = document.activeElement;\n    if (internalPanelRef.current.contains(activeElement)) return; // Already focused within Dialog\n\n    focusIn(internalPanelRef.current, Focus.First);\n  }, [focus, internalPanelRef, state.popoverState]); // Handle Tab / Shift+Tab focus positioning\n\n  useWindowEvent('keydown', function (event) {\n    if (state.popoverState !== PopoverStates.Open) return;\n    if (!internalPanelRef.current) return;\n    if (event.key !== Keys.Tab) return;\n    if (!document.activeElement) return;\n    if (!internalPanelRef.current) return;\n    if (!internalPanelRef.current.contains(document.activeElement)) return; // We will take-over the default tab behaviour so that we have a bit\n    // control over what is focused next. It will behave exactly the same,\n    // but it will also \"fix\" some issues based on whether you are using a\n    // Portal or not.\n\n    event.preventDefault();\n    var result = focusIn(internalPanelRef.current, event.shiftKey ? Focus.Previous : Focus.Next);\n\n    if (result === FocusResult.Underflow) {\n      var _state$button7;\n\n      return (_state$button7 = state.button) == null ? void 0 : _state$button7.focus();\n    } else if (result === FocusResult.Overflow) {\n      if (!state.button) return;\n      var elements = getFocusableElements();\n      var buttonIdx = elements.indexOf(state.button);\n      var nextElements = elements.splice(buttonIdx + 1) // Elements after button\n      .filter(function (element) {\n        var _internalPanelRef$cur;\n\n        return !((_internalPanelRef$cur = internalPanelRef.current) == null ? void 0 : _internalPanelRef$cur.contains(element));\n      }); // Ignore items in panel\n      // Try to focus the next element, however it could fail if we are in a\n      // Portal that happens to be the very last one in the DOM. In that\n      // case we would Error (because nothing after the button is\n      // focusable). Therefore we will try and focus the very first item in\n      // the document.body.\n\n      if (focusIn(nextElements, Focus.First) === FocusResult.Error) {\n        focusIn(document.body, Focus.First);\n      }\n    }\n  }); // Handle focus out when we are in special \"focus\" mode\n\n  useWindowEvent('focus', function () {\n    var _internalPanelRef$cur2;\n\n    if (!focus) return;\n    if (state.popoverState !== PopoverStates.Open) return;\n    if (!internalPanelRef.current) return;\n    if ((_internalPanelRef$cur2 = internalPanelRef.current) == null ? void 0 : _internalPanelRef$cur2.contains(document.activeElement)) return;\n    dispatch({\n      type: ActionTypes$4.ClosePopover\n    });\n  }, true);\n  var slot = useMemo(function () {\n    return {\n      open: state.popoverState === PopoverStates.Open\n    };\n  }, [state]);\n  var propsWeControl = {\n    ref: panelRef,\n    id: state.panelId,\n    onKeyDown: handleKeyDown\n  };\n  return React.createElement(PopoverPanelContext.Provider, {\n    value: state.panelId\n  }, render({\n    props: _extends({}, passthroughProps, propsWeControl),\n    slot: slot,\n    defaultTag: DEFAULT_PANEL_TAG$1,\n    features: PanelRenderFeatures$1,\n    visible: state.popoverState === PopoverStates.Open,\n    name: 'Popover.Panel'\n  }));\n}); // ---\n\nvar DEFAULT_GROUP_TAG$1 = 'div';\n\nfunction Group$1(props) {\n  var groupRef = useRef(null);\n\n  var _useState = useState([]),\n      popovers = _useState[0],\n      setPopovers = _useState[1];\n\n  var unregisterPopover = useCallback(function (registerbag) {\n    setPopovers(function (existing) {\n      var idx = existing.indexOf(registerbag);\n\n      if (idx !== -1) {\n        var clone = existing.slice();\n        clone.splice(idx, 1);\n        return clone;\n      }\n\n      return existing;\n    });\n  }, [setPopovers]);\n  var registerPopover = useCallback(function (registerbag) {\n    setPopovers(function (existing) {\n      return [].concat(existing, [registerbag]);\n    });\n    return function () {\n      return unregisterPopover(registerbag);\n    };\n  }, [setPopovers, unregisterPopover]);\n  var isFocusWithinPopoverGroup = useCallback(function () {\n    var _groupRef$current;\n\n    var element = document.activeElement;\n    if ((_groupRef$current = groupRef.current) == null ? void 0 : _groupRef$current.contains(element)) return true; // Check if the focus is in one of the button or panel elements. This is important in case you are rendering inside a Portal.\n\n    return popovers.some(function (bag) {\n      var _document$getElementB, _document$getElementB2;\n\n      return ((_document$getElementB = document.getElementById(bag.buttonId)) == null ? void 0 : _document$getElementB.contains(element)) || ((_document$getElementB2 = document.getElementById(bag.panelId)) == null ? void 0 : _document$getElementB2.contains(element));\n    });\n  }, [groupRef, popovers]);\n  var closeOthers = useCallback(function (buttonId) {\n    for (var _iterator = _createForOfIteratorHelperLoose(popovers), _step; !(_step = _iterator()).done;) {\n      var popover = _step.value;\n      if (popover.buttonId !== buttonId) popover.close();\n    }\n  }, [popovers]);\n  var contextBag = useMemo(function () {\n    return {\n      registerPopover: registerPopover,\n      unregisterPopover: unregisterPopover,\n      isFocusWithinPopoverGroup: isFocusWithinPopoverGroup,\n      closeOthers: closeOthers\n    };\n  }, [registerPopover, unregisterPopover, isFocusWithinPopoverGroup, closeOthers]);\n  var slot = useMemo(function () {\n    return {};\n  }, []);\n  var propsWeControl = {\n    ref: groupRef\n  };\n  var passthroughProps = props;\n  return React.createElement(PopoverGroupContext.Provider, {\n    value: contextBag\n  }, render({\n    props: _extends({}, passthroughProps, propsWeControl),\n    slot: slot,\n    defaultTag: DEFAULT_GROUP_TAG$1,\n    name: 'Popover.Group'\n  }));\n} // ---\n\n\nPopover.Button = Button$3;\nPopover.Overlay = Overlay$1;\nPopover.Panel = Panel$1;\nPopover.Group = Group$1;\n\nfunction useFlags(initialFlags) {\n  if (initialFlags === void 0) {\n    initialFlags = 0;\n  }\n\n  var _useState = useState(initialFlags),\n      flags = _useState[0],\n      setFlags = _useState[1];\n\n  var addFlag = useCallback(function (flag) {\n    return setFlags(function (flags) {\n      return flags | flag;\n    });\n  }, [setFlags]);\n  var hasFlag = useCallback(function (flag) {\n    return Boolean(flags & flag);\n  }, [flags]);\n  var removeFlag = useCallback(function (flag) {\n    return setFlags(function (flags) {\n      return flags & ~flag;\n    });\n  }, [setFlags]);\n  var toggleFlag = useCallback(function (flag) {\n    return setFlags(function (flags) {\n      return flags ^ flag;\n    });\n  }, [setFlags]);\n  return {\n    addFlag: addFlag,\n    hasFlag: hasFlag,\n    removeFlag: removeFlag,\n    toggleFlag: toggleFlag\n  };\n}\n\nvar LabelContext = /*#__PURE__*/createContext(null);\n\nfunction useLabelContext() {\n  var context = useContext(LabelContext);\n\n  if (context === null) {\n    var err = new Error('You used a <Label /> component, but it is not inside a relevant parent.');\n    if (Error.captureStackTrace) Error.captureStackTrace(err, useLabelContext);\n    throw err;\n  }\n\n  return context;\n}\n\nfunction useLabels() {\n  var _useState = useState([]),\n      labelIds = _useState[0],\n      setLabelIds = _useState[1];\n\n  return [// The actual id's as string or undefined.\n  labelIds.length > 0 ? labelIds.join(' ') : undefined, // The provider component\n  useMemo(function () {\n    return function LabelProvider(props) {\n      var register = useCallback(function (value) {\n        setLabelIds(function (existing) {\n          return [].concat(existing, [value]);\n        });\n        return function () {\n          return setLabelIds(function (existing) {\n            var clone = existing.slice();\n            var idx = clone.indexOf(value);\n            if (idx !== -1) clone.splice(idx, 1);\n            return clone;\n          });\n        };\n      }, []);\n      var contextBag = useMemo(function () {\n        return {\n          register: register,\n          slot: props.slot,\n          name: props.name,\n          props: props.props\n        };\n      }, [register, props.slot, props.name, props.props]);\n      return React.createElement(LabelContext.Provider, {\n        value: contextBag\n      }, props.children);\n    };\n  }, [setLabelIds])];\n} // ---\n\n\nvar DEFAULT_LABEL_TAG$1 = 'label';\n\nfunction Label$1(props) {\n  var _props$passive = props.passive,\n      passive = _props$passive === void 0 ? false : _props$passive,\n      passThroughProps = _objectWithoutPropertiesLoose(props, [\"passive\"]);\n\n  var context = useLabelContext();\n  var id = \"headlessui-label-\" + useId();\n  useIsoMorphicEffect(function () {\n    return context.register(id);\n  }, [id, context.register]);\n\n  var propsWeControl = _extends({}, context.props, {\n    id: id\n  });\n\n  var allProps = _extends({}, passThroughProps, propsWeControl); // @ts-expect-error props are dynamic via context, some components will\n  //                  provide an onClick then we can delete it.\n\n\n  if (passive) delete allProps['onClick'];\n  return render({\n    props: allProps,\n    slot: context.slot || {},\n    defaultTag: DEFAULT_LABEL_TAG$1,\n    name: context.name || 'Label'\n  });\n}\n\nvar _reducers$5;\n\nvar ActionTypes$5;\n\n(function (ActionTypes) {\n  ActionTypes[ActionTypes[\"RegisterOption\"] = 0] = \"RegisterOption\";\n  ActionTypes[ActionTypes[\"UnregisterOption\"] = 1] = \"UnregisterOption\";\n})(ActionTypes$5 || (ActionTypes$5 = {}));\n\nvar reducers$5 = (_reducers$5 = {}, _reducers$5[ActionTypes$5.RegisterOption] = function (state, action) {\n  return _extends({}, state, {\n    options: [].concat(state.options, [{\n      id: action.id,\n      element: action.element,\n      propsRef: action.propsRef\n    }])\n  });\n}, _reducers$5[ActionTypes$5.UnregisterOption] = function (state, action) {\n  var options = state.options.slice();\n  var idx = state.options.findIndex(function (radio) {\n    return radio.id === action.id;\n  });\n  if (idx === -1) return state;\n  options.splice(idx, 1);\n  return _extends({}, state, {\n    options: options\n  });\n}, _reducers$5);\nvar RadioGroupContext = /*#__PURE__*/createContext(null);\nRadioGroupContext.displayName = 'RadioGroupContext';\n\nfunction useRadioGroupContext(component) {\n  var context = useContext(RadioGroupContext);\n\n  if (context === null) {\n    var err = new Error(\"<\" + component + \" /> is missing a parent <\" + RadioGroup.name + \" /> component.\");\n    if (Error.captureStackTrace) Error.captureStackTrace(err, useRadioGroupContext);\n    throw err;\n  }\n\n  return context;\n}\n\nfunction stateReducer$5(state, action) {\n  return match(action.type, reducers$5, state, action);\n} // ---\n\n\nvar DEFAULT_RADIO_GROUP_TAG = 'div';\n\nfunction RadioGroup(props) {\n  var value = props.value,\n      onChange = props.onChange,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      passThroughProps = _objectWithoutPropertiesLoose(props, [\"value\", \"onChange\", \"disabled\"]);\n\n  var _useReducer = useReducer(stateReducer$5, {\n    options: []\n  }),\n      options = _useReducer[0].options,\n      dispatch = _useReducer[1];\n\n  var _useLabels = useLabels(),\n      labelledby = _useLabels[0],\n      LabelProvider = _useLabels[1];\n\n  var _useDescriptions = useDescriptions(),\n      describedby = _useDescriptions[0],\n      DescriptionProvider = _useDescriptions[1];\n\n  var id = \"headlessui-radiogroup-\" + useId();\n  var radioGroupRef = useRef(null);\n  var firstOption = useMemo(function () {\n    return options.find(function (option) {\n      if (option.propsRef.current.disabled) return false;\n      return true;\n    });\n  }, [options]);\n  var containsCheckedOption = useMemo(function () {\n    return options.some(function (option) {\n      return option.propsRef.current.value === value;\n    });\n  }, [options, value]);\n  var triggerChange = useCallback(function (nextValue) {\n    var _options$find;\n\n    if (disabled) return false;\n    if (nextValue === value) return false;\n    var nextOption = (_options$find = options.find(function (option) {\n      return option.propsRef.current.value === nextValue;\n    })) == null ? void 0 : _options$find.propsRef.current;\n    if (nextOption == null ? void 0 : nextOption.disabled) return false;\n    onChange(nextValue);\n    return true;\n  }, [onChange, value, disabled, options]);\n  useTreeWalker({\n    container: radioGroupRef.current,\n    accept: function accept(node) {\n      if (node.getAttribute('role') === 'radio') return NodeFilter.FILTER_REJECT;\n      if (node.hasAttribute('role')) return NodeFilter.FILTER_SKIP;\n      return NodeFilter.FILTER_ACCEPT;\n    },\n    walk: function walk(node) {\n      node.setAttribute('role', 'none');\n    }\n  });\n  var handleKeyDown = useCallback(function (event) {\n    var container = radioGroupRef.current;\n    if (!container) return;\n    var all = options.filter(function (option) {\n      return option.propsRef.current.disabled === false;\n    }).map(function (radio) {\n      return radio.element.current;\n    });\n\n    switch (event.key) {\n      case Keys.ArrowLeft:\n      case Keys.ArrowUp:\n        {\n          event.preventDefault();\n          event.stopPropagation();\n          var result = focusIn(all, Focus.Previous | Focus.WrapAround);\n\n          if (result === FocusResult.Success) {\n            var activeOption = options.find(function (option) {\n              return option.element.current === document.activeElement;\n            });\n            if (activeOption) triggerChange(activeOption.propsRef.current.value);\n          }\n        }\n        break;\n\n      case Keys.ArrowRight:\n      case Keys.ArrowDown:\n        {\n          event.preventDefault();\n          event.stopPropagation();\n\n          var _result = focusIn(all, Focus.Next | Focus.WrapAround);\n\n          if (_result === FocusResult.Success) {\n            var _activeOption = options.find(function (option) {\n              return option.element.current === document.activeElement;\n            });\n\n            if (_activeOption) triggerChange(_activeOption.propsRef.current.value);\n          }\n        }\n        break;\n\n      case Keys.Space:\n        {\n          event.preventDefault();\n          event.stopPropagation();\n\n          var _activeOption2 = options.find(function (option) {\n            return option.element.current === document.activeElement;\n          });\n\n          if (_activeOption2) triggerChange(_activeOption2.propsRef.current.value);\n        }\n        break;\n    }\n  }, [radioGroupRef, options, triggerChange]);\n  var registerOption = useCallback(function (option) {\n    dispatch(_extends({\n      type: ActionTypes$5.RegisterOption\n    }, option));\n    return function () {\n      return dispatch({\n        type: ActionTypes$5.UnregisterOption,\n        id: option.id\n      });\n    };\n  }, [dispatch]);\n  var api = useMemo(function () {\n    return {\n      registerOption: registerOption,\n      firstOption: firstOption,\n      containsCheckedOption: containsCheckedOption,\n      change: triggerChange,\n      disabled: disabled,\n      value: value\n    };\n  }, [registerOption, firstOption, containsCheckedOption, triggerChange, disabled, value]);\n  var propsWeControl = {\n    ref: radioGroupRef,\n    id: id,\n    role: 'radiogroup',\n    'aria-labelledby': labelledby,\n    'aria-describedby': describedby,\n    onKeyDown: handleKeyDown\n  };\n  return React.createElement(DescriptionProvider, {\n    name: \"RadioGroup.Description\"\n  }, React.createElement(LabelProvider, {\n    name: \"RadioGroup.Label\"\n  }, React.createElement(RadioGroupContext.Provider, {\n    value: api\n  }, render({\n    props: _extends({}, passThroughProps, propsWeControl),\n    defaultTag: DEFAULT_RADIO_GROUP_TAG,\n    name: 'RadioGroup'\n  }))));\n} // ---\n\n\nvar OptionState;\n\n(function (OptionState) {\n  OptionState[OptionState[\"Empty\"] = 1] = \"Empty\";\n  OptionState[OptionState[\"Active\"] = 2] = \"Active\";\n})(OptionState || (OptionState = {}));\n\nvar DEFAULT_OPTION_TAG$1 = 'div';\n\nfunction Option$1(props) {\n  var optionRef = useRef(null);\n  var id = \"headlessui-radiogroup-option-\" + useId();\n\n  var _useLabels2 = useLabels(),\n      labelledby = _useLabels2[0],\n      LabelProvider = _useLabels2[1];\n\n  var _useDescriptions2 = useDescriptions(),\n      describedby = _useDescriptions2[0],\n      DescriptionProvider = _useDescriptions2[1];\n\n  var _useFlags = useFlags(OptionState.Empty),\n      addFlag = _useFlags.addFlag,\n      removeFlag = _useFlags.removeFlag,\n      hasFlag = _useFlags.hasFlag;\n\n  var value = props.value,\n      _props$disabled2 = props.disabled,\n      disabled = _props$disabled2 === void 0 ? false : _props$disabled2,\n      passThroughProps = _objectWithoutPropertiesLoose(props, [\"value\", \"disabled\"]);\n\n  var propsRef = useRef({\n    value: value,\n    disabled: disabled\n  });\n  useIsoMorphicEffect(function () {\n    propsRef.current.value = value;\n  }, [value, propsRef]);\n  useIsoMorphicEffect(function () {\n    propsRef.current.disabled = disabled;\n  }, [disabled, propsRef]);\n\n  var _useRadioGroupContext = useRadioGroupContext([RadioGroup.name, Option$1.name].join('.')),\n      registerOption = _useRadioGroupContext.registerOption,\n      radioGroupDisabled = _useRadioGroupContext.disabled,\n      change = _useRadioGroupContext.change,\n      firstOption = _useRadioGroupContext.firstOption,\n      containsCheckedOption = _useRadioGroupContext.containsCheckedOption,\n      radioGroupValue = _useRadioGroupContext.value;\n\n  useIsoMorphicEffect(function () {\n    return registerOption({\n      id: id,\n      element: optionRef,\n      propsRef: propsRef\n    });\n  }, [id, registerOption, optionRef, props]);\n  var handleClick = useCallback(function () {\n    var _optionRef$current;\n\n    if (!change(value)) return;\n    addFlag(OptionState.Active);\n    (_optionRef$current = optionRef.current) == null ? void 0 : _optionRef$current.focus();\n  }, [addFlag, change, value]);\n  var handleFocus = useCallback(function () {\n    return addFlag(OptionState.Active);\n  }, [addFlag]);\n  var handleBlur = useCallback(function () {\n    return removeFlag(OptionState.Active);\n  }, [removeFlag]);\n  var isFirstOption = (firstOption == null ? void 0 : firstOption.id) === id;\n  var isDisabled = radioGroupDisabled || disabled;\n  var checked = radioGroupValue === value;\n  var propsWeControl = {\n    ref: optionRef,\n    id: id,\n    role: 'radio',\n    'aria-checked': checked ? 'true' : 'false',\n    'aria-labelledby': labelledby,\n    'aria-describedby': describedby,\n    tabIndex: function () {\n      if (isDisabled) return -1;\n      if (checked) return 0;\n      if (!containsCheckedOption && isFirstOption) return 0;\n      return -1;\n    }(),\n    onClick: isDisabled ? undefined : handleClick,\n    onFocus: isDisabled ? undefined : handleFocus,\n    onBlur: isDisabled ? undefined : handleBlur\n  };\n  var slot = useMemo(function () {\n    return {\n      checked: checked,\n      disabled: isDisabled,\n      active: hasFlag(OptionState.Active)\n    };\n  }, [checked, isDisabled, hasFlag]);\n  return React.createElement(DescriptionProvider, {\n    name: \"RadioGroup.Description\"\n  }, React.createElement(LabelProvider, {\n    name: \"RadioGroup.Label\"\n  }, render({\n    props: _extends({}, passThroughProps, propsWeControl),\n    slot: slot,\n    defaultTag: DEFAULT_OPTION_TAG$1,\n    name: 'RadioGroup.Option'\n  })));\n} // ---\n\n\nRadioGroup.Option = Option$1;\nRadioGroup.Label = Label$1;\nRadioGroup.Description = Description;\nvar GroupContext = /*#__PURE__*/createContext(null);\nGroupContext.displayName = 'GroupContext'; // ---\n\nvar DEFAULT_GROUP_TAG$2 = Fragment;\n\nfunction Group$2(props) {\n  var _useState = useState(null),\n      switchElement = _useState[0],\n      setSwitchElement = _useState[1];\n\n  var _useLabels = useLabels(),\n      labelledby = _useLabels[0],\n      LabelProvider = _useLabels[1];\n\n  var _useDescriptions = useDescriptions(),\n      describedby = _useDescriptions[0],\n      DescriptionProvider = _useDescriptions[1];\n\n  var context = useMemo(function () {\n    return {\n      \"switch\": switchElement,\n      setSwitch: setSwitchElement,\n      labelledby: labelledby,\n      describedby: describedby\n    };\n  }, [switchElement, setSwitchElement, labelledby, describedby]);\n  return React.createElement(DescriptionProvider, {\n    name: \"Switch.Description\"\n  }, React.createElement(LabelProvider, {\n    name: \"Switch.Label\",\n    props: {\n      onClick: function onClick() {\n        if (!switchElement) return;\n        switchElement.click();\n        switchElement.focus({\n          preventScroll: true\n        });\n      }\n    }\n  }, React.createElement(GroupContext.Provider, {\n    value: context\n  }, render({\n    props: props,\n    defaultTag: DEFAULT_GROUP_TAG$2,\n    name: 'Switch.Group'\n  }))));\n} // ---\n\n\nvar DEFAULT_SWITCH_TAG = 'button';\n\nfunction Switch(props) {\n  var checked = props.checked,\n      onChange = props.onChange,\n      passThroughProps = _objectWithoutPropertiesLoose(props, [\"checked\", \"onChange\"]);\n\n  var id = \"headlessui-switch-\" + useId();\n  var groupContext = useContext(GroupContext);\n  var toggle = useCallback(function () {\n    return onChange(!checked);\n  }, [onChange, checked]);\n  var handleClick = useCallback(function (event) {\n    if (isDisabledReactIssue7711(event.currentTarget)) return event.preventDefault();\n    event.preventDefault();\n    toggle();\n  }, [toggle]);\n  var handleKeyUp = useCallback(function (event) {\n    if (event.key !== Keys.Tab) event.preventDefault();\n    if (event.key === Keys.Space) toggle();\n  }, [toggle]); // This is needed so that we can \"cancel\" the click event when we use the `Enter` key on a button.\n\n  var handleKeyPress = useCallback(function (event) {\n    return event.preventDefault();\n  }, []);\n  var slot = useMemo(function () {\n    return {\n      checked: checked\n    };\n  }, [checked]);\n  var propsWeControl = {\n    id: id,\n    ref: groupContext === null ? undefined : groupContext.setSwitch,\n    role: 'switch',\n    tabIndex: 0,\n    'aria-checked': checked,\n    'aria-labelledby': groupContext == null ? void 0 : groupContext.labelledby,\n    'aria-describedby': groupContext == null ? void 0 : groupContext.describedby,\n    onClick: handleClick,\n    onKeyUp: handleKeyUp,\n    onKeyPress: handleKeyPress\n  };\n\n  if (passThroughProps.as === 'button') {\n    Object.assign(propsWeControl, {\n      type: 'button'\n    });\n  }\n\n  return render({\n    props: _extends({}, passThroughProps, propsWeControl),\n    slot: slot,\n    defaultTag: DEFAULT_SWITCH_TAG,\n    name: 'Switch'\n  });\n} // ---\n\n\nSwitch.Group = Group$2;\nSwitch.Label = Label$1;\nSwitch.Description = Description;\n\nfunction useIsInitialRender() {\n  var initial = useRef(true);\n  useEffect(function () {\n    initial.current = false;\n  }, []);\n  return initial.current;\n}\n\nfunction useIsMounted() {\n  var mounted = useRef(true);\n  useEffect(function () {\n    return function () {\n      mounted.current = false;\n    };\n  }, []);\n  return mounted;\n}\n\nfunction once(cb) {\n  var state = {\n    called: false\n  };\n  return function () {\n    if (state.called) return;\n    state.called = true;\n    return cb.apply(void 0, arguments);\n  };\n}\n\nfunction addClasses(node) {\n  var _node$classList;\n\n  for (var _len = arguments.length, classes = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    classes[_key - 1] = arguments[_key];\n  }\n\n  node && classes.length > 0 && (_node$classList = node.classList).add.apply(_node$classList, classes);\n}\n\nfunction removeClasses(node) {\n  var _node$classList2;\n\n  for (var _len2 = arguments.length, classes = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n    classes[_key2 - 1] = arguments[_key2];\n  }\n\n  node && classes.length > 0 && (_node$classList2 = node.classList).remove.apply(_node$classList2, classes);\n}\n\nvar Reason;\n\n(function (Reason) {\n  Reason[\"Finished\"] = \"finished\";\n  Reason[\"Cancelled\"] = \"cancelled\";\n})(Reason || (Reason = {}));\n\nfunction waitForTransition(node, done) {\n  var d = disposables();\n  if (!node) return d.dispose; // Safari returns a comma separated list of values, so let's sort them and take the highest value.\n\n  var _getComputedStyle = getComputedStyle(node),\n      transitionDuration = _getComputedStyle.transitionDuration,\n      transitionDelay = _getComputedStyle.transitionDelay;\n\n  var _map = [transitionDuration, transitionDelay].map(function (value) {\n    var _value$split$filter$m = value.split(',') // Remove falsy we can't work with\n    .filter(Boolean) // Values are returned as `0.3s` or `75ms`\n    .map(function (v) {\n      return v.includes('ms') ? parseFloat(v) : parseFloat(v) * 1000;\n    }).sort(function (a, z) {\n      return z - a;\n    }),\n        _value$split$filter$m2 = _value$split$filter$m[0],\n        resolvedValue = _value$split$filter$m2 === void 0 ? 0 : _value$split$filter$m2;\n\n    return resolvedValue;\n  }),\n      durationMs = _map[0],\n      delaysMs = _map[1]; // Waiting for the transition to end. We could use the `transitionend` event, however when no\n  // actual transition/duration is defined then the `transitionend` event is not fired.\n  //\n  // TODO: Downside is, when you slow down transitions via devtools this timeout is still using the\n  // full 100% speed instead of the 25% or 10%.\n\n\n  if (durationMs !== 0) {\n    d.setTimeout(function () {\n      done(Reason.Finished);\n    }, durationMs + delaysMs);\n  } else {\n    // No transition is happening, so we should cleanup already. Otherwise we have to wait until we\n    // get disposed.\n    done(Reason.Finished);\n  } // If we get disposed before the timeout runs we should cleanup anyway\n\n\n  d.add(function () {\n    return done(Reason.Cancelled);\n  });\n  return d.dispose;\n}\n\nfunction transition(node, base, from, to, done) {\n  var d = disposables();\n\n  var _done = done !== undefined ? once(done) : function () {};\n\n  addClasses.apply(void 0, [node].concat(base, from));\n  d.nextFrame(function () {\n    removeClasses.apply(void 0, [node].concat(from));\n    addClasses.apply(void 0, [node].concat(to));\n    d.add(waitForTransition(node, function (reason) {\n      removeClasses.apply(void 0, [node].concat(to, base));\n      return _done(reason);\n    }));\n  }); // Once we get disposed, we should ensure that we cleanup after ourselves. In case of an unmount,\n  // the node itself will be nullified and will be a no-op. In case of a full transition the classes\n  // are already removed which is also a no-op. However if you go from enter -> leave mid-transition\n  // then we have some leftovers that should be cleaned.\n\n  d.add(function () {\n    return removeClasses.apply(void 0, [node].concat(base, from, to));\n  }); // When we get disposed early, than we should also call the done method but switch the reason.\n\n  d.add(function () {\n    return _done(Reason.Cancelled);\n  });\n  return d.dispose;\n}\n\nfunction useSplitClasses(classes) {\n  if (classes === void 0) {\n    classes = '';\n  }\n\n  return useMemo(function () {\n    return classes.split(' ').filter(function (className) {\n      return className.trim().length > 1;\n    });\n  }, [classes]);\n}\n\nvar TransitionContext = /*#__PURE__*/createContext(null);\nTransitionContext.displayName = 'TransitionContext';\nvar TreeStates;\n\n(function (TreeStates) {\n  TreeStates[\"Visible\"] = \"visible\";\n  TreeStates[\"Hidden\"] = \"hidden\";\n})(TreeStates || (TreeStates = {}));\n\nfunction useTransitionContext() {\n  var context = useContext(TransitionContext);\n\n  if (context === null) {\n    throw new Error('A <Transition.Child /> is used but it is missing a parent <Transition /> or <Transition.Root />.');\n  }\n\n  return context;\n}\n\nfunction useParentNesting() {\n  var context = useContext(NestingContext);\n\n  if (context === null) {\n    throw new Error('A <Transition.Child /> is used but it is missing a parent <Transition /> or <Transition.Root />.');\n  }\n\n  return context;\n}\n\nvar NestingContext = /*#__PURE__*/createContext(null);\nNestingContext.displayName = 'NestingContext';\n\nfunction hasChildren(bag) {\n  if ('children' in bag) return hasChildren(bag.children);\n  return bag.current.filter(function (_ref) {\n    var state = _ref.state;\n    return state === TreeStates.Visible;\n  }).length > 0;\n}\n\nfunction useNesting(done) {\n  var doneRef = useRef(done);\n  var transitionableChildren = useRef([]);\n  var mounted = useIsMounted();\n  useEffect(function () {\n    doneRef.current = done;\n  }, [done]);\n  var unregister = useCallback(function (childId, strategy) {\n    var _match;\n\n    if (strategy === void 0) {\n      strategy = RenderStrategy.Hidden;\n    }\n\n    var idx = transitionableChildren.current.findIndex(function (_ref2) {\n      var id = _ref2.id;\n      return id === childId;\n    });\n    if (idx === -1) return;\n    match(strategy, (_match = {}, _match[RenderStrategy.Unmount] = function () {\n      transitionableChildren.current.splice(idx, 1);\n    }, _match[RenderStrategy.Hidden] = function () {\n      transitionableChildren.current[idx].state = TreeStates.Hidden;\n    }, _match));\n\n    if (!hasChildren(transitionableChildren) && mounted.current) {\n      doneRef.current == null ? void 0 : doneRef.current();\n    }\n  }, [doneRef, mounted, transitionableChildren]);\n  var register = useCallback(function (childId) {\n    var child = transitionableChildren.current.find(function (_ref3) {\n      var id = _ref3.id;\n      return id === childId;\n    });\n\n    if (!child) {\n      transitionableChildren.current.push({\n        id: childId,\n        state: TreeStates.Visible\n      });\n    } else if (child.state !== TreeStates.Visible) {\n      child.state = TreeStates.Visible;\n    }\n\n    return function () {\n      return unregister(childId, RenderStrategy.Unmount);\n    };\n  }, [transitionableChildren, unregister]);\n  return useMemo(function () {\n    return {\n      children: transitionableChildren,\n      register: register,\n      unregister: unregister\n    };\n  }, [register, unregister, transitionableChildren]);\n}\n\nfunction noop() {}\n\nvar eventNames = ['beforeEnter', 'afterEnter', 'beforeLeave', 'afterLeave'];\n\nfunction ensureEventHooksExist(events) {\n  var result = {};\n\n  for (var _iterator = _createForOfIteratorHelperLoose(eventNames), _step; !(_step = _iterator()).done;) {\n    var _events$name;\n\n    var name = _step.value;\n    result[name] = (_events$name = events[name]) != null ? _events$name : noop;\n  }\n\n  return result;\n}\n\nfunction useEvents(events) {\n  var eventsRef = useRef(ensureEventHooksExist(events));\n  useEffect(function () {\n    eventsRef.current = ensureEventHooksExist(events);\n  }, [events]);\n  return eventsRef;\n} // ---\n\n\nvar DEFAULT_TRANSITION_CHILD_TAG = 'div';\nvar TransitionChildRenderFeatures = Features.RenderStrategy;\n\nfunction TransitionChild(props) {\n  var beforeEnter = props.beforeEnter,\n      afterEnter = props.afterEnter,\n      beforeLeave = props.beforeLeave,\n      afterLeave = props.afterLeave,\n      enter = props.enter,\n      enterFrom = props.enterFrom,\n      enterTo = props.enterTo,\n      leave = props.leave,\n      leaveFrom = props.leaveFrom,\n      leaveTo = props.leaveTo,\n      rest = _objectWithoutPropertiesLoose(props, [\"beforeEnter\", \"afterEnter\", \"beforeLeave\", \"afterLeave\", \"enter\", \"enterFrom\", \"enterTo\", \"leave\", \"leaveFrom\", \"leaveTo\"]);\n\n  var container = useRef(null);\n\n  var _useState = useState(TreeStates.Visible),\n      state = _useState[0],\n      setState = _useState[1];\n\n  var strategy = rest.unmount ? RenderStrategy.Unmount : RenderStrategy.Hidden;\n\n  var _useTransitionContext = useTransitionContext(),\n      show = _useTransitionContext.show,\n      appear = _useTransitionContext.appear;\n\n  var _useParentNesting = useParentNesting(),\n      register = _useParentNesting.register,\n      unregister = _useParentNesting.unregister;\n\n  var initial = useIsInitialRender();\n  var id = useId();\n  var isTransitioning = useRef(false);\n  var nesting = useNesting(function () {\n    // When all children have been unmounted we can only hide ourselves if and only if we are not\n    // transitioning ourselves. Otherwise we would unmount before the transitions are finished.\n    if (!isTransitioning.current) {\n      setState(TreeStates.Hidden);\n      unregister(id);\n      events.current.afterLeave();\n    }\n  });\n  useIsoMorphicEffect(function () {\n    if (!id) return;\n    return register(id);\n  }, [register, id]);\n  useIsoMorphicEffect(function () {\n    var _match2; // If we are in another mode than the Hidden mode then ignore\n\n\n    if (strategy !== RenderStrategy.Hidden) return;\n    if (!id) return; // Make sure that we are visible\n\n    if (show && state !== TreeStates.Visible) {\n      setState(TreeStates.Visible);\n      return;\n    }\n\n    match(state, (_match2 = {}, _match2[TreeStates.Hidden] = function () {\n      return unregister(id);\n    }, _match2[TreeStates.Visible] = function () {\n      return register(id);\n    }, _match2));\n  }, [state, id, register, unregister, show, strategy]);\n  var enterClasses = useSplitClasses(enter);\n  var enterFromClasses = useSplitClasses(enterFrom);\n  var enterToClasses = useSplitClasses(enterTo);\n  var leaveClasses = useSplitClasses(leave);\n  var leaveFromClasses = useSplitClasses(leaveFrom);\n  var leaveToClasses = useSplitClasses(leaveTo);\n  var events = useEvents({\n    beforeEnter: beforeEnter,\n    afterEnter: afterEnter,\n    beforeLeave: beforeLeave,\n    afterLeave: afterLeave\n  });\n  useEffect(function () {\n    if (state === TreeStates.Visible && container.current === null) {\n      throw new Error('Did you forget to passthrough the `ref` to the actual DOM node?');\n    }\n  }, [container, state]); // Skipping initial transition\n\n  var skip = initial && !appear;\n  useIsoMorphicEffect(function () {\n    var node = container.current;\n    if (!node) return;\n    if (skip) return;\n    isTransitioning.current = true;\n    if (show) events.current.beforeEnter();\n    if (!show) events.current.beforeLeave();\n    return show ? transition(node, enterClasses, enterFromClasses, enterToClasses, function (reason) {\n      isTransitioning.current = false;\n      if (reason === Reason.Finished) events.current.afterEnter();\n    }) : transition(node, leaveClasses, leaveFromClasses, leaveToClasses, function (reason) {\n      isTransitioning.current = false;\n      if (reason !== Reason.Finished) return; // When we don't have children anymore we can safely unregister from the parent and hide\n      // ourselves.\n\n      if (!hasChildren(nesting)) {\n        setState(TreeStates.Hidden);\n        unregister(id);\n        events.current.afterLeave();\n      }\n    });\n  }, [events, id, isTransitioning, unregister, nesting, container, skip, show, enterClasses, enterFromClasses, enterToClasses, leaveClasses, leaveFromClasses, leaveToClasses]);\n  var propsWeControl = {\n    ref: container\n  };\n  var passthroughProps = rest;\n  return React.createElement(NestingContext.Provider, {\n    value: nesting\n  }, render({\n    props: _extends({}, passthroughProps, propsWeControl),\n    defaultTag: DEFAULT_TRANSITION_CHILD_TAG,\n    features: TransitionChildRenderFeatures,\n    visible: state === TreeStates.Visible,\n    name: 'Transition.Child'\n  }));\n}\n\nfunction Transition(props) {\n  // @ts-expect-error\n  var show = props.show,\n      _props$appear = props.appear,\n      appear = _props$appear === void 0 ? false : _props$appear,\n      unmount = props.unmount,\n      passthroughProps = _objectWithoutPropertiesLoose(props, [\"show\", \"appear\", \"unmount\"]);\n\n  if (![true, false].includes(show)) {\n    throw new Error('A <Transition /> is used but it is missing a `show={true | false}` prop.');\n  }\n\n  var _useState2 = useState(show ? TreeStates.Visible : TreeStates.Hidden),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  var nestingBag = useNesting(function () {\n    setState(TreeStates.Hidden);\n  });\n  var initial = useIsInitialRender();\n  var transitionBag = useMemo(function () {\n    return {\n      show: show,\n      appear: appear || !initial\n    };\n  }, [show, appear, initial]);\n  useEffect(function () {\n    if (show) {\n      setState(TreeStates.Visible);\n    } else if (!hasChildren(nestingBag)) {\n      setState(TreeStates.Hidden);\n    }\n  }, [show, nestingBag]);\n  var sharedProps = {\n    unmount: unmount\n  };\n  return React.createElement(NestingContext.Provider, {\n    value: nestingBag\n  }, React.createElement(TransitionContext.Provider, {\n    value: transitionBag\n  }, render({\n    props: _extends({}, sharedProps, {\n      as: Fragment,\n      children: React.createElement(TransitionChild, Object.assign({}, sharedProps, passthroughProps))\n    }),\n    defaultTag: Fragment,\n    features: TransitionChildRenderFeatures,\n    visible: state === TreeStates.Visible,\n    name: 'Transition'\n  })));\n}\n\nTransition.Child = TransitionChild;\nTransition.Root = Transition;\nexport { Dialog, Disclosure, FocusTrap, Listbox, Menu, Popover, Portal, RadioGroup, Switch, Transition };","map":{"version":3,"sources":["../src/utils/match.ts","../src/utils/render.ts","../src/hooks/use-sync-refs.ts","../src/components/keyboard.ts","../src/utils/bugs.ts","../src/hooks/use-iso-morphic-effect.ts","../src/hooks/use-id.ts","../src/utils/focus-management.ts","../src/internal/dom-containers.ts","../src/hooks/use-window-event.ts","../src/hooks/use-focus-trap.ts","../src/hooks/use-inert-others.ts","../src/internal/stack-context.tsx","../src/internal/portal-force-root.tsx","../src/components/portal/portal.tsx","../src/components/description/description.tsx","../src/components/dialog/dialog.tsx","../src/components/disclosure/disclosure.tsx","../src/components/focus-trap/focus-trap.tsx","../src/utils/disposables.ts","../src/hooks/use-disposables.ts","../src/hooks/use-computed.ts","../src/utils/calculate-active-index.ts","../src/components/listbox/listbox.tsx","../src/hooks/use-tree-walker.ts","../src/components/menu/menu.tsx","../src/components/popover/popover.tsx","../src/hooks/use-flags.ts","../src/components/label/label.tsx","../src/components/radio-group/radio-group.tsx","../src/components/switch/switch.tsx","../src/hooks/use-is-initial-render.ts","../src/hooks/use-is-mounted.ts","../src/utils/once.ts","../src/components/transitions/utils/transition.ts","../src/components/transitions/transition.tsx"],"names":["match","value","lookup","args","returnValue","error","Error","Features","RenderStrategy","render","props","slot","defaultTag","features","visible","name","_render","featureFlags","isStatic","rest","unmount","strategy","hidden","style","display","as","Component","tag","children","refName","passThroughProps","omit","refRelatedProps","resolvedChildren","Object","isValidElement","Array","cloneElement","mergeEventFunctions","compact","createElement","clone","func","existingProps","event","forwardRefWithAs","component","forwardRef","displayName","keysToOmit","key","useSyncRefs","refs","cache","useRef","useEffect","useCallback","ref","Keys","isDisabledReactIssue7711","element","parent","legend","isParentDisabled","isFirstLegend","previous","useIsoMorphicEffect","state","serverHandoffComplete","id","useId","setId","useState","generateId","focusableSelector","selector","Focus","FocusResult","Direction","getFocusableElements","container","document","body","FocusableMode","isFocusableElement","mode","Strict","next","focusElement","preventScroll","focusIn","focus","elements","active","direction","startIndex","Math","focusOptions","offset","total","nextIdx","contains","containers","useWindowEvent","type","listener","options","window","useFocusTrap","enabled","restoreElement","previousActiveElement","mounted","activeElement","couldFocus","result","toElement","interactables","originals","original","useInertOthers","restore","child","interactable","inert","StackContext","createContext","StackMessage","useStackContext","useContext","useElementStack","notify","StackProvider","onUpdate","parentUpdate","ForcePortalRootContext","usePortalRoot","ForcePortalRoot","force","forceInRoot","groupTarget","target","setTarget","existingRoot","root","DEFAULT_PORTAL_TAG","Portal","passthroughProps","usePortalTarget","React","createPortal","DEFAULT_GROUP_TAG","PortalGroupContext","DescriptionContext","context","err","useDescriptions","descriptionIds","setDescriptionIds","useMemo","register","existing","idx","contextBag","DEFAULT_DESCRIPTION_TAG","Description","useDescriptionContext","propsWeControl","DialogStates","ActionTypes","reducers","action","titleId","DialogContext","Dialog","DEFAULT_DIALOG_TAG","DialogRenderFeatures","DialogRoot","open","onClose","initialFocus","internalDialogRef","dialogRef","hasOpen","hasOnClose","dialogState","dispatch","useReducer","descriptionId","close","setTitleId","overflow","paddingRight","scrollbarWidth","observer","entry","describedby","DescriptionProvider","Open","role","onClick","onKeyDown","DEFAULT_OVERLAY_TAG","Overlay","useDialogContext","overlayRef","handleClick","DEFAULT_TITLE_TAG","Title","DisclosureStates","disclosureState","linkedPanel","buttonId","panelId","DisclosureContext","Disclosure","DEFAULT_DISCLOSURE_TAG","defaultOpen","reducerBag","DEFAULT_BUTTON_TAG","Button","useDisclosureContext","buttonRef","handleKeyDown","ToggleDisclosure","handleKeyUp","onKeyUp","DEFAULT_PANEL_TAG","PanelRenderFeatures","Panel","panelRef","LinkPanel","UnlinkPanel","DEFAULT_FOCUS_TRAP_TAG","FocusTrap","disposables","api","requestAnimationFrame","raf","cancelAnimationFrame","nextFrame","setTimeout","timer","clearTimeout","add","dispose","useDisposables","d","useComputed","cb","dependencies","setValue","cbRef","calculateActiveIndex","resolvers","items","currentActiveIndex","activeIndex","nextActiveIndex","all","assertNever","ListboxStates","activeOptionIndex","listboxState","Closed","disabled","resolveItems","resolveActiveIndex","resolveId","item","resolveDisabled","searchQuery","option","dataRef","nextOptions","currentActiveOption","a","ListboxContext","Listbox","DEFAULT_LISTBOX_TAG","onChange","propsRef","current","labelRef","createRef","optionsRef","CloseListbox","useListboxContext","OpenListbox","First","Last","labelledby","DEFAULT_LABEL_TAG","Label","DEFAULT_OPTIONS_TAG","OptionsRenderFeatures","Options","searchDisposables","Next","Previous","ClearSearch","tabIndex","DEFAULT_OPTION_TAG","Option","selected","bag","select","block","handleFocus","Nothing","handleMove","handleLeave","onFocus","onPointerMove","onMouseMove","onPointerLeave","onMouseLeave","useTreeWalker","accept","walk","acceptRef","walkRef","acceptNode","walker","NodeFilter","MenuStates","activeItemIndex","menuState","nextItems","currentActiveItem","MenuContext","Menu","DEFAULT_MENU_TAG","itemsRef","CloseMenu","useMenuContext","OpenMenu","DEFAULT_ITEMS_TAG","ItemsRenderFeatures","Items","node","DEFAULT_ITEM_TAG","Item","PopoverStates","popoverState","button","panel","PopoverContext","Popover","PopoverGroupContext","PopoverPanelContext","DEFAULT_POPOVER_TAG","registerBag","ClosePopover","groupContext","usePopoverGroupContext","registerPopover","isFocusWithinPopoverGroup","usePopoverContext","internalButtonRef","closeOthers","panelContext","usePopoverPanelContext","isWithinPanel","activeElementRef","previousActiveElementRef","TogglePopover","focusableElements","previousIdx","buttonIdx","OverlayRenderFeatures","internalPanelRef","nextElements","groupRef","popovers","setPopovers","unregisterPopover","popover","useFlags","initialFlags","flags","setFlags","addFlag","hasFlag","Boolean","removeFlag","toggleFlag","LabelContext","useLabels","labelIds","setLabelIds","passive","useLabelContext","allProps","radio","RadioGroupContext","RadioGroup","DEFAULT_RADIO_GROUP_TAG","LabelProvider","radioGroupRef","firstOption","containsCheckedOption","triggerChange","nextValue","nextOption","activeOption","registerOption","RegisterOption","change","OptionState","optionRef","radioGroupDisabled","radioGroupValue","useRadioGroupContext","handleBlur","isFirstOption","isDisabled","checked","onBlur","GroupContext","switchElement","setSwitchElement","setSwitch","DEFAULT_SWITCH_TAG","Switch","toggle","handleKeyPress","onKeyPress","useIsInitialRender","initial","useIsMounted","once","called","classes","Reason","transitionDuration","transitionDelay","getComputedStyle","durationMs","delaysMs","resolvedValue","v","parseFloat","z","done","transition","base","from","to","_done","addClasses","removeClasses","waitForTransition","className","TransitionContext","TreeStates","NestingContext","hasChildren","doneRef","transitionableChildren","unregister","Hidden","Visible","eventNames","events","eventsRef","ensureEventHooksExist","DEFAULT_TRANSITION_CHILD_TAG","TransitionChildRenderFeatures","beforeEnter","afterEnter","beforeLeave","afterLeave","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","setState","show","appear","useTransitionContext","useParentNesting","isTransitioning","nesting","useNesting","enterClasses","useSplitClasses","enterFromClasses","enterToClasses","leaveClasses","leaveFromClasses","leaveToClasses","useEvents","skip","reason","Transition","nestingBag","transitionBag","sharedProps"],"mappings":"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","sourcesContent":["export function match<TValue extends string | number = string, TReturnValue = unknown>(\n  value: TValue,\n  lookup: Record<TValue, TReturnValue | ((...args: any[]) => TReturnValue)>,\n  ...args: any[]\n): TReturnValue {\n  if (value in lookup) {\n    let returnValue = lookup[value]\n    return typeof returnValue === 'function' ? returnValue(...args) : returnValue\n  }\n\n  let error = new Error(\n    `Tried to handle \"${value}\" but there is no handler defined. Only defined handlers are: ${Object.keys(\n      lookup\n    )\n      .map(key => `\"${key}\"`)\n      .join(', ')}.`\n  )\n  if (Error.captureStackTrace) Error.captureStackTrace(error, match)\n  throw error\n}\n","import {\n  Fragment,\n  cloneElement,\n  createElement,\n  forwardRef,\n  isValidElement,\n\n  // Types\n  ElementType,\n  ReactElement,\n} from 'react'\nimport { Props, XOR, __, Expand } from '../types'\nimport { match } from './match'\n\nexport enum Features {\n  /** No features at all */\n  None = 0,\n\n  /**\n   * When used, this will allow us to use one of the render strategies.\n   *\n   * **The render strategies are:**\n   *    - **Unmount**   _(Will unmount the component.)_\n   *    - **Hidden**    _(Will hide the component using the [hidden] attribute.)_\n   */\n  RenderStrategy = 1,\n\n  /**\n   * When used, this will allow the user of our component to be in control. This can be used when\n   * you want to transition based on some state.\n   */\n  Static = 2,\n}\n\nexport enum RenderStrategy {\n  Unmount,\n  Hidden,\n}\n\ntype PropsForFeature<TPassedInFeatures extends Features, TForFeature extends Features, TProps> = {\n  [P in TPassedInFeatures]: P extends TForFeature ? TProps : __\n}[TPassedInFeatures]\n\nexport type PropsForFeatures<T extends Features> = XOR<\n  PropsForFeature<T, Features.Static, { static?: boolean }>,\n  PropsForFeature<T, Features.RenderStrategy, { unmount?: boolean }>\n>\n\nexport function render<TFeature extends Features, TTag extends ElementType, TSlot>({\n  props,\n  slot,\n  defaultTag,\n  features,\n  visible = true,\n  name,\n}: {\n  props: Expand<Props<TTag, TSlot, any> & PropsForFeatures<TFeature>>\n  slot?: TSlot\n  defaultTag: ElementType\n  features?: TFeature\n  visible?: boolean\n  name: string\n}) {\n  // Visible always render\n  if (visible) return _render(props, slot, defaultTag, name)\n\n  let featureFlags = features ?? Features.None\n\n  if (featureFlags & Features.Static) {\n    let { static: isStatic = false, ...rest } = props as PropsForFeatures<Features.Static>\n\n    // When the `static` prop is passed as `true`, then the user is in control, thus we don't care about anything else\n    if (isStatic) return _render(rest, slot, defaultTag, name)\n  }\n\n  if (featureFlags & Features.RenderStrategy) {\n    let { unmount = true, ...rest } = props as PropsForFeatures<Features.RenderStrategy>\n    let strategy = unmount ? RenderStrategy.Unmount : RenderStrategy.Hidden\n\n    return match(strategy, {\n      [RenderStrategy.Unmount]() {\n        return null\n      },\n      [RenderStrategy.Hidden]() {\n        return _render(\n          { ...rest, ...{ hidden: true, style: { display: 'none' } } },\n          slot,\n          defaultTag,\n          name\n        )\n      },\n    })\n  }\n\n  // No features enabled, just render\n  return _render(props, slot, defaultTag, name)\n}\n\nfunction _render<TTag extends ElementType, TSlot>(\n  props: Props<TTag, TSlot> & { ref?: unknown },\n  slot: TSlot = {} as TSlot,\n  tag: ElementType,\n  name: string\n) {\n  let { as: Component = tag, children, refName = 'ref', ...passThroughProps } = omit(props, [\n    'unmount',\n    'static',\n  ])\n\n  // This allows us to use `<HeadlessUIComponent as={MyComponent} refName=\"innerRef\" />`\n  let refRelatedProps = props.ref !== undefined ? { [refName]: props.ref } : {}\n\n  let resolvedChildren = (typeof children === 'function' ? children(slot) : children) as\n    | ReactElement\n    | ReactElement[]\n\n  // Allow for className to be a function with the slot as the contents\n  if (passThroughProps.className && typeof passThroughProps.className === 'function') {\n    ;(passThroughProps as any).className = passThroughProps.className(slot)\n  }\n\n  if (Component === Fragment) {\n    if (Object.keys(passThroughProps).length > 0) {\n      if (\n        !isValidElement(resolvedChildren) ||\n        (Array.isArray(resolvedChildren) && resolvedChildren.length > 1)\n      ) {\n        throw new Error(\n          [\n            'Passing props on \"Fragment\"!',\n            '',\n            `The current component <${name} /> is rendering a \"Fragment\".`,\n            `However we need to passthrough the following props:`,\n            Object.keys(passThroughProps)\n              .map(line => `  - ${line}`)\n              .join('\\n'),\n            '',\n            'You can apply a few solutions:',\n            [\n              'Add an `as=\"...\"` prop, to ensure that we render an actual element instead of a \"Fragment\".',\n              'Render a single element as the child so that we can forward the props onto that element.',\n            ]\n              .map(line => `  - ${line}`)\n              .join('\\n'),\n          ].join('\\n')\n        )\n      }\n\n      return cloneElement(\n        resolvedChildren,\n        Object.assign(\n          {},\n          // Filter out undefined values so that they don't override the existing values\n          mergeEventFunctions(compact(omit(passThroughProps, ['ref'])), resolvedChildren.props, [\n            'onClick',\n          ]),\n          refRelatedProps\n        )\n      )\n    }\n  }\n\n  return createElement(\n    Component,\n    Object.assign({}, omit(passThroughProps, ['ref']), Component !== Fragment && refRelatedProps),\n    resolvedChildren\n  )\n}\n\n/**\n * We can use this function for the following useCase:\n *\n * <Menu.Item> <button onClick={console.log} /> </Menu.Item>\n *\n * Our `Menu.Item` will have an internal `onClick`, if you passthrough an `onClick` to the actual\n * `Menu.Item` component we will call it correctly. However, when we have an `onClick` on the actual\n * first child, that one should _also_ be called (but before this implementation, it was just\n * overriding the `onClick`). But it is only when we *render* that we have access to the existing\n * props of this component.\n *\n * It's a bit hacky, and not that clean, but it is something internal and we have tests to rely on\n * so that we can refactor this later (if needed).\n */\nfunction mergeEventFunctions(\n  passThroughProps: Record<string, any>,\n  existingProps: Record<string, any>,\n  functionsToMerge: string[]\n) {\n  let clone = Object.assign({}, passThroughProps)\n  for (let func of functionsToMerge) {\n    if (passThroughProps[func] !== undefined && existingProps[func] !== undefined) {\n      Object.assign(clone, {\n        [func](event: { defaultPrevented: boolean }) {\n          // Props we control\n          if (!event.defaultPrevented) passThroughProps[func](event)\n\n          // Existing props on the component\n          if (!event.defaultPrevented) existingProps[func](event)\n        },\n      })\n    }\n  }\n\n  return clone\n}\n\n/**\n * This is a hack, but basically we want to keep the full 'API' of the component, but we do want to\n * wrap it in a forwardRef so that we _can_ passthrough the ref\n */\nexport function forwardRefWithAs<T extends { name: string; displayName?: string }>(\n  component: T\n): T & { displayName: string } {\n  return Object.assign(forwardRef((component as unknown) as any) as any, {\n    displayName: component.displayName ?? component.name,\n  })\n}\n\nfunction compact<T extends Record<any, any>>(object: T) {\n  let clone = Object.assign({}, object)\n  for (let key in clone) {\n    if (clone[key] === undefined) delete clone[key]\n  }\n  return clone\n}\n\nfunction omit<T extends Record<any, any>>(object: T, keysToOmit: string[] = []) {\n  let clone = Object.assign({}, object)\n  for (let key of keysToOmit) {\n    if (key in clone) delete clone[key]\n  }\n  return clone\n}\n","import { useRef, useEffect, useCallback } from 'react'\n\nexport function useSyncRefs<TType>(\n  ...refs: (React.MutableRefObject<TType> | ((instance: TType) => void) | null)[]\n) {\n  let cache = useRef(refs)\n\n  useEffect(() => {\n    cache.current = refs\n  }, [refs])\n\n  return useCallback(\n    (value: TType) => {\n      for (let ref of cache.current) {\n        if (ref == null) continue\n        if (typeof ref === 'function') ref(value)\n        else ref.current = value\n      }\n    },\n    [cache]\n  )\n}\n","// TODO: This must already exist somewhere, right? 🤔\n// Ref: https://www.w3.org/TR/uievents-key/#named-key-attribute-values\nexport enum Keys {\n  Space = ' ',\n  Enter = 'Enter',\n  Escape = 'Escape',\n  Backspace = 'Backspace',\n\n  ArrowLeft = 'ArrowLeft',\n  ArrowUp = 'ArrowUp',\n  ArrowRight = 'ArrowRight',\n  ArrowDown = 'ArrowDown',\n\n  Home = 'Home',\n  End = 'End',\n\n  PageUp = 'PageUp',\n  PageDown = 'PageDown',\n\n  Tab = 'Tab',\n}\n","// See: https://github.com/facebook/react/issues/7711\n// See: https://github.com/facebook/react/pull/20612\n// See: https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#concept-fe-disabled (2.)\nexport function isDisabledReactIssue7711(element: Element): boolean {\n  let parent = element.parentElement\n  let legend = null\n\n  while (parent && !(parent instanceof HTMLFieldSetElement)) {\n    if (parent instanceof HTMLLegendElement) legend = parent\n    parent = parent.parentElement\n  }\n\n  let isParentDisabled = parent?.getAttribute('disabled') === '' ?? false\n  if (isParentDisabled && isFirstLegend(legend)) return false\n\n  return isParentDisabled\n}\n\nfunction isFirstLegend(element: HTMLLegendElement | null): boolean {\n  if (!element) return false\n\n  let previous = element.previousElementSibling\n\n  while (previous !== null) {\n    if (previous instanceof HTMLLegendElement) return false\n    previous = previous.previousElementSibling\n  }\n\n  return true\n}\n","import { useLayoutEffect, useEffect } from 'react'\n\nexport const useIsoMorphicEffect = typeof window !== 'undefined' ? useLayoutEffect : useEffect\n","import { useState, useEffect } from 'react'\nimport { useIsoMorphicEffect } from './use-iso-morphic-effect'\n\n// We used a \"simple\" approach first which worked for SSR and rehydration on the client. However we\n// didn't take care of the Suspense case. To fix this we used the approach the @reach-ui/auto-id\n// uses.\n//\n// Credits: https://github.com/reach/reach-ui/blob/develop/packages/auto-id/src/index.tsx\n\nlet state = { serverHandoffComplete: false }\nlet id = 0\nfunction generateId() {\n  return ++id\n}\n\nexport function useId() {\n  let [id, setId] = useState(state.serverHandoffComplete ? generateId : null)\n\n  useIsoMorphicEffect(() => {\n    if (id === null) setId(generateId())\n  }, [id])\n\n  useEffect(() => {\n    if (state.serverHandoffComplete === false) state.serverHandoffComplete = true\n  }, [])\n\n  return id != null ? '' + id : undefined\n}\n","import { match } from './match'\n\n// Credit:\n//  - https://stackoverflow.com/a/30753870\nlet focusableSelector = [\n  '[contentEditable=true]',\n  '[tabindex]',\n  'a[href]',\n  'area[href]',\n  'button:not([disabled])',\n  'iframe',\n  'input:not([disabled])',\n  'select:not([disabled])',\n  'textarea:not([disabled])',\n]\n  .map(\n    process.env.NODE_ENV === 'test'\n      ? // TODO: Remove this once JSDOM fixes the issue where an element that is\n        // \"hidden\" can be the document.activeElement, because this is not possible\n        // in real browsers.\n        selector => `${selector}:not([tabindex='-1']):not([style*='display: none'])`\n      : selector => `${selector}:not([tabindex='-1'])`\n  )\n  .join(',')\n\nexport enum Focus {\n  /** Focus the first non-disabled element */\n  First = 1 << 0,\n\n  /** Focus the previous non-disabled element */\n  Previous = 1 << 1,\n\n  /** Focus the next non-disabled element */\n  Next = 1 << 2,\n\n  /** Focus the last non-disabled element */\n  Last = 1 << 3,\n\n  /** Wrap tab around */\n  WrapAround = 1 << 4,\n\n  /** Prevent scrolling the focusable elements into view */\n  NoScroll = 1 << 5,\n}\n\nexport enum FocusResult {\n  Error,\n  Overflow,\n  Success,\n  Underflow,\n}\n\nenum Direction {\n  Previous = -1,\n  Next = 1,\n}\n\nexport function getFocusableElements(container: HTMLElement | null = document.body) {\n  if (container == null) return []\n  return Array.from(container.querySelectorAll<HTMLElement>(focusableSelector))\n}\n\nexport enum FocusableMode {\n  /** The element itself must be focusable. */\n  Strict,\n\n  /** The element should be inside of a focusable element. */\n  Loose,\n}\n\nexport function isFocusableElement(\n  element: HTMLElement,\n  mode: FocusableMode = FocusableMode.Strict\n) {\n  if (element === document.body) return false\n\n  return match(mode, {\n    [FocusableMode.Strict]() {\n      return element.matches(focusableSelector)\n    },\n    [FocusableMode.Loose]() {\n      let next: HTMLElement | null = element\n\n      while (next !== null) {\n        if (next.matches(focusableSelector)) return true\n        next = next.parentElement\n      }\n\n      return false\n    },\n  })\n}\n\nexport function focusElement(element: HTMLElement | null) {\n  element?.focus({ preventScroll: true })\n}\n\nexport function focusIn(container: HTMLElement | HTMLElement[], focus: Focus) {\n  let elements = Array.isArray(container) ? container : getFocusableElements(container)\n  let active = document.activeElement as HTMLElement\n\n  let direction = (() => {\n    if (focus & (Focus.First | Focus.Next)) return Direction.Next\n    if (focus & (Focus.Previous | Focus.Last)) return Direction.Previous\n\n    throw new Error('Missing Focus.First, Focus.Previous, Focus.Next or Focus.Last')\n  })()\n\n  let startIndex = (() => {\n    if (focus & Focus.First) return 0\n    if (focus & Focus.Previous) return Math.max(0, elements.indexOf(active)) - 1\n    if (focus & Focus.Next) return Math.max(0, elements.indexOf(active)) + 1\n    if (focus & Focus.Last) return elements.length - 1\n\n    throw new Error('Missing Focus.First, Focus.Previous, Focus.Next or Focus.Last')\n  })()\n\n  let focusOptions = focus & Focus.NoScroll ? { preventScroll: true } : {}\n\n  let offset = 0\n  let total = elements.length\n  let next = undefined\n  do {\n    // Guard against infinite loops\n    if (offset >= total || offset + total <= 0) return FocusResult.Error\n\n    let nextIdx = startIndex + offset\n\n    if (focus & Focus.WrapAround) {\n      nextIdx = (nextIdx + total) % total\n    } else {\n      if (nextIdx < 0) return FocusResult.Underflow\n      if (nextIdx >= total) return FocusResult.Overflow\n    }\n\n    next = elements[nextIdx]\n\n    // Try the focus the next element, might not work if it is \"hidden\" to the user.\n    next?.focus(focusOptions)\n\n    // Try the next one in line\n    offset += direction\n  } while (next !== document.activeElement)\n\n  // This is a little weird, but let me try and explain: There are a few scenario's\n  // in chrome for example where a focused `<a>` tag does not get the default focus\n  // styles and sometimes they do. This highly depends on whether you started by\n  // clicking or by using your keyboard. When you programmatically add focus `anchor.focus()`\n  // then the active element (document.activeElement) is this anchor, which is expected.\n  // However in that case the default focus styles are not applied *unless* you\n  // also add this tabindex.\n  if (!next.hasAttribute('tabindex')) next.setAttribute('tabindex', '0')\n\n  return FocusResult.Success\n}\n","export function contains(containers: Set<HTMLElement>, element: HTMLElement) {\n  for (let container of containers) {\n    if (container.contains(element)) return true\n  }\n\n  return false\n}\n","import { useEffect } from 'react'\n\nexport function useWindowEvent<TType extends keyof WindowEventMap>(\n  type: TType,\n  listener: (this: Window, ev: WindowEventMap[TType]) => any,\n  options?: boolean | AddEventListenerOptions\n) {\n  useEffect(() => {\n    window.addEventListener(type, listener, options)\n    return () => window.removeEventListener(type, listener, options)\n  }, [type, listener, options])\n}\n","import {\n  useRef,\n  // Types\n  MutableRefObject,\n} from 'react'\n\nimport { Keys } from '../components/keyboard'\nimport { useIsoMorphicEffect } from './use-iso-morphic-effect'\nimport { focusElement, focusIn, Focus, FocusResult } from '../utils/focus-management'\nimport { contains } from '../internal/dom-containers'\nimport { useWindowEvent } from './use-window-event'\n\nexport function useFocusTrap(\n  containers: MutableRefObject<Set<HTMLElement>>,\n  enabled: boolean = true,\n  options: { initialFocus?: MutableRefObject<HTMLElement | null> } = {}\n) {\n  let restoreElement = useRef<HTMLElement | null>(\n    typeof window !== 'undefined' ? (document.activeElement as HTMLElement) : null\n  )\n  let previousActiveElement = useRef<HTMLElement | null>(null)\n  let mounted = useRef(false)\n\n  // Handle initial focus\n  useIsoMorphicEffect(() => {\n    if (!enabled) return\n    if (containers.current.size !== 1) return\n\n    mounted.current = true\n\n    let activeElement = document.activeElement as HTMLElement\n\n    if (options.initialFocus?.current) {\n      if (options.initialFocus?.current === activeElement) {\n        return // Initial focus ref is already the active element\n      }\n    } else if (contains(containers.current, activeElement)) {\n      return // Already focused within Dialog\n    }\n\n    restoreElement.current = activeElement\n\n    // Try to focus the initialFocus ref\n    if (options.initialFocus?.current) {\n      focusElement(options.initialFocus.current)\n    } else {\n      let couldFocus = false\n      for (let container of containers.current) {\n        let result = focusIn(container, Focus.First)\n        if (result === FocusResult.Success) {\n          couldFocus = true\n          break\n        }\n      }\n\n      if (!couldFocus) throw new Error('There are no focusable elements inside the <FocusTrap />')\n    }\n\n    previousActiveElement.current = document.activeElement as HTMLElement\n\n    return () => {\n      mounted.current = false\n      focusElement(restoreElement.current)\n      restoreElement.current = null\n      previousActiveElement.current = null\n    }\n  }, [enabled, containers, mounted, options.initialFocus])\n\n  // Handle Tab & Shift+Tab keyboard events\n  useWindowEvent('keydown', event => {\n    if (!enabled) return\n    if (event.key !== Keys.Tab) return\n    if (!document.activeElement) return\n    if (containers.current.size !== 1) return\n\n    event.preventDefault()\n\n    for (let element of containers.current) {\n      let result = focusIn(\n        element,\n        (event.shiftKey ? Focus.Previous : Focus.Next) | Focus.WrapAround\n      )\n\n      if (result === FocusResult.Success) {\n        previousActiveElement.current = document.activeElement as HTMLElement\n        break\n      }\n    }\n  })\n\n  // Prevent programmatically escaping\n  useWindowEvent(\n    'focus',\n    event => {\n      if (!enabled) return\n      if (containers.current.size !== 1) return\n\n      let previous = previousActiveElement.current\n      if (!previous) return\n      if (!mounted.current) return\n\n      let toElement = event.target as HTMLElement | null\n\n      if (toElement && toElement instanceof HTMLElement) {\n        if (!contains(containers.current, toElement)) {\n          event.preventDefault()\n          event.stopPropagation()\n          focusElement(previous)\n        } else {\n          previousActiveElement.current = toElement\n          focusElement(toElement)\n        }\n      } else {\n        focusElement(previousActiveElement.current)\n      }\n    },\n    true\n  )\n}\n","import { MutableRefObject } from 'react'\nimport { useIsoMorphicEffect } from './use-iso-morphic-effect'\n\nlet interactables = new Set<HTMLElement>()\nlet originals = new Map<HTMLElement, { 'aria-hidden': string | null; inert: boolean }>()\n\nfunction inert(element: HTMLElement) {\n  element.setAttribute('aria-hidden', 'true')\n  // @ts-expect-error `inert` does not exist on HTMLElement (yet!)\n  element.inert = true\n}\n\nfunction restore(element: HTMLElement) {\n  let original = originals.get(element)\n  if (!original) return\n\n  if (original['aria-hidden'] === null) element.removeAttribute('aria-hidden')\n  else element.setAttribute('aria-hidden', original['aria-hidden'])\n  // @ts-expect-error `inert` does not exist on HTMLElement (yet!)\n  element.inert = original.inert\n}\n\nexport function useInertOthers<TElement extends HTMLElement>(\n  container: MutableRefObject<TElement | null>,\n  enabled: boolean = true\n) {\n  useIsoMorphicEffect(() => {\n    if (!enabled) return\n    if (!container.current) return\n\n    let element = container.current\n\n    // Mark myself as an interactable element\n    interactables.add(element)\n\n    // Restore elements that now contain an interactable child\n    for (let original of originals.keys()) {\n      if (original.contains(element)) {\n        restore(original)\n        originals.delete(original)\n      }\n    }\n\n    // Collect direct children of the body\n    document.querySelectorAll('body > *').forEach(child => {\n      if (!(child instanceof HTMLElement)) return // Skip non-HTMLElements\n\n      // Skip the interactables, and the parents of the interactables\n      for (let interactable of interactables) {\n        if (child.contains(interactable)) return\n      }\n\n      // Keep track of the elements\n      if (interactables.size === 1) {\n        originals.set(child, {\n          'aria-hidden': child.getAttribute('aria-hidden'),\n          // @ts-expect-error `inert` does not exist on HTMLElement (yet!)\n          inert: child.inert,\n        })\n\n        // Mutate the element\n        inert(child)\n      }\n    })\n\n    return () => {\n      // Inert is disabled on the current element\n      interactables.delete(element)\n\n      // We still have interactable elements, therefore this one and its parent\n      // will become inert as well.\n      if (interactables.size > 0) {\n        // Collect direct children of the body\n        document.querySelectorAll('body > *').forEach(child => {\n          if (!(child instanceof HTMLElement)) return // Skip non-HTMLElements\n\n          // Skip already inert parents\n          if (originals.has(child)) return\n\n          // Skip the interactables, and the parents of the interactables\n          for (let interactable of interactables) {\n            if (child.contains(interactable)) return\n          }\n\n          originals.set(child, {\n            'aria-hidden': child.getAttribute('aria-hidden'),\n            // @ts-expect-error `inert` does not exist on HTMLElement (yet!)\n            inert: child.inert,\n          })\n\n          // Mutate the element\n          inert(child)\n        })\n      } else {\n        for (let element of originals.keys()) {\n          // Restore\n          restore(element)\n\n          // Cleanup\n          originals.delete(element)\n        }\n      }\n    }\n  }, [enabled])\n}\n","import React, { ReactNode, createContext, useContext, useCallback } from 'react'\nimport { useIsoMorphicEffect } from '../hooks/use-iso-morphic-effect'\n\ntype OnUpdate = (message: StackMessage, element: HTMLElement) => void\n\nlet StackContext = createContext<OnUpdate>(() => {})\nStackContext.displayName = 'StackContext'\n\nexport enum StackMessage {\n  AddElement,\n  RemoveElement,\n}\n\nexport function useStackContext() {\n  return useContext(StackContext)\n}\n\nexport function useElementStack(element: HTMLElement | null) {\n  let notify = useStackContext()\n\n  useIsoMorphicEffect(() => {\n    if (!element) return\n\n    notify(StackMessage.AddElement, element)\n    return () => notify(StackMessage.RemoveElement, element)\n  }, [element])\n}\n\nexport function StackProvider({\n  children,\n  onUpdate,\n}: {\n  children: ReactNode\n  onUpdate?: OnUpdate\n}) {\n  let parentUpdate = useStackContext()\n\n  let notify = useCallback(\n    (...args: Parameters<OnUpdate>) => {\n      // Notify our layer\n      onUpdate?.(...args)\n\n      // Notify the parent\n      parentUpdate(...args)\n    },\n    [parentUpdate, onUpdate]\n  )\n\n  return <StackContext.Provider value={notify}>{children}</StackContext.Provider>\n}\n","import React, {\n  createContext,\n  useContext,\n\n  // Types\n  ReactNode,\n} from 'react'\n\nlet ForcePortalRootContext = createContext(false)\n\nexport function usePortalRoot() {\n  return useContext(ForcePortalRootContext)\n}\n\ninterface ForcePortalRootProps {\n  force: boolean\n  children: ReactNode\n}\n\nexport function ForcePortalRoot(props: ForcePortalRootProps) {\n  return (\n    <ForcePortalRootContext.Provider value={props.force}>\n      {props.children}\n    </ForcePortalRootContext.Provider>\n  )\n}\n","import React, {\n  Fragment,\n  createContext,\n  useContext,\n  useEffect,\n  useState,\n\n  // Types\n  ElementType,\n  MutableRefObject,\n} from 'react'\nimport { createPortal } from 'react-dom'\n\nimport { Props } from '../../types'\nimport { render } from '../../utils/render'\nimport { useIsoMorphicEffect } from '../../hooks/use-iso-morphic-effect'\nimport { useElementStack, StackProvider } from '../../internal/stack-context'\nimport { usePortalRoot } from '../../internal/portal-force-root'\n\nfunction usePortalTarget(): HTMLElement | null {\n  let forceInRoot = usePortalRoot()\n  let groupTarget = useContext(PortalGroupContext)\n  let [target, setTarget] = useState(() => {\n    // Group context is used, but still null\n    if (!forceInRoot && groupTarget !== null) return null\n\n    // No group context is used, let's create a default portal root\n    if (typeof window === 'undefined') return null\n    let existingRoot = document.getElementById('headlessui-portal-root')\n    if (existingRoot) return existingRoot\n\n    let root = document.createElement('div')\n    root.setAttribute('id', 'headlessui-portal-root')\n    return document.body.appendChild(root)\n  })\n\n  useEffect(() => {\n    if (forceInRoot) return\n    if (groupTarget === null) return\n    setTarget(groupTarget.current)\n  }, [groupTarget, setTarget, forceInRoot])\n\n  return target\n}\n\n// ---\n\nlet DEFAULT_PORTAL_TAG = Fragment\ninterface PortalRenderPropArg {}\n\nexport function Portal<TTag extends ElementType = typeof DEFAULT_PORTAL_TAG>(\n  props: Props<TTag, PortalRenderPropArg>\n) {\n  let passthroughProps = props\n  let target = usePortalTarget()\n  let [element] = useState<HTMLDivElement | null>(() =>\n    typeof window === 'undefined' ? null : document.createElement('div')\n  )\n\n  useElementStack(element)\n\n  useIsoMorphicEffect(() => {\n    if (!target) return\n    if (!element) return\n\n    target.appendChild(element)\n\n    return () => {\n      if (!target) return\n      if (!element) return\n\n      target.removeChild(element)\n\n      if (target.childNodes.length <= 0) {\n        target.parentElement?.removeChild(target)\n      }\n    }\n  }, [target, element])\n\n  return (\n    <StackProvider>\n      {!target || !element\n        ? null\n        : createPortal(\n            render({\n              props: passthroughProps,\n              defaultTag: DEFAULT_PORTAL_TAG,\n              name: 'Portal',\n            }),\n            element\n          )}\n    </StackProvider>\n  )\n}\n\n// ---\n\nlet DEFAULT_GROUP_TAG = Fragment\ninterface GroupRenderPropArg {}\n\nlet PortalGroupContext = createContext<MutableRefObject<HTMLElement | null> | null>(null)\n\nfunction Group<TTag extends ElementType = typeof DEFAULT_GROUP_TAG>(\n  props: Props<TTag, GroupRenderPropArg> & {\n    target: MutableRefObject<HTMLElement | null>\n  }\n) {\n  let { target, ...passthroughProps } = props\n\n  return (\n    <PortalGroupContext.Provider value={target}>\n      {render({\n        props: passthroughProps,\n        defaultTag: DEFAULT_GROUP_TAG,\n        name: 'Popover.Group',\n      })}\n    </PortalGroupContext.Provider>\n  )\n}\n\n// ---\n\nPortal.Group = Group\n","import React, {\n  createContext,\n  useCallback,\n  useContext,\n  useMemo,\n  useState,\n\n  // Types\n  ElementType,\n  ReactNode,\n} from 'react'\n\nimport { Props } from '../../types'\nimport { useId } from '../../hooks/use-id'\nimport { render } from '../../utils/render'\nimport { useIsoMorphicEffect } from '../../hooks/use-iso-morphic-effect'\n\n// ---\n\ninterface SharedData {\n  slot?: {}\n  name?: string\n  props?: {}\n}\n\nlet DescriptionContext = createContext<\n  ({ register(value: string): () => void } & SharedData) | null\n>(null)\n\nfunction useDescriptionContext() {\n  let context = useContext(DescriptionContext)\n  if (context === null) {\n    let err = new Error(\n      'You used a <Description /> component, but it is not inside a relevant parent.'\n    )\n    if (Error.captureStackTrace) Error.captureStackTrace(err, useDescriptionContext)\n    throw err\n  }\n  return context\n}\n\ninterface DescriptionProviderProps extends SharedData {\n  children: ReactNode\n}\n\nexport function useDescriptions(): [\n  string | undefined,\n  (props: DescriptionProviderProps) => JSX.Element\n] {\n  let [descriptionIds, setDescriptionIds] = useState<string[]>([])\n\n  return [\n    // The actual id's as string or undefined\n    descriptionIds.length > 0 ? descriptionIds.join(' ') : undefined,\n\n    // The provider component\n    useMemo(() => {\n      return function DescriptionProvider(props: DescriptionProviderProps) {\n        let register = useCallback((value: string) => {\n          setDescriptionIds(existing => [...existing, value])\n\n          return () =>\n            setDescriptionIds(existing => {\n              let clone = existing.slice()\n              let idx = clone.indexOf(value)\n              if (idx !== -1) clone.splice(idx, 1)\n              return clone\n            })\n        }, [])\n\n        let contextBag = useMemo(\n          () => ({ register, slot: props.slot, name: props.name, props: props.props }),\n          [register, props.slot, props.name, props.props]\n        )\n\n        return (\n          <DescriptionContext.Provider value={contextBag}>\n            {props.children}\n          </DescriptionContext.Provider>\n        )\n      }\n    }, [setDescriptionIds]),\n  ]\n}\n\n// ---\n\nlet DEFAULT_DESCRIPTION_TAG = 'p' as const\ninterface DescriptionRenderPropArg {}\ntype DescriptionPropsWeControl = 'id'\n\nexport function Description<TTag extends ElementType = typeof DEFAULT_DESCRIPTION_TAG>(\n  props: Props<TTag, DescriptionRenderPropArg, DescriptionPropsWeControl>\n) {\n  let context = useDescriptionContext()\n  let id = `headlessui-description-${useId()}`\n\n  useIsoMorphicEffect(() => context.register(id), [id, context.register])\n\n  let passThroughProps = props\n  let propsWeControl = { ...context.props, id }\n\n  return render({\n    props: { ...passThroughProps, ...propsWeControl },\n    slot: context.slot || {},\n    defaultTag: DEFAULT_DESCRIPTION_TAG,\n    name: context.name || 'Description',\n  })\n}\n","// WAI-ARIA: https://www.w3.org/TR/wai-aria-practices-1.2/#dialog_modal\nimport React, {\n  createContext,\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useReducer,\n  useRef,\n\n  // Types\n  ContextType,\n  ElementType,\n  MouseEvent as ReactMouseEvent,\n  KeyboardEvent as ReactKeyboardEvent,\n  MutableRefObject,\n  Ref,\n} from 'react'\n\nimport { Props } from '../../types'\nimport { match } from '../../utils/match'\nimport { forwardRefWithAs, render, Features, PropsForFeatures } from '../../utils/render'\nimport { useSyncRefs } from '../../hooks/use-sync-refs'\nimport { Keys } from '../keyboard'\nimport { isDisabledReactIssue7711 } from '../../utils/bugs'\nimport { useId } from '../../hooks/use-id'\nimport { useFocusTrap } from '../../hooks/use-focus-trap'\nimport { useInertOthers } from '../../hooks/use-inert-others'\nimport { Portal } from '../../components/portal/portal'\nimport { StackProvider, StackMessage } from '../../internal/stack-context'\nimport { ForcePortalRoot } from '../../internal/portal-force-root'\nimport { contains } from '../../internal/dom-containers'\nimport { Description, useDescriptions } from '../description/description'\nimport { useWindowEvent } from '../../hooks/use-window-event'\n\nenum DialogStates {\n  Open,\n  Closed,\n}\n\ninterface StateDefinition {\n  titleId: string | null\n}\n\nenum ActionTypes {\n  SetTitleId,\n}\n\ntype Actions = { type: ActionTypes.SetTitleId; id: string | null }\n\nlet reducers: {\n  [P in ActionTypes]: (\n    state: StateDefinition,\n    action: Extract<Actions, { type: P }>\n  ) => StateDefinition\n} = {\n  [ActionTypes.SetTitleId](state, action) {\n    if (state.titleId === action.id) return state\n    return { ...state, titleId: action.id }\n  },\n}\n\nlet DialogContext = createContext<\n  | [\n      {\n        dialogState: DialogStates\n        close(): void\n        setTitleId(id: string | null): void\n      },\n      StateDefinition\n    ]\n  | null\n>(null)\nDialogContext.displayName = 'DialogContext'\n\nfunction useDialogContext(component: string) {\n  let context = useContext(DialogContext)\n  if (context === null) {\n    let err = new Error(`<${component} /> is missing a parent <${Dialog.displayName} /> component.`)\n    if (Error.captureStackTrace) Error.captureStackTrace(err, useDialogContext)\n    throw err\n  }\n  return context\n}\n\nfunction stateReducer(state: StateDefinition, action: Actions) {\n  return match(action.type, reducers, state, action)\n}\n\n// ---\n\nlet DEFAULT_DIALOG_TAG = 'div' as const\ninterface DialogRenderPropArg {\n  open: boolean\n}\ntype DialogPropsWeControl =\n  | 'id'\n  | 'role'\n  | 'aria-modal'\n  | 'aria-describedby'\n  | 'aria-labelledby'\n  | 'onClick'\n\nlet DialogRenderFeatures = Features.RenderStrategy | Features.Static\n\nlet DialogRoot = forwardRefWithAs(function Dialog<\n  TTag extends ElementType = typeof DEFAULT_DIALOG_TAG\n>(\n  props: Props<TTag, DialogRenderPropArg, DialogPropsWeControl> &\n    PropsForFeatures<typeof DialogRenderFeatures> & {\n      open: boolean\n      onClose(value: boolean): void\n      initialFocus?: MutableRefObject<HTMLElement | null>\n    },\n  ref: Ref<HTMLDivElement>\n) {\n  let { open, onClose, initialFocus, ...rest } = props\n\n  let containers = useRef<Set<HTMLElement>>(new Set())\n  let internalDialogRef = useRef<HTMLDivElement | null>(null)\n  let dialogRef = useSyncRefs(internalDialogRef, ref)\n\n  // Validations\n  let hasOpen = props.hasOwnProperty('open')\n  let hasOnClose = props.hasOwnProperty('onClose')\n  if (!hasOpen && !hasOnClose) {\n    throw new Error(\n      `You have to provide an \\`open\\` and an \\`onClose\\` prop to the \\`Dialog\\` component.`\n    )\n  }\n\n  if (!hasOpen) {\n    throw new Error(\n      `You provided an \\`onClose\\` prop to the \\`Dialog\\`, but forgot an \\`open\\` prop.`\n    )\n  }\n\n  if (!hasOnClose) {\n    throw new Error(\n      `You provided an \\`open\\` prop to the \\`Dialog\\`, but forgot an \\`onClose\\` prop.`\n    )\n  }\n\n  if (typeof open !== 'boolean') {\n    throw new Error(\n      `You provided an \\`open\\` prop to the \\`Dialog\\`, but the value is not a boolean. Received: ${open}`\n    )\n  }\n\n  if (typeof onClose !== 'function') {\n    throw new Error(\n      `You provided an \\`onClose\\` prop to the \\`Dialog\\`, but the value is not a function. Received: ${onClose}`\n    )\n  }\n\n  let dialogState = open ? DialogStates.Open : DialogStates.Closed\n\n  let [state, dispatch] = useReducer(stateReducer, {\n    titleId: null,\n    descriptionId: null,\n  } as StateDefinition)\n\n  let close = useCallback(() => onClose(false), [onClose])\n\n  let setTitleId = useCallback(\n    (id: string | null) => dispatch({ type: ActionTypes.SetTitleId, id }),\n    [dispatch]\n  )\n\n  // Handle outside click\n  useWindowEvent('mousedown', event => {\n    let target = event.target as HTMLElement\n\n    if (dialogState !== DialogStates.Open) return\n    if (containers.current.size !== 1) return\n    if (contains(containers.current, target)) return\n\n    close()\n  })\n\n  // Scroll lock\n  useEffect(() => {\n    if (dialogState !== DialogStates.Open) return\n\n    let overflow = document.documentElement.style.overflow\n    let paddingRight = document.documentElement.style.paddingRight\n\n    let scrollbarWidth = window.innerWidth - document.documentElement.clientWidth\n\n    document.documentElement.style.overflow = 'hidden'\n    document.documentElement.style.paddingRight = `${scrollbarWidth}px`\n\n    return () => {\n      document.documentElement.style.overflow = overflow\n      document.documentElement.style.paddingRight = paddingRight\n    }\n  }, [dialogState])\n\n  // Trigger close when the FocusTrap gets hidden\n  useEffect(() => {\n    if (dialogState !== DialogStates.Open) return\n    if (!internalDialogRef.current) return\n\n    let observer = new IntersectionObserver(entries => {\n      for (let entry of entries) {\n        if (\n          entry.boundingClientRect.x === 0 &&\n          entry.boundingClientRect.y === 0 &&\n          entry.boundingClientRect.width === 0 &&\n          entry.boundingClientRect.height === 0\n        ) {\n          close()\n        }\n      }\n    })\n\n    observer.observe(internalDialogRef.current)\n\n    return () => observer.disconnect()\n  }, [dialogState, internalDialogRef, close])\n\n  let enabled = dialogState === DialogStates.Open\n\n  useFocusTrap(containers, enabled, { initialFocus })\n  useInertOthers(internalDialogRef, enabled)\n  let [describedby, DescriptionProvider] = useDescriptions()\n\n  let id = `headlessui-dialog-${useId()}`\n\n  let contextBag = useMemo<ContextType<typeof DialogContext>>(\n    () => [{ dialogState, close, setTitleId }, state],\n    [dialogState, state, close, setTitleId]\n  )\n\n  let slot = useMemo<DialogRenderPropArg>(() => ({ open: dialogState === DialogStates.Open }), [\n    dialogState,\n  ])\n\n  let propsWeControl = {\n    ref: dialogRef,\n    id,\n    role: 'dialog',\n    'aria-modal': dialogState === DialogStates.Open ? true : undefined,\n    'aria-labelledby': state.titleId,\n    'aria-describedby': describedby,\n    onClick(event: ReactMouseEvent) {\n      event.stopPropagation()\n    },\n\n    // Handle `Escape` to close\n    onKeyDown(event: ReactKeyboardEvent) {\n      if (event.key !== Keys.Escape) return\n      if (dialogState !== DialogStates.Open) return\n      if (containers.current.size > 1) return // 1 is myself, otherwise other elements in the Stack\n      event.preventDefault()\n      event.stopPropagation()\n      close()\n    },\n  }\n  let passthroughProps = rest\n\n  return (\n    <StackProvider\n      onUpdate={(message, element) => {\n        return match(message, {\n          [StackMessage.AddElement]() {\n            containers.current.add(element)\n          },\n          [StackMessage.RemoveElement]() {\n            containers.current.delete(element)\n          },\n        })\n      }}\n    >\n      <ForcePortalRoot force={true}>\n        <Portal>\n          <DialogContext.Provider value={contextBag}>\n            <Portal.Group target={internalDialogRef}>\n              <ForcePortalRoot force={false}>\n                <DescriptionProvider slot={slot} name=\"Dialog.Description\">\n                  {render({\n                    props: { ...passthroughProps, ...propsWeControl },\n                    slot,\n                    defaultTag: DEFAULT_DIALOG_TAG,\n                    features: DialogRenderFeatures,\n                    visible: dialogState === DialogStates.Open,\n                    name: 'Dialog',\n                  })}\n                </DescriptionProvider>\n              </ForcePortalRoot>\n            </Portal.Group>\n          </DialogContext.Provider>\n        </Portal>\n      </ForcePortalRoot>\n    </StackProvider>\n  )\n})\n\n// ---\n\nlet DEFAULT_OVERLAY_TAG = 'div' as const\ninterface OverlayRenderPropArg {\n  open: boolean\n}\ntype OverlayPropsWeControl = 'id' | 'aria-hidden' | 'onClick'\n\nlet Overlay = forwardRefWithAs(function Overlay<\n  TTag extends ElementType = typeof DEFAULT_OVERLAY_TAG\n>(props: Props<TTag, OverlayRenderPropArg, OverlayPropsWeControl>, ref: Ref<HTMLDivElement>) {\n  let [{ dialogState, close }] = useDialogContext([Dialog.displayName, Overlay.name].join('.'))\n  let overlayRef = useSyncRefs(ref)\n\n  let id = `headlessui-dialog-overlay-${useId()}`\n\n  let handleClick = useCallback(\n    (event: ReactMouseEvent) => {\n      if (isDisabledReactIssue7711(event.currentTarget)) return event.preventDefault()\n      event.preventDefault()\n      event.stopPropagation()\n      close()\n    },\n    [close]\n  )\n\n  let slot = useMemo<OverlayRenderPropArg>(() => ({ open: dialogState === DialogStates.Open }), [\n    dialogState,\n  ])\n  let propsWeControl = {\n    ref: overlayRef,\n    id,\n    'aria-hidden': true,\n    onClick: handleClick,\n  }\n  let passthroughProps = props\n\n  return render({\n    props: { ...passthroughProps, ...propsWeControl },\n    slot,\n    defaultTag: DEFAULT_OVERLAY_TAG,\n    name: 'Dialog.Overlay',\n  })\n})\n\n// ---\n\nlet DEFAULT_TITLE_TAG = 'h2' as const\ninterface TitleRenderPropArg {\n  open: boolean\n}\ntype TitlePropsWeControl = 'id'\n\nfunction Title<TTag extends ElementType = typeof DEFAULT_TITLE_TAG>(\n  props: Props<TTag, TitleRenderPropArg, TitlePropsWeControl>\n) {\n  let [{ dialogState, setTitleId }] = useDialogContext([Dialog.displayName, Title.name].join('.'))\n\n  let id = `headlessui-dialog-title-${useId()}`\n\n  useEffect(() => {\n    setTitleId(id)\n    return () => setTitleId(null)\n  }, [id, setTitleId])\n\n  let slot = useMemo<TitleRenderPropArg>(() => ({ open: dialogState === DialogStates.Open }), [\n    dialogState,\n  ])\n  let propsWeControl = { id }\n  let passthroughProps = props\n\n  return render({\n    props: { ...passthroughProps, ...propsWeControl },\n    slot,\n    defaultTag: DEFAULT_TITLE_TAG,\n    name: 'Dialog.Title',\n  })\n}\n\n// ---\n\nexport let Dialog = Object.assign(DialogRoot, { Overlay, Title, Description })\n","// WAI-ARIA: https://www.w3.org/TR/wai-aria-practices-1.2/#disclosure\nimport React, {\n  Fragment,\n  createContext,\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useReducer,\n\n  // Types\n  Dispatch,\n  ElementType,\n  KeyboardEvent as ReactKeyboardEvent,\n  MouseEvent as ReactMouseEvent,\n  Ref,\n} from 'react'\n\nimport { Props } from '../../types'\nimport { match } from '../../utils/match'\nimport { forwardRefWithAs, render, Features, PropsForFeatures } from '../../utils/render'\nimport { useSyncRefs } from '../../hooks/use-sync-refs'\nimport { useId } from '../../hooks/use-id'\nimport { Keys } from '../keyboard'\nimport { isDisabledReactIssue7711 } from '../../utils/bugs'\n\nenum DisclosureStates {\n  Open,\n  Closed,\n}\n\ninterface StateDefinition {\n  disclosureState: DisclosureStates\n\n  linkedPanel: boolean\n\n  buttonId: string\n  panelId: string\n}\n\nenum ActionTypes {\n  ToggleDisclosure,\n\n  SetButtonId,\n  SetPanelId,\n\n  LinkPanel,\n  UnlinkPanel,\n}\n\ntype Actions =\n  | { type: ActionTypes.ToggleDisclosure }\n  | { type: ActionTypes.SetButtonId; buttonId: string }\n  | { type: ActionTypes.SetPanelId; panelId: string }\n  | { type: ActionTypes.LinkPanel }\n  | { type: ActionTypes.UnlinkPanel }\n\nlet reducers: {\n  [P in ActionTypes]: (\n    state: StateDefinition,\n    action: Extract<Actions, { type: P }>\n  ) => StateDefinition\n} = {\n  [ActionTypes.ToggleDisclosure]: state => ({\n    ...state,\n    disclosureState: match(state.disclosureState, {\n      [DisclosureStates.Open]: DisclosureStates.Closed,\n      [DisclosureStates.Closed]: DisclosureStates.Open,\n    }),\n  }),\n  [ActionTypes.LinkPanel](state) {\n    if (state.linkedPanel === true) return state\n    return { ...state, linkedPanel: true }\n  },\n  [ActionTypes.UnlinkPanel](state) {\n    if (state.linkedPanel === false) return state\n    return { ...state, linkedPanel: false }\n  },\n  [ActionTypes.SetButtonId](state, action) {\n    if (state.buttonId === action.buttonId) return state\n    return { ...state, buttonId: action.buttonId }\n  },\n  [ActionTypes.SetPanelId](state, action) {\n    if (state.panelId === action.panelId) return state\n    return { ...state, panelId: action.panelId }\n  },\n}\n\nlet DisclosureContext = createContext<[StateDefinition, Dispatch<Actions>] | null>(null)\nDisclosureContext.displayName = 'DisclosureContext'\n\nfunction useDisclosureContext(component: string) {\n  let context = useContext(DisclosureContext)\n  if (context === null) {\n    let err = new Error(`<${component} /> is missing a parent <${Disclosure.name} /> component.`)\n    if (Error.captureStackTrace) Error.captureStackTrace(err, useDisclosureContext)\n    throw err\n  }\n  return context\n}\n\nfunction stateReducer(state: StateDefinition, action: Actions) {\n  return match(action.type, reducers, state, action)\n}\n\n// ---\n\nlet DEFAULT_DISCLOSURE_TAG = Fragment\ninterface DisclosureRenderPropArg {\n  open: boolean\n}\n\nexport function Disclosure<TTag extends ElementType = typeof DEFAULT_DISCLOSURE_TAG>(\n  props: Props<TTag, DisclosureRenderPropArg> & {\n    defaultOpen?: boolean\n  }\n) {\n  let { defaultOpen = false, ...passthroughProps } = props\n  let buttonId = `headlessui-disclosure-button-${useId()}`\n  let panelId = `headlessui-disclosure-panel-${useId()}`\n\n  let reducerBag = useReducer(stateReducer, {\n    disclosureState: defaultOpen ? DisclosureStates.Open : DisclosureStates.Closed,\n    linkedPanel: false,\n    buttonId,\n    panelId,\n  } as StateDefinition)\n  let [{ disclosureState }, dispatch] = reducerBag\n\n  useEffect(() => dispatch({ type: ActionTypes.SetButtonId, buttonId }), [buttonId, dispatch])\n  useEffect(() => dispatch({ type: ActionTypes.SetPanelId, panelId }), [panelId, dispatch])\n\n  let slot = useMemo<DisclosureRenderPropArg>(\n    () => ({ open: disclosureState === DisclosureStates.Open }),\n    [disclosureState]\n  )\n\n  return (\n    <DisclosureContext.Provider value={reducerBag}>\n      {render({\n        props: passthroughProps,\n        slot,\n        defaultTag: DEFAULT_DISCLOSURE_TAG,\n        name: 'Disclosure',\n      })}\n    </DisclosureContext.Provider>\n  )\n}\n\n// ---\n\nlet DEFAULT_BUTTON_TAG = 'button' as const\ninterface ButtonRenderPropArg {\n  open: boolean\n}\ntype ButtonPropsWeControl =\n  | 'id'\n  | 'type'\n  | 'aria-expanded'\n  | 'aria-controls'\n  | 'onKeyDown'\n  | 'onClick'\n\nlet Button = forwardRefWithAs(function Button<TTag extends ElementType = typeof DEFAULT_BUTTON_TAG>(\n  props: Props<TTag, ButtonRenderPropArg, ButtonPropsWeControl>,\n  ref: Ref<HTMLButtonElement>\n) {\n  let [state, dispatch] = useDisclosureContext([Disclosure.name, Button.name].join('.'))\n  let buttonRef = useSyncRefs(ref)\n\n  let handleKeyDown = useCallback(\n    (event: ReactKeyboardEvent<HTMLButtonElement>) => {\n      switch (event.key) {\n        case Keys.Space:\n        case Keys.Enter:\n          event.preventDefault()\n          event.stopPropagation()\n          dispatch({ type: ActionTypes.ToggleDisclosure })\n          break\n      }\n    },\n    [dispatch]\n  )\n\n  let handleKeyUp = useCallback((event: ReactKeyboardEvent<HTMLButtonElement>) => {\n    switch (event.key) {\n      case Keys.Space:\n        // Required for firefox, event.preventDefault() in handleKeyDown for\n        // the Space key doesn't cancel the handleKeyUp, which in turn\n        // triggers a *click*.\n        event.preventDefault()\n        break\n    }\n  }, [])\n\n  let handleClick = useCallback(\n    (event: ReactMouseEvent) => {\n      if (isDisabledReactIssue7711(event.currentTarget)) return\n      if (props.disabled) return\n      dispatch({ type: ActionTypes.ToggleDisclosure })\n    },\n    [dispatch, props.disabled]\n  )\n\n  let slot = useMemo<ButtonRenderPropArg>(\n    () => ({ open: state.disclosureState === DisclosureStates.Open }),\n    [state]\n  )\n\n  let passthroughProps = props\n  let propsWeControl = {\n    ref: buttonRef,\n    id: state.buttonId,\n    type: 'button',\n    'aria-expanded': state.disclosureState === DisclosureStates.Open ? true : undefined,\n    'aria-controls': state.linkedPanel ? state.panelId : undefined,\n    onKeyDown: handleKeyDown,\n    onKeyUp: handleKeyUp,\n    onClick: handleClick,\n  }\n\n  return render({\n    props: { ...passthroughProps, ...propsWeControl },\n    slot,\n    defaultTag: DEFAULT_BUTTON_TAG,\n    name: 'Disclosure.Button',\n  })\n})\n\n// ---\n\nlet DEFAULT_PANEL_TAG = 'div' as const\ninterface PanelRenderPropArg {\n  open: boolean\n}\ntype PanelPropsWeControl = 'id'\n\nlet PanelRenderFeatures = Features.RenderStrategy | Features.Static\n\nlet Panel = forwardRefWithAs(function Panel<TTag extends ElementType = typeof DEFAULT_PANEL_TAG>(\n  props: Props<TTag, PanelRenderPropArg, PanelPropsWeControl> &\n    PropsForFeatures<typeof PanelRenderFeatures>,\n  ref: Ref<HTMLDivElement>\n) {\n  let [state, dispatch] = useDisclosureContext([Disclosure.name, Panel.name].join('.'))\n  let panelRef = useSyncRefs(ref, () => {\n    if (state.linkedPanel) return\n    dispatch({ type: ActionTypes.LinkPanel })\n  })\n\n  // Unlink on \"unmount\" myself\n  useEffect(() => () => dispatch({ type: ActionTypes.UnlinkPanel }), [dispatch])\n\n  // Unlink on \"unmount\" children\n  useEffect(() => {\n    if (state.disclosureState === DisclosureStates.Closed && (props.unmount ?? true)) {\n      dispatch({ type: ActionTypes.UnlinkPanel })\n    }\n  }, [state.disclosureState, props.unmount, dispatch])\n\n  let slot = useMemo<PanelRenderPropArg>(\n    () => ({ open: state.disclosureState === DisclosureStates.Open }),\n    [state]\n  )\n  let propsWeControl = {\n    ref: panelRef,\n    id: state.panelId,\n  }\n  let passthroughProps = props\n\n  return render({\n    props: { ...passthroughProps, ...propsWeControl },\n    slot,\n    defaultTag: DEFAULT_PANEL_TAG,\n    features: PanelRenderFeatures,\n    visible: state.disclosureState === DisclosureStates.Open,\n    name: 'Disclosure.Panel',\n  })\n})\n\n// ---\n\nDisclosure.Button = Button\nDisclosure.Panel = Panel\n","import {\n  useRef,\n\n  // Types\n  ElementType,\n  MutableRefObject,\n} from 'react'\n\nimport { Props } from '../../types'\nimport { render } from '../../utils/render'\nimport { useFocusTrap } from '../../hooks/use-focus-trap'\n\nlet DEFAULT_FOCUS_TRAP_TAG = 'div' as const\n\nexport function FocusTrap<TTag extends ElementType = typeof DEFAULT_FOCUS_TRAP_TAG>(\n  props: Props<TTag> & { initialFocus?: MutableRefObject<HTMLElement | null> }\n) {\n  let containers = useRef<Set<HTMLElement>>(new Set())\n  let { initialFocus, ...passthroughProps } = props\n\n  useFocusTrap(containers, true, { initialFocus })\n\n  let propsWeControl = {\n    ref(element: HTMLElement | null) {\n      if (!element) return\n      containers.current.add(element)\n    },\n  }\n\n  return render({\n    props: { ...passthroughProps, ...propsWeControl },\n    defaultTag: DEFAULT_FOCUS_TRAP_TAG,\n    name: 'FocusTrap',\n  })\n}\n","export function disposables() {\n  let disposables: Function[] = []\n\n  let api = {\n    requestAnimationFrame(...args: Parameters<typeof requestAnimationFrame>) {\n      let raf = requestAnimationFrame(...args)\n      api.add(() => cancelAnimationFrame(raf))\n    },\n\n    nextFrame(...args: Parameters<typeof requestAnimationFrame>) {\n      api.requestAnimationFrame(() => {\n        api.requestAnimationFrame(...args)\n      })\n    },\n\n    setTimeout(...args: Parameters<typeof setTimeout>) {\n      let timer = setTimeout(...args)\n      api.add(() => clearTimeout(timer))\n    },\n\n    add(cb: () => void) {\n      disposables.push(cb)\n    },\n\n    dispose() {\n      for (let dispose of disposables.splice(0)) {\n        dispose()\n      }\n    },\n  }\n\n  return api\n}\n","import { useState, useEffect } from 'react'\n\nimport { disposables } from '../utils/disposables'\n\nexport function useDisposables() {\n  // Using useState instead of useRef so that we can use the initializer function.\n  let [d] = useState(disposables)\n  useEffect(() => () => d.dispose(), [d])\n  return d\n}\n","import { useState, useRef } from 'react'\nimport { useIsoMorphicEffect } from './use-iso-morphic-effect'\n\nexport function useComputed<T>(cb: () => T, dependencies: React.DependencyList) {\n  let [value, setValue] = useState(cb)\n  let cbRef = useRef(cb)\n  useIsoMorphicEffect(() => {\n    cbRef.current = cb\n  }, [cb])\n  useIsoMorphicEffect(() => setValue(cbRef.current), [cbRef, setValue, ...dependencies])\n  return value\n}\n","function assertNever(x: never): never {\n  throw new Error('Unexpected object: ' + x)\n}\n\nexport enum Focus {\n  /** Focus the first non-disabled item. */\n  First,\n\n  /** Focus the previous non-disabled item. */\n  Previous,\n\n  /** Focus the next non-disabled item. */\n  Next,\n\n  /** Focus the last non-disabled item. */\n  Last,\n\n  /** Focus a specific item based on the `id` of the item. */\n  Specific,\n\n  /** Focus no items at all. */\n  Nothing,\n}\n\nexport function calculateActiveIndex<TItem>(\n  action: { focus: Focus.Specific; id: string } | { focus: Exclude<Focus, Focus.Specific> },\n  resolvers: {\n    resolveItems(): TItem[]\n    resolveActiveIndex(): number | null\n    resolveId(item: TItem): string\n    resolveDisabled(item: TItem): boolean\n  }\n) {\n  let items = resolvers.resolveItems()\n  if (items.length <= 0) return null\n\n  let currentActiveIndex = resolvers.resolveActiveIndex()\n  let activeIndex = currentActiveIndex ?? -1\n\n  let nextActiveIndex = (() => {\n    switch (action.focus) {\n      case Focus.First:\n        return items.findIndex(item => !resolvers.resolveDisabled(item))\n\n      case Focus.Previous: {\n        let idx = items\n          .slice()\n          .reverse()\n          .findIndex((item, idx, all) => {\n            if (activeIndex !== -1 && all.length - idx - 1 >= activeIndex) return false\n            return !resolvers.resolveDisabled(item)\n          })\n        if (idx === -1) return idx\n        return items.length - 1 - idx\n      }\n\n      case Focus.Next:\n        return items.findIndex((item, idx) => {\n          if (idx <= activeIndex) return false\n          return !resolvers.resolveDisabled(item)\n        })\n\n      case Focus.Last: {\n        let idx = items\n          .slice()\n          .reverse()\n          .findIndex(item => !resolvers.resolveDisabled(item))\n        if (idx === -1) return idx\n        return items.length - 1 - idx\n      }\n\n      case Focus.Specific:\n        return items.findIndex(item => resolvers.resolveId(item) === action.id)\n\n      case Focus.Nothing:\n        return null\n\n      default:\n        assertNever(action)\n    }\n  })()\n\n  return nextActiveIndex === -1 ? currentActiveIndex : nextActiveIndex\n}\n","import React, {\n  Fragment,\n  createContext,\n  createRef,\n  useCallback,\n  useContext,\n  useMemo,\n  useReducer,\n  useRef,\n\n  // Types\n  Dispatch,\n  ElementType,\n  KeyboardEvent as ReactKeyboardEvent,\n  MouseEvent as ReactMouseEvent,\n  MutableRefObject,\n  Ref,\n} from 'react'\n\nimport { useDisposables } from '../../hooks/use-disposables'\nimport { useId } from '../../hooks/use-id'\nimport { useIsoMorphicEffect } from '../../hooks/use-iso-morphic-effect'\nimport { useComputed } from '../../hooks/use-computed'\nimport { useSyncRefs } from '../../hooks/use-sync-refs'\nimport { Props } from '../../types'\nimport { Features, forwardRefWithAs, PropsForFeatures, render } from '../../utils/render'\nimport { match } from '../../utils/match'\nimport { disposables } from '../../utils/disposables'\nimport { Keys } from '../keyboard'\nimport { Focus, calculateActiveIndex } from '../../utils/calculate-active-index'\nimport { isDisabledReactIssue7711 } from '../../utils/bugs'\nimport { isFocusableElement, FocusableMode } from '../../utils/focus-management'\nimport { useWindowEvent } from '../../hooks/use-window-event'\n\nenum ListboxStates {\n  Open,\n  Closed,\n}\n\ntype ListboxOptionDataRef = MutableRefObject<{\n  textValue?: string\n  disabled: boolean\n  value: unknown\n}>\n\ninterface StateDefinition {\n  listboxState: ListboxStates\n  propsRef: MutableRefObject<{ value: unknown; onChange(value: unknown): void }>\n  labelRef: MutableRefObject<HTMLLabelElement | null>\n  buttonRef: MutableRefObject<HTMLButtonElement | null>\n  optionsRef: MutableRefObject<HTMLUListElement | null>\n  disabled: boolean\n  options: { id: string; dataRef: ListboxOptionDataRef }[]\n  searchQuery: string\n  activeOptionIndex: number | null\n}\n\nenum ActionTypes {\n  OpenListbox,\n  CloseListbox,\n\n  SetDisabled,\n\n  GoToOption,\n  Search,\n  ClearSearch,\n\n  RegisterOption,\n  UnregisterOption,\n}\n\ntype Actions =\n  | { type: ActionTypes.CloseListbox }\n  | { type: ActionTypes.OpenListbox }\n  | { type: ActionTypes.SetDisabled; disabled: boolean }\n  | { type: ActionTypes.GoToOption; focus: Focus.Specific; id: string }\n  | { type: ActionTypes.GoToOption; focus: Exclude<Focus, Focus.Specific> }\n  | { type: ActionTypes.Search; value: string }\n  | { type: ActionTypes.ClearSearch }\n  | { type: ActionTypes.RegisterOption; id: string; dataRef: ListboxOptionDataRef }\n  | { type: ActionTypes.UnregisterOption; id: string }\n\nlet reducers: {\n  [P in ActionTypes]: (\n    state: StateDefinition,\n    action: Extract<Actions, { type: P }>\n  ) => StateDefinition\n} = {\n  [ActionTypes.CloseListbox](state) {\n    if (state.disabled) return state\n    if (state.listboxState === ListboxStates.Closed) return state\n    return { ...state, activeOptionIndex: null, listboxState: ListboxStates.Closed }\n  },\n  [ActionTypes.OpenListbox](state) {\n    if (state.disabled) return state\n    if (state.listboxState === ListboxStates.Open) return state\n    return { ...state, listboxState: ListboxStates.Open }\n  },\n  [ActionTypes.SetDisabled](state, action) {\n    if (state.disabled === action.disabled) return state\n    return { ...state, disabled: action.disabled }\n  },\n  [ActionTypes.GoToOption](state, action) {\n    if (state.disabled) return state\n    if (state.listboxState === ListboxStates.Closed) return state\n\n    let activeOptionIndex = calculateActiveIndex(action, {\n      resolveItems: () => state.options,\n      resolveActiveIndex: () => state.activeOptionIndex,\n      resolveId: item => item.id,\n      resolveDisabled: item => item.dataRef.current.disabled,\n    })\n\n    if (state.searchQuery === '' && state.activeOptionIndex === activeOptionIndex) return state\n    return { ...state, searchQuery: '', activeOptionIndex }\n  },\n  [ActionTypes.Search]: (state, action) => {\n    if (state.disabled) return state\n    if (state.listboxState === ListboxStates.Closed) return state\n\n    let searchQuery = state.searchQuery + action.value.toLowerCase()\n    let match = state.options.findIndex(\n      option =>\n        !option.dataRef.current.disabled &&\n        option.dataRef.current.textValue?.startsWith(searchQuery)\n    )\n\n    if (match === -1 || match === state.activeOptionIndex) return { ...state, searchQuery }\n    return { ...state, searchQuery, activeOptionIndex: match }\n  },\n  [ActionTypes.ClearSearch](state) {\n    if (state.disabled) return state\n    if (state.listboxState === ListboxStates.Closed) return state\n    if (state.searchQuery === '') return state\n    return { ...state, searchQuery: '' }\n  },\n  [ActionTypes.RegisterOption]: (state, action) => ({\n    ...state,\n    options: [...state.options, { id: action.id, dataRef: action.dataRef }],\n  }),\n  [ActionTypes.UnregisterOption]: (state, action) => {\n    let nextOptions = state.options.slice()\n    let currentActiveOption =\n      state.activeOptionIndex !== null ? nextOptions[state.activeOptionIndex] : null\n\n    let idx = nextOptions.findIndex(a => a.id === action.id)\n\n    if (idx !== -1) nextOptions.splice(idx, 1)\n\n    return {\n      ...state,\n      options: nextOptions,\n      activeOptionIndex: (() => {\n        if (idx === state.activeOptionIndex) return null\n        if (currentActiveOption === null) return null\n\n        // If we removed the option before the actual active index, then it would be out of sync. To\n        // fix this, we will find the correct (new) index position.\n        return nextOptions.indexOf(currentActiveOption)\n      })(),\n    }\n  },\n}\n\nlet ListboxContext = createContext<[StateDefinition, Dispatch<Actions>] | null>(null)\nListboxContext.displayName = 'ListboxContext'\n\nfunction useListboxContext(component: string) {\n  let context = useContext(ListboxContext)\n  if (context === null) {\n    let err = new Error(`<${component} /> is missing a parent <${Listbox.name} /> component.`)\n    if (Error.captureStackTrace) Error.captureStackTrace(err, useListboxContext)\n    throw err\n  }\n  return context\n}\n\nfunction stateReducer(state: StateDefinition, action: Actions) {\n  return match(action.type, reducers, state, action)\n}\n\n// ---\n\nlet DEFAULT_LISTBOX_TAG = Fragment\ninterface ListboxRenderPropArg {\n  open: boolean\n  disabled: boolean\n}\n\nexport function Listbox<TTag extends ElementType = typeof DEFAULT_LISTBOX_TAG, TType = string>(\n  props: Props<TTag, ListboxRenderPropArg, 'value' | 'onChange'> & {\n    value: TType\n    onChange(value: TType): void\n    disabled?: boolean\n  }\n) {\n  let { value, onChange, disabled = false, ...passThroughProps } = props\n  let reducerBag = useReducer(stateReducer, {\n    listboxState: ListboxStates.Closed,\n    propsRef: { current: { value, onChange } },\n    labelRef: createRef(),\n    buttonRef: createRef(),\n    optionsRef: createRef(),\n    disabled,\n    options: [],\n    searchQuery: '',\n    activeOptionIndex: null,\n  } as StateDefinition)\n  let [{ listboxState, propsRef, optionsRef, buttonRef }, dispatch] = reducerBag\n\n  useIsoMorphicEffect(() => {\n    propsRef.current.value = value\n  }, [value, propsRef])\n  useIsoMorphicEffect(() => {\n    propsRef.current.onChange = onChange\n  }, [onChange, propsRef])\n  useIsoMorphicEffect(() => dispatch({ type: ActionTypes.SetDisabled, disabled }), [disabled])\n\n  // Handle outside click\n  useWindowEvent('mousedown', event => {\n    let target = event.target as HTMLElement\n\n    if (listboxState !== ListboxStates.Open) return\n\n    if (buttonRef.current?.contains(target)) return\n    if (optionsRef.current?.contains(target)) return\n\n    dispatch({ type: ActionTypes.CloseListbox })\n\n    if (!isFocusableElement(target, FocusableMode.Loose)) {\n      event.preventDefault()\n      buttonRef.current?.focus()\n    }\n  })\n\n  let slot = useMemo<ListboxRenderPropArg>(\n    () => ({ open: listboxState === ListboxStates.Open, disabled }),\n    [listboxState, disabled]\n  )\n\n  return (\n    <ListboxContext.Provider value={reducerBag}>\n      {render({\n        props: passThroughProps,\n        slot,\n        defaultTag: DEFAULT_LISTBOX_TAG,\n        name: 'Listbox',\n      })}\n    </ListboxContext.Provider>\n  )\n}\n\n// ---\n\nlet DEFAULT_BUTTON_TAG = 'button' as const\ninterface ButtonRenderPropArg {\n  open: boolean\n  disabled: boolean\n}\ntype ButtonPropsWeControl =\n  | 'id'\n  | 'type'\n  | 'aria-haspopup'\n  | 'aria-controls'\n  | 'aria-expanded'\n  | 'aria-labelledby'\n  | 'disabled'\n  | 'onKeyDown'\n  | 'onClick'\n\nlet Button = forwardRefWithAs(function Button<TTag extends ElementType = typeof DEFAULT_BUTTON_TAG>(\n  props: Props<TTag, ButtonRenderPropArg, ButtonPropsWeControl>,\n  ref: Ref<HTMLButtonElement>\n) {\n  let [state, dispatch] = useListboxContext([Listbox.name, Button.name].join('.'))\n  let buttonRef = useSyncRefs(state.buttonRef, ref)\n\n  let id = `headlessui-listbox-button-${useId()}`\n  let d = useDisposables()\n\n  let handleKeyDown = useCallback(\n    (event: ReactKeyboardEvent<HTMLButtonElement>) => {\n      switch (event.key) {\n        // Ref: https://www.w3.org/TR/wai-aria-practices-1.2/#keyboard-interaction-13\n\n        case Keys.Space:\n        case Keys.Enter:\n        case Keys.ArrowDown:\n          event.preventDefault()\n          dispatch({ type: ActionTypes.OpenListbox })\n          d.nextFrame(() => {\n            if (!state.propsRef.current.value)\n              dispatch({ type: ActionTypes.GoToOption, focus: Focus.First })\n          })\n          break\n\n        case Keys.ArrowUp:\n          event.preventDefault()\n          dispatch({ type: ActionTypes.OpenListbox })\n          d.nextFrame(() => {\n            if (!state.propsRef.current.value)\n              dispatch({ type: ActionTypes.GoToOption, focus: Focus.Last })\n          })\n          break\n      }\n    },\n    [dispatch, state, d]\n  )\n\n  let handleKeyUp = useCallback((event: ReactKeyboardEvent<HTMLButtonElement>) => {\n    switch (event.key) {\n      case Keys.Space:\n        // Required for firefox, event.preventDefault() in handleKeyDown for\n        // the Space key doesn't cancel the handleKeyUp, which in turn\n        // triggers a *click*.\n        event.preventDefault()\n        break\n    }\n  }, [])\n\n  let handleClick = useCallback(\n    (event: ReactMouseEvent) => {\n      if (isDisabledReactIssue7711(event.currentTarget)) return event.preventDefault()\n      if (state.listboxState === ListboxStates.Open) {\n        dispatch({ type: ActionTypes.CloseListbox })\n        d.nextFrame(() => state.buttonRef.current?.focus({ preventScroll: true }))\n      } else {\n        event.preventDefault()\n        dispatch({ type: ActionTypes.OpenListbox })\n      }\n    },\n    [dispatch, d, state]\n  )\n\n  let labelledby = useComputed(() => {\n    if (!state.labelRef.current) return undefined\n    return [state.labelRef.current.id, id].join(' ')\n  }, [state.labelRef.current, id])\n\n  let slot = useMemo<ButtonRenderPropArg>(\n    () => ({ open: state.listboxState === ListboxStates.Open, disabled: state.disabled }),\n    [state]\n  )\n  let passthroughProps = props\n  let propsWeControl = {\n    ref: buttonRef,\n    id,\n    type: 'button',\n    'aria-haspopup': true,\n    'aria-controls': state.optionsRef.current?.id,\n    'aria-expanded': state.listboxState === ListboxStates.Open ? true : undefined,\n    'aria-labelledby': labelledby,\n    disabled: state.disabled,\n    onKeyDown: handleKeyDown,\n    onKeyUp: handleKeyUp,\n    onClick: handleClick,\n  }\n\n  return render({\n    props: { ...passthroughProps, ...propsWeControl },\n    slot,\n    defaultTag: DEFAULT_BUTTON_TAG,\n    name: 'Listbox.Button',\n  })\n})\n\n// ---\n\nlet DEFAULT_LABEL_TAG = 'label' as const\ninterface LabelRenderPropArg {\n  open: boolean\n  disabled: boolean\n}\ntype LabelPropsWeControl = 'id' | 'ref' | 'onClick'\n\nfunction Label<TTag extends ElementType = typeof DEFAULT_LABEL_TAG>(\n  props: Props<TTag, LabelRenderPropArg, LabelPropsWeControl>\n) {\n  let [state] = useListboxContext([Listbox.name, Label.name].join('.'))\n  let id = `headlessui-listbox-label-${useId()}`\n\n  let handleClick = useCallback(() => state.buttonRef.current?.focus({ preventScroll: true }), [\n    state.buttonRef,\n  ])\n\n  let slot = useMemo<LabelRenderPropArg>(\n    () => ({ open: state.listboxState === ListboxStates.Open, disabled: state.disabled }),\n    [state]\n  )\n  let propsWeControl = { ref: state.labelRef, id, onClick: handleClick }\n  return render({\n    props: { ...props, ...propsWeControl },\n    slot,\n    defaultTag: DEFAULT_LABEL_TAG,\n    name: 'Listbox.Label',\n  })\n}\n\n// ---\n\nlet DEFAULT_OPTIONS_TAG = 'ul' as const\ninterface OptionsRenderPropArg {\n  open: boolean\n}\ntype OptionsPropsWeControl =\n  | 'aria-activedescendant'\n  | 'aria-labelledby'\n  | 'id'\n  | 'onKeyDown'\n  | 'role'\n  | 'tabIndex'\n\nlet OptionsRenderFeatures = Features.RenderStrategy | Features.Static\n\nlet Options = forwardRefWithAs(function Options<\n  TTag extends ElementType = typeof DEFAULT_OPTIONS_TAG\n>(\n  props: Props<TTag, OptionsRenderPropArg, OptionsPropsWeControl> &\n    PropsForFeatures<typeof OptionsRenderFeatures>,\n  ref: Ref<HTMLUListElement>\n) {\n  let [state, dispatch] = useListboxContext([Listbox.name, Options.name].join('.'))\n  let optionsRef = useSyncRefs(state.optionsRef, ref)\n\n  let id = `headlessui-listbox-options-${useId()}`\n  let d = useDisposables()\n  let searchDisposables = useDisposables()\n\n  useIsoMorphicEffect(() => {\n    let container = state.optionsRef.current\n    if (!container) return\n    if (state.listboxState !== ListboxStates.Open) return\n    if (container === document.activeElement) return\n\n    container.focus({ preventScroll: true })\n  }, [state.listboxState, state.optionsRef])\n\n  let handleKeyDown = useCallback(\n    (event: ReactKeyboardEvent<HTMLUListElement>) => {\n      searchDisposables.dispose()\n\n      switch (event.key) {\n        // Ref: https://www.w3.org/TR/wai-aria-practices-1.2/#keyboard-interaction-12\n\n        // @ts-expect-error Fallthrough is expected here\n        case Keys.Space:\n          if (state.searchQuery !== '') {\n            event.preventDefault()\n            event.stopPropagation()\n            return dispatch({ type: ActionTypes.Search, value: event.key })\n          }\n        // When in type ahead mode, fallthrough\n        case Keys.Enter:\n          event.preventDefault()\n          event.stopPropagation()\n          dispatch({ type: ActionTypes.CloseListbox })\n          if (state.activeOptionIndex !== null) {\n            let { dataRef } = state.options[state.activeOptionIndex]\n            state.propsRef.current.onChange(dataRef.current.value)\n          }\n          disposables().nextFrame(() => state.buttonRef.current?.focus({ preventScroll: true }))\n          break\n\n        case Keys.ArrowDown:\n          event.preventDefault()\n          event.stopPropagation()\n          return dispatch({ type: ActionTypes.GoToOption, focus: Focus.Next })\n\n        case Keys.ArrowUp:\n          event.preventDefault()\n          event.stopPropagation()\n          return dispatch({ type: ActionTypes.GoToOption, focus: Focus.Previous })\n\n        case Keys.Home:\n        case Keys.PageUp:\n          event.preventDefault()\n          event.stopPropagation()\n          return dispatch({ type: ActionTypes.GoToOption, focus: Focus.First })\n\n        case Keys.End:\n        case Keys.PageDown:\n          event.preventDefault()\n          event.stopPropagation()\n          return dispatch({ type: ActionTypes.GoToOption, focus: Focus.Last })\n\n        case Keys.Escape:\n          event.preventDefault()\n          event.stopPropagation()\n          dispatch({ type: ActionTypes.CloseListbox })\n          return d.nextFrame(() => state.buttonRef.current?.focus({ preventScroll: true }))\n\n        case Keys.Tab:\n          event.preventDefault()\n          event.stopPropagation()\n          break\n\n        default:\n          if (event.key.length === 1) {\n            dispatch({ type: ActionTypes.Search, value: event.key })\n            searchDisposables.setTimeout(() => dispatch({ type: ActionTypes.ClearSearch }), 350)\n          }\n          break\n      }\n    },\n    [d, dispatch, searchDisposables, state]\n  )\n\n  let labelledby = useComputed(() => state.labelRef.current?.id ?? state.buttonRef.current?.id, [\n    state.labelRef.current,\n    state.buttonRef.current,\n  ])\n\n  let slot = useMemo<OptionsRenderPropArg>(\n    () => ({ open: state.listboxState === ListboxStates.Open }),\n    [state]\n  )\n  let propsWeControl = {\n    'aria-activedescendant':\n      state.activeOptionIndex === null ? undefined : state.options[state.activeOptionIndex]?.id,\n    'aria-labelledby': labelledby,\n    id,\n    onKeyDown: handleKeyDown,\n    role: 'listbox',\n    tabIndex: 0,\n    ref: optionsRef,\n  }\n  let passthroughProps = props\n\n  return render({\n    props: { ...passthroughProps, ...propsWeControl },\n    slot,\n    defaultTag: DEFAULT_OPTIONS_TAG,\n    features: OptionsRenderFeatures,\n    visible: state.listboxState === ListboxStates.Open,\n    name: 'Listbox.Options',\n  })\n})\n\n// ---\n\nlet DEFAULT_OPTION_TAG = 'li' as const\ninterface OptionRenderPropArg {\n  active: boolean\n  selected: boolean\n  disabled: boolean\n}\ntype ListboxOptionPropsWeControl =\n  | 'id'\n  | 'role'\n  | 'tabIndex'\n  | 'aria-disabled'\n  | 'aria-selected'\n  | 'onPointerLeave'\n  | 'onMouseLeave'\n  | 'onPointerMove'\n  | 'onMouseMove'\n  | 'onFocus'\n\nfunction Option<\n  TTag extends ElementType = typeof DEFAULT_OPTION_TAG,\n  // TODO: One day we will be able to infer this type from the generic in Listbox itself.\n  // But today is not that day..\n  TType = Parameters<typeof Listbox>[0]['value']\n>(\n  props: Props<TTag, OptionRenderPropArg, ListboxOptionPropsWeControl | 'value'> & {\n    disabled?: boolean\n    value: TType\n  }\n) {\n  let { disabled = false, value, ...passthroughProps } = props\n  let [state, dispatch] = useListboxContext([Listbox.name, Option.name].join('.'))\n  let id = `headlessui-listbox-option-${useId()}`\n  let active =\n    state.activeOptionIndex !== null ? state.options[state.activeOptionIndex].id === id : false\n  let selected = state.propsRef.current.value === value\n\n  let bag = useRef<ListboxOptionDataRef['current']>({ disabled, value })\n\n  useIsoMorphicEffect(() => {\n    bag.current.disabled = disabled\n  }, [bag, disabled])\n  useIsoMorphicEffect(() => {\n    bag.current.value = value\n  }, [bag, value])\n  useIsoMorphicEffect(() => {\n    bag.current.textValue = document.getElementById(id)?.textContent?.toLowerCase()\n  }, [bag, id])\n\n  let select = useCallback(() => state.propsRef.current.onChange(value), [state.propsRef, value])\n\n  useIsoMorphicEffect(() => {\n    dispatch({ type: ActionTypes.RegisterOption, id, dataRef: bag })\n    return () => dispatch({ type: ActionTypes.UnregisterOption, id })\n  }, [bag, id])\n\n  useIsoMorphicEffect(() => {\n    if (state.listboxState !== ListboxStates.Open) return\n    if (!selected) return\n    dispatch({ type: ActionTypes.GoToOption, focus: Focus.Specific, id })\n    document.getElementById(id)?.focus?.()\n  }, [state.listboxState])\n\n  useIsoMorphicEffect(() => {\n    if (state.listboxState !== ListboxStates.Open) return\n    if (!active) return\n    let d = disposables()\n    d.nextFrame(() => document.getElementById(id)?.scrollIntoView?.({ block: 'nearest' }))\n    return d.dispose\n  }, [id, active, state.listboxState])\n\n  let handleClick = useCallback(\n    (event: { preventDefault: Function }) => {\n      if (disabled) return event.preventDefault()\n      select()\n      dispatch({ type: ActionTypes.CloseListbox })\n      disposables().nextFrame(() => state.buttonRef.current?.focus({ preventScroll: true }))\n    },\n    [dispatch, state.buttonRef, disabled, select]\n  )\n\n  let handleFocus = useCallback(() => {\n    if (disabled) return dispatch({ type: ActionTypes.GoToOption, focus: Focus.Nothing })\n    dispatch({ type: ActionTypes.GoToOption, focus: Focus.Specific, id })\n  }, [disabled, id, dispatch])\n\n  let handleMove = useCallback(() => {\n    if (disabled) return\n    if (active) return\n    dispatch({ type: ActionTypes.GoToOption, focus: Focus.Specific, id })\n  }, [disabled, active, id, dispatch])\n\n  let handleLeave = useCallback(() => {\n    if (disabled) return\n    if (!active) return\n    dispatch({ type: ActionTypes.GoToOption, focus: Focus.Nothing })\n  }, [disabled, active, dispatch])\n\n  let slot = useMemo<OptionRenderPropArg>(() => ({ active, selected, disabled }), [\n    active,\n    selected,\n    disabled,\n  ])\n  let propsWeControl = {\n    id,\n    role: 'option',\n    tabIndex: -1,\n    'aria-disabled': disabled === true ? true : undefined,\n    'aria-selected': selected === true ? true : undefined,\n    onClick: handleClick,\n    onFocus: handleFocus,\n    onPointerMove: handleMove,\n    onMouseMove: handleMove,\n    onPointerLeave: handleLeave,\n    onMouseLeave: handleLeave,\n  }\n\n  return render({\n    props: { ...passthroughProps, ...propsWeControl },\n    slot,\n    defaultTag: DEFAULT_OPTION_TAG,\n    name: 'Listbox.Option',\n  })\n}\n\n// ---\n\nListbox.Button = Button\nListbox.Label = Label\nListbox.Options = Options\nListbox.Option = Option\n","import { useRef, useEffect } from 'react'\nimport { useIsoMorphicEffect } from './use-iso-morphic-effect'\n\ntype AcceptNode = (\n  node: HTMLElement\n) =>\n  | typeof NodeFilter.FILTER_ACCEPT\n  | typeof NodeFilter.FILTER_SKIP\n  | typeof NodeFilter.FILTER_REJECT\n\nexport function useTreeWalker({\n  container,\n  accept,\n  walk,\n  enabled = true,\n}: {\n  container: HTMLElement | null\n  accept: AcceptNode\n  walk(node: HTMLElement): void\n  enabled?: boolean\n}) {\n  let acceptRef = useRef(accept)\n  let walkRef = useRef(walk)\n\n  useEffect(() => {\n    acceptRef.current = accept\n    walkRef.current = walk\n  }, [accept, walk])\n\n  useIsoMorphicEffect(() => {\n    if (!container) return\n    if (!enabled) return\n\n    let accept = acceptRef.current\n    let walk = walkRef.current\n\n    let acceptNode = Object.assign((node: HTMLElement) => accept(node), { acceptNode: accept })\n    let walker = document.createTreeWalker(container, NodeFilter.SHOW_ELEMENT, acceptNode, false)\n\n    while (walker.nextNode()) walk(walker.currentNode as HTMLElement)\n  }, [container, enabled, acceptRef, walkRef])\n}\n","// WAI-ARIA: https://www.w3.org/TR/wai-aria-practices-1.2/#menubutton\nimport React, {\n  Fragment,\n  createContext,\n  createRef,\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useReducer,\n  useRef,\n\n  // Types\n  Dispatch,\n  ElementType,\n  KeyboardEvent as ReactKeyboardEvent,\n  MouseEvent as ReactMouseEvent,\n  MutableRefObject,\n  Ref,\n} from 'react'\n\nimport { Props } from '../../types'\nimport { match } from '../../utils/match'\nimport { forwardRefWithAs, render, Features, PropsForFeatures } from '../../utils/render'\nimport { disposables } from '../../utils/disposables'\nimport { useDisposables } from '../../hooks/use-disposables'\nimport { useIsoMorphicEffect } from '../../hooks/use-iso-morphic-effect'\nimport { useSyncRefs } from '../../hooks/use-sync-refs'\nimport { useId } from '../../hooks/use-id'\nimport { Keys } from '../keyboard'\nimport { Focus, calculateActiveIndex } from '../../utils/calculate-active-index'\nimport { isDisabledReactIssue7711 } from '../../utils/bugs'\nimport { isFocusableElement, FocusableMode } from '../../utils/focus-management'\nimport { useWindowEvent } from '../../hooks/use-window-event'\nimport { useTreeWalker } from '../../hooks/use-tree-walker'\n\nenum MenuStates {\n  Open,\n  Closed,\n}\n\ntype MenuItemDataRef = MutableRefObject<{ textValue?: string; disabled: boolean }>\n\ninterface StateDefinition {\n  menuState: MenuStates\n  buttonRef: MutableRefObject<HTMLButtonElement | null>\n  itemsRef: MutableRefObject<HTMLDivElement | null>\n  items: { id: string; dataRef: MenuItemDataRef }[]\n  searchQuery: string\n  activeItemIndex: number | null\n}\n\nenum ActionTypes {\n  OpenMenu,\n  CloseMenu,\n\n  GoToItem,\n  Search,\n  ClearSearch,\n  RegisterItem,\n  UnregisterItem,\n}\n\ntype Actions =\n  | { type: ActionTypes.CloseMenu }\n  | { type: ActionTypes.OpenMenu }\n  | { type: ActionTypes.GoToItem; focus: Focus.Specific; id: string }\n  | { type: ActionTypes.GoToItem; focus: Exclude<Focus, Focus.Specific> }\n  | { type: ActionTypes.Search; value: string }\n  | { type: ActionTypes.ClearSearch }\n  | { type: ActionTypes.RegisterItem; id: string; dataRef: MenuItemDataRef }\n  | { type: ActionTypes.UnregisterItem; id: string }\n\nlet reducers: {\n  [P in ActionTypes]: (\n    state: StateDefinition,\n    action: Extract<Actions, { type: P }>\n  ) => StateDefinition\n} = {\n  [ActionTypes.CloseMenu](state) {\n    if (state.menuState === MenuStates.Closed) return state\n    return { ...state, activeItemIndex: null, menuState: MenuStates.Closed }\n  },\n  [ActionTypes.OpenMenu](state) {\n    if (state.menuState === MenuStates.Open) return state\n    return { ...state, menuState: MenuStates.Open }\n  },\n  [ActionTypes.GoToItem]: (state, action) => {\n    let activeItemIndex = calculateActiveIndex(action, {\n      resolveItems: () => state.items,\n      resolveActiveIndex: () => state.activeItemIndex,\n      resolveId: item => item.id,\n      resolveDisabled: item => item.dataRef.current.disabled,\n    })\n\n    if (state.searchQuery === '' && state.activeItemIndex === activeItemIndex) return state\n    return { ...state, searchQuery: '', activeItemIndex }\n  },\n  [ActionTypes.Search]: (state, action) => {\n    let searchQuery = state.searchQuery + action.value.toLowerCase()\n    let match = state.items.findIndex(\n      item =>\n        item.dataRef.current.textValue?.startsWith(searchQuery) && !item.dataRef.current.disabled\n    )\n\n    if (match === -1 || match === state.activeItemIndex) return { ...state, searchQuery }\n    return { ...state, searchQuery, activeItemIndex: match }\n  },\n  [ActionTypes.ClearSearch](state) {\n    if (state.searchQuery === '') return state\n    return { ...state, searchQuery: '' }\n  },\n  [ActionTypes.RegisterItem]: (state, action) => ({\n    ...state,\n    items: [...state.items, { id: action.id, dataRef: action.dataRef }],\n  }),\n  [ActionTypes.UnregisterItem]: (state, action) => {\n    let nextItems = state.items.slice()\n    let currentActiveItem = state.activeItemIndex !== null ? nextItems[state.activeItemIndex] : null\n\n    let idx = nextItems.findIndex(a => a.id === action.id)\n\n    if (idx !== -1) nextItems.splice(idx, 1)\n\n    return {\n      ...state,\n      items: nextItems,\n      activeItemIndex: (() => {\n        if (idx === state.activeItemIndex) return null\n        if (currentActiveItem === null) return null\n\n        // If we removed the item before the actual active index, then it would be out of sync. To\n        // fix this, we will find the correct (new) index position.\n        return nextItems.indexOf(currentActiveItem)\n      })(),\n    }\n  },\n}\n\nlet MenuContext = createContext<[StateDefinition, Dispatch<Actions>] | null>(null)\nMenuContext.displayName = 'MenuContext'\n\nfunction useMenuContext(component: string) {\n  let context = useContext(MenuContext)\n  if (context === null) {\n    let err = new Error(`<${component} /> is missing a parent <${Menu.name} /> component.`)\n    if (Error.captureStackTrace) Error.captureStackTrace(err, useMenuContext)\n    throw err\n  }\n  return context\n}\n\nfunction stateReducer(state: StateDefinition, action: Actions) {\n  return match(action.type, reducers, state, action)\n}\n\n// ---\n\nlet DEFAULT_MENU_TAG = Fragment\ninterface MenuRenderPropArg {\n  open: boolean\n}\n\nexport function Menu<TTag extends ElementType = typeof DEFAULT_MENU_TAG>(\n  props: Props<TTag, MenuRenderPropArg>\n) {\n  let reducerBag = useReducer(stateReducer, {\n    menuState: MenuStates.Closed,\n    buttonRef: createRef(),\n    itemsRef: createRef(),\n    items: [],\n    searchQuery: '',\n    activeItemIndex: null,\n  } as StateDefinition)\n  let [{ menuState, itemsRef, buttonRef }, dispatch] = reducerBag\n\n  // Handle outside click\n  useWindowEvent('mousedown', event => {\n    let target = event.target as HTMLElement\n\n    if (menuState !== MenuStates.Open) return\n\n    if (buttonRef.current?.contains(target)) return\n    if (itemsRef.current?.contains(target)) return\n\n    dispatch({ type: ActionTypes.CloseMenu })\n\n    if (!isFocusableElement(target, FocusableMode.Loose)) {\n      event.preventDefault()\n      buttonRef.current?.focus()\n    }\n  })\n\n  let slot = useMemo<MenuRenderPropArg>(() => ({ open: menuState === MenuStates.Open }), [\n    menuState,\n  ])\n\n  return (\n    <MenuContext.Provider value={reducerBag}>\n      {render({ props, slot, defaultTag: DEFAULT_MENU_TAG, name: 'Menu' })}\n    </MenuContext.Provider>\n  )\n}\n\n// ---\n\nlet DEFAULT_BUTTON_TAG = 'button' as const\ninterface ButtonRenderPropArg {\n  open: boolean\n}\ntype ButtonPropsWeControl =\n  | 'id'\n  | 'type'\n  | 'aria-haspopup'\n  | 'aria-controls'\n  | 'aria-expanded'\n  | 'onKeyDown'\n  | 'onClick'\n\nlet Button = forwardRefWithAs(function Button<TTag extends ElementType = typeof DEFAULT_BUTTON_TAG>(\n  props: Props<TTag, ButtonRenderPropArg, ButtonPropsWeControl>,\n  ref: Ref<HTMLButtonElement>\n) {\n  let [state, dispatch] = useMenuContext([Menu.name, Button.name].join('.'))\n  let buttonRef = useSyncRefs(state.buttonRef, ref)\n\n  let id = `headlessui-menu-button-${useId()}`\n  let d = useDisposables()\n\n  let handleKeyDown = useCallback(\n    (event: ReactKeyboardEvent<HTMLButtonElement>) => {\n      switch (event.key) {\n        // Ref: https://www.w3.org/TR/wai-aria-practices-1.2/#keyboard-interaction-13\n\n        case Keys.Space:\n        case Keys.Enter:\n        case Keys.ArrowDown:\n          event.preventDefault()\n          event.stopPropagation()\n          dispatch({ type: ActionTypes.OpenMenu })\n          d.nextFrame(() => dispatch({ type: ActionTypes.GoToItem, focus: Focus.First }))\n          break\n\n        case Keys.ArrowUp:\n          event.preventDefault()\n          event.stopPropagation()\n          dispatch({ type: ActionTypes.OpenMenu })\n          d.nextFrame(() => dispatch({ type: ActionTypes.GoToItem, focus: Focus.Last }))\n          break\n      }\n    },\n    [dispatch, d]\n  )\n\n  let handleKeyUp = useCallback((event: ReactKeyboardEvent<HTMLButtonElement>) => {\n    switch (event.key) {\n      case Keys.Space:\n        // Required for firefox, event.preventDefault() in handleKeyDown for\n        // the Space key doesn't cancel the handleKeyUp, which in turn\n        // triggers a *click*.\n        event.preventDefault()\n        break\n    }\n  }, [])\n\n  let handleClick = useCallback(\n    (event: ReactMouseEvent) => {\n      if (isDisabledReactIssue7711(event.currentTarget)) return event.preventDefault()\n      if (props.disabled) return\n      if (state.menuState === MenuStates.Open) {\n        dispatch({ type: ActionTypes.CloseMenu })\n        d.nextFrame(() => state.buttonRef.current?.focus({ preventScroll: true }))\n      } else {\n        event.preventDefault()\n        event.stopPropagation()\n        dispatch({ type: ActionTypes.OpenMenu })\n      }\n    },\n    [dispatch, d, state, props.disabled]\n  )\n\n  let slot = useMemo<ButtonRenderPropArg>(() => ({ open: state.menuState === MenuStates.Open }), [\n    state,\n  ])\n  let passthroughProps = props\n  let propsWeControl = {\n    ref: buttonRef,\n    id,\n    type: 'button',\n    'aria-haspopup': true,\n    'aria-controls': state.itemsRef.current?.id,\n    'aria-expanded': state.menuState === MenuStates.Open ? true : undefined,\n    onKeyDown: handleKeyDown,\n    onKeyUp: handleKeyUp,\n    onClick: handleClick,\n  }\n\n  return render({\n    props: { ...passthroughProps, ...propsWeControl },\n    slot,\n    defaultTag: DEFAULT_BUTTON_TAG,\n    name: 'Menu.Button',\n  })\n})\n\n// ---\n\nlet DEFAULT_ITEMS_TAG = 'div' as const\ninterface ItemsRenderPropArg {\n  open: boolean\n}\ntype ItemsPropsWeControl =\n  | 'aria-activedescendant'\n  | 'aria-labelledby'\n  | 'id'\n  | 'onKeyDown'\n  | 'role'\n  | 'tabIndex'\n\nlet ItemsRenderFeatures = Features.RenderStrategy | Features.Static\n\nlet Items = forwardRefWithAs(function Items<TTag extends ElementType = typeof DEFAULT_ITEMS_TAG>(\n  props: Props<TTag, ItemsRenderPropArg, ItemsPropsWeControl> &\n    PropsForFeatures<typeof ItemsRenderFeatures>,\n  ref: Ref<HTMLDivElement>\n) {\n  let [state, dispatch] = useMenuContext([Menu.name, Items.name].join('.'))\n  let itemsRef = useSyncRefs(state.itemsRef, ref)\n\n  let id = `headlessui-menu-items-${useId()}`\n  let searchDisposables = useDisposables()\n\n  useEffect(() => {\n    let container = state.itemsRef.current\n    if (!container) return\n    if (state.menuState !== MenuStates.Open) return\n    if (container === document.activeElement) return\n\n    container.focus({ preventScroll: true })\n  }, [state.menuState, state.itemsRef])\n\n  useTreeWalker({\n    container: state.itemsRef.current,\n    enabled: state.menuState === MenuStates.Open,\n    accept(node) {\n      if (node.getAttribute('role') === 'menuitem') return NodeFilter.FILTER_REJECT\n      if (node.hasAttribute('role')) return NodeFilter.FILTER_SKIP\n      return NodeFilter.FILTER_ACCEPT\n    },\n    walk(node) {\n      node.setAttribute('role', 'none')\n    },\n  })\n\n  let handleKeyDown = useCallback(\n    (event: ReactKeyboardEvent<HTMLDivElement>) => {\n      searchDisposables.dispose()\n\n      switch (event.key) {\n        // Ref: https://www.w3.org/TR/wai-aria-practices-1.2/#keyboard-interaction-12\n\n        // @ts-expect-error Fallthrough is expected here\n        case Keys.Space:\n          if (state.searchQuery !== '') {\n            event.preventDefault()\n            event.stopPropagation()\n            return dispatch({ type: ActionTypes.Search, value: event.key })\n          }\n        // When in type ahead mode, fallthrough\n        case Keys.Enter:\n          event.preventDefault()\n          event.stopPropagation()\n          dispatch({ type: ActionTypes.CloseMenu })\n          if (state.activeItemIndex !== null) {\n            let { id } = state.items[state.activeItemIndex]\n            document.getElementById(id)?.click()\n          }\n          disposables().nextFrame(() => state.buttonRef.current?.focus({ preventScroll: true }))\n          break\n\n        case Keys.ArrowDown:\n          event.preventDefault()\n          event.stopPropagation()\n          return dispatch({ type: ActionTypes.GoToItem, focus: Focus.Next })\n\n        case Keys.ArrowUp:\n          event.preventDefault()\n          event.stopPropagation()\n          return dispatch({ type: ActionTypes.GoToItem, focus: Focus.Previous })\n\n        case Keys.Home:\n        case Keys.PageUp:\n          event.preventDefault()\n          event.stopPropagation()\n          return dispatch({ type: ActionTypes.GoToItem, focus: Focus.First })\n\n        case Keys.End:\n        case Keys.PageDown:\n          event.preventDefault()\n          event.stopPropagation()\n          return dispatch({ type: ActionTypes.GoToItem, focus: Focus.Last })\n\n        case Keys.Escape:\n          event.preventDefault()\n          event.stopPropagation()\n          dispatch({ type: ActionTypes.CloseMenu })\n          disposables().nextFrame(() => state.buttonRef.current?.focus({ preventScroll: true }))\n          break\n\n        case Keys.Tab:\n          event.preventDefault()\n          event.stopPropagation()\n          break\n\n        default:\n          if (event.key.length === 1) {\n            dispatch({ type: ActionTypes.Search, value: event.key })\n            searchDisposables.setTimeout(() => dispatch({ type: ActionTypes.ClearSearch }), 350)\n          }\n          break\n      }\n    },\n    [dispatch, searchDisposables, state]\n  )\n\n  let handleKeyUp = useCallback((event: ReactKeyboardEvent<HTMLButtonElement>) => {\n    switch (event.key) {\n      case Keys.Space:\n        // Required for firefox, event.preventDefault() in handleKeyDown for\n        // the Space key doesn't cancel the handleKeyUp, which in turn\n        // triggers a *click*.\n        event.preventDefault()\n        break\n    }\n  }, [])\n\n  let slot = useMemo<ItemsRenderPropArg>(() => ({ open: state.menuState === MenuStates.Open }), [\n    state,\n  ])\n  let propsWeControl = {\n    'aria-activedescendant':\n      state.activeItemIndex === null ? undefined : state.items[state.activeItemIndex]?.id,\n    'aria-labelledby': state.buttonRef.current?.id,\n    id,\n    onKeyDown: handleKeyDown,\n    onKeyUp: handleKeyUp,\n    role: 'menu',\n    tabIndex: 0,\n    ref: itemsRef,\n  }\n  let passthroughProps = props\n\n  return render({\n    props: { ...passthroughProps, ...propsWeControl },\n    slot,\n    defaultTag: DEFAULT_ITEMS_TAG,\n    features: ItemsRenderFeatures,\n    visible: state.menuState === MenuStates.Open,\n    name: 'Menu.Items',\n  })\n})\n\n// ---\n\nlet DEFAULT_ITEM_TAG = Fragment\ninterface ItemRenderPropArg {\n  active: boolean\n  disabled: boolean\n}\ntype MenuItemPropsWeControl =\n  | 'id'\n  | 'role'\n  | 'tabIndex'\n  | 'aria-disabled'\n  | 'onPointerLeave'\n  | 'onPointerMove'\n  | 'onMouseLeave'\n  | 'onMouseMove'\n  | 'onFocus'\n\nfunction Item<TTag extends ElementType = typeof DEFAULT_ITEM_TAG>(\n  props: Props<TTag, ItemRenderPropArg, MenuItemPropsWeControl> & {\n    disabled?: boolean\n    onClick?: (event: { preventDefault: Function }) => void\n  }\n) {\n  let { disabled = false, onClick, ...passthroughProps } = props\n  let [state, dispatch] = useMenuContext([Menu.name, Item.name].join('.'))\n  let id = `headlessui-menu-item-${useId()}`\n  let active = state.activeItemIndex !== null ? state.items[state.activeItemIndex].id === id : false\n\n  useIsoMorphicEffect(() => {\n    if (state.menuState !== MenuStates.Open) return\n    if (!active) return\n    let d = disposables()\n    d.nextFrame(() => document.getElementById(id)?.scrollIntoView?.({ block: 'nearest' }))\n    return d.dispose\n  }, [id, active, state.menuState])\n\n  let bag = useRef<MenuItemDataRef['current']>({ disabled })\n\n  useIsoMorphicEffect(() => {\n    bag.current.disabled = disabled\n  }, [bag, disabled])\n\n  useIsoMorphicEffect(() => {\n    bag.current.textValue = document.getElementById(id)?.textContent?.toLowerCase()\n  }, [bag, id])\n\n  useIsoMorphicEffect(() => {\n    dispatch({ type: ActionTypes.RegisterItem, id, dataRef: bag })\n    return () => dispatch({ type: ActionTypes.UnregisterItem, id })\n  }, [bag, id])\n\n  let handleClick = useCallback(\n    (event: MouseEvent) => {\n      if (disabled) return event.preventDefault()\n      dispatch({ type: ActionTypes.CloseMenu })\n      disposables().nextFrame(() => state.buttonRef.current?.focus({ preventScroll: true }))\n      if (onClick) return onClick(event)\n    },\n    [dispatch, state.buttonRef, disabled, onClick]\n  )\n\n  let handleFocus = useCallback(() => {\n    if (disabled) return dispatch({ type: ActionTypes.GoToItem, focus: Focus.Nothing })\n    dispatch({ type: ActionTypes.GoToItem, focus: Focus.Specific, id })\n  }, [disabled, id, dispatch])\n\n  let handleMove = useCallback(() => {\n    if (disabled) return\n    if (active) return\n    dispatch({ type: ActionTypes.GoToItem, focus: Focus.Specific, id })\n  }, [disabled, active, id, dispatch])\n\n  let handleLeave = useCallback(() => {\n    if (disabled) return\n    if (!active) return\n    dispatch({ type: ActionTypes.GoToItem, focus: Focus.Nothing })\n  }, [disabled, active, dispatch])\n\n  let slot = useMemo<ItemRenderPropArg>(() => ({ active, disabled }), [active, disabled])\n  let propsWeControl = {\n    id,\n    role: 'menuitem',\n    tabIndex: -1,\n    'aria-disabled': disabled === true ? true : undefined,\n    onClick: handleClick,\n    onFocus: handleFocus,\n    onPointerMove: handleMove,\n    onMouseMove: handleMove,\n    onPointerLeave: handleLeave,\n    onMouseLeave: handleLeave,\n  }\n\n  return render({\n    props: { ...passthroughProps, ...propsWeControl },\n    slot,\n    defaultTag: DEFAULT_ITEM_TAG,\n    name: 'Menu.Item',\n  })\n}\n\n// ---\n\nMenu.Button = Button\nMenu.Items = Items\nMenu.Item = Item\n","import React, {\n  createContext,\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useReducer,\n  useRef,\n  useState,\n\n  // Types\n  ContextType,\n  Dispatch,\n  ElementType,\n  KeyboardEvent as ReactKeyboardEvent,\n  MouseEvent as ReactMouseEvent,\n  Ref,\n} from 'react'\n\nimport { Props } from '../../types'\nimport { match } from '../../utils/match'\nimport { forwardRefWithAs, render, Features, PropsForFeatures } from '../../utils/render'\nimport { useSyncRefs } from '../../hooks/use-sync-refs'\nimport { useId } from '../../hooks/use-id'\nimport { Keys } from '../keyboard'\nimport { isDisabledReactIssue7711 } from '../../utils/bugs'\nimport {\n  getFocusableElements,\n  Focus,\n  focusIn,\n  FocusResult,\n  isFocusableElement,\n  FocusableMode,\n} from '../../utils/focus-management'\nimport { useWindowEvent } from '../../hooks/use-window-event'\n\nenum PopoverStates {\n  Open,\n  Closed,\n}\n\ninterface StateDefinition {\n  popoverState: PopoverStates\n\n  button: HTMLElement | null\n  buttonId: string\n  panel: HTMLElement | null\n  panelId: string\n}\n\nenum ActionTypes {\n  TogglePopover,\n  ClosePopover,\n\n  SetButton,\n  SetButtonId,\n  SetPanel,\n  SetPanelId,\n}\n\ntype Actions =\n  | { type: ActionTypes.TogglePopover }\n  | { type: ActionTypes.ClosePopover }\n  | { type: ActionTypes.SetButton; button: HTMLElement | null }\n  | { type: ActionTypes.SetButtonId; buttonId: string }\n  | { type: ActionTypes.SetPanel; panel: HTMLElement | null }\n  | { type: ActionTypes.SetPanelId; panelId: string }\n\nlet reducers: {\n  [P in ActionTypes]: (\n    state: StateDefinition,\n    action: Extract<Actions, { type: P }>\n  ) => StateDefinition\n} = {\n  [ActionTypes.TogglePopover]: state => ({\n    ...state,\n    popoverState: match(state.popoverState, {\n      [PopoverStates.Open]: PopoverStates.Closed,\n      [PopoverStates.Closed]: PopoverStates.Open,\n    }),\n  }),\n  [ActionTypes.ClosePopover](state) {\n    if (state.popoverState === PopoverStates.Closed) return state\n    return { ...state, popoverState: PopoverStates.Closed }\n  },\n  [ActionTypes.SetButton](state, action) {\n    if (state.button === action.button) return state\n    return { ...state, button: action.button }\n  },\n  [ActionTypes.SetButtonId](state, action) {\n    if (state.buttonId === action.buttonId) return state\n    return { ...state, buttonId: action.buttonId }\n  },\n  [ActionTypes.SetPanel](state, action) {\n    if (state.panel === action.panel) return state\n    return { ...state, panel: action.panel }\n  },\n  [ActionTypes.SetPanelId](state, action) {\n    if (state.panelId === action.panelId) return state\n    return { ...state, panelId: action.panelId }\n  },\n}\n\nlet PopoverContext = createContext<[StateDefinition, Dispatch<Actions>] | null>(null)\nPopoverContext.displayName = 'PopoverContext'\n\nfunction usePopoverContext(component: string) {\n  let context = useContext(PopoverContext)\n  if (context === null) {\n    let err = new Error(`<${component} /> is missing a parent <${Popover.name} /> component.`)\n    if (Error.captureStackTrace) Error.captureStackTrace(err, usePopoverContext)\n    throw err\n  }\n  return context\n}\n\nlet PopoverGroupContext = createContext<{\n  registerPopover(registerbag: PopoverRegisterBag): void\n  unregisterPopover(registerbag: PopoverRegisterBag): void\n  isFocusWithinPopoverGroup(): boolean\n  closeOthers(buttonId: string): void\n} | null>(null)\nPopoverGroupContext.displayName = 'PopoverGroupContext'\n\nfunction usePopoverGroupContext() {\n  return useContext(PopoverGroupContext)\n}\n\nlet PopoverPanelContext = createContext<string | null>(null)\nPopoverPanelContext.displayName = 'PopoverPanelContext'\n\nfunction usePopoverPanelContext() {\n  return useContext(PopoverPanelContext)\n}\n\ninterface PopoverRegisterBag {\n  buttonId: string\n  panelId: string\n  close(): void\n}\nfunction stateReducer(state: StateDefinition, action: Actions) {\n  return match(action.type, reducers, state, action)\n}\n\n// ---\n\nlet DEFAULT_POPOVER_TAG = 'div' as const\ninterface PopoverRenderPropArg {\n  open: boolean\n}\n\nexport function Popover<TTag extends ElementType = typeof DEFAULT_POPOVER_TAG>(\n  props: Props<TTag, PopoverRenderPropArg>\n) {\n  let buttonId = `headlessui-popover-button-${useId()}`\n  let panelId = `headlessui-popover-panel-${useId()}`\n\n  let reducerBag = useReducer(stateReducer, {\n    popoverState: PopoverStates.Closed,\n    button: null,\n    buttonId,\n    panel: null,\n    panelId,\n  } as StateDefinition)\n  let [{ popoverState, button, panel }, dispatch] = reducerBag\n\n  useEffect(() => dispatch({ type: ActionTypes.SetButtonId, buttonId }), [buttonId, dispatch])\n  useEffect(() => dispatch({ type: ActionTypes.SetPanelId, panelId }), [panelId, dispatch])\n\n  let registerBag = useMemo(\n    () => ({ buttonId, panelId, close: () => dispatch({ type: ActionTypes.ClosePopover }) }),\n    [buttonId, panelId, dispatch]\n  )\n\n  let groupContext = usePopoverGroupContext()\n  let registerPopover = groupContext?.registerPopover\n  let isFocusWithinPopoverGroup = useCallback(() => {\n    return (\n      groupContext?.isFocusWithinPopoverGroup() ??\n      (button?.contains(document.activeElement) || panel?.contains(document.activeElement))\n    )\n  }, [groupContext, button, panel])\n\n  useEffect(() => registerPopover?.(registerBag), [registerPopover, registerBag])\n\n  // Handle focus out\n  useWindowEvent(\n    'focus',\n    () => {\n      if (popoverState !== PopoverStates.Open) return\n      if (isFocusWithinPopoverGroup()) return\n      if (!button) return\n      if (!panel) return\n\n      dispatch({ type: ActionTypes.ClosePopover })\n    },\n    true\n  )\n\n  // Handle outside click\n  useWindowEvent('mousedown', event => {\n    let target = event.target as HTMLElement\n\n    if (popoverState !== PopoverStates.Open) return\n\n    if (button?.contains(target)) return\n    if (panel?.contains(target)) return\n\n    dispatch({ type: ActionTypes.ClosePopover })\n\n    if (!isFocusableElement(target, FocusableMode.Loose)) {\n      event.preventDefault()\n      button?.focus()\n    }\n  })\n\n  let slot = useMemo<PopoverRenderPropArg>(() => ({ open: popoverState === PopoverStates.Open }), [\n    popoverState,\n  ])\n\n  return (\n    <PopoverContext.Provider value={reducerBag}>\n      {render({\n        props,\n        slot,\n        defaultTag: DEFAULT_POPOVER_TAG,\n        name: 'Popover',\n      })}\n    </PopoverContext.Provider>\n  )\n}\n\n// ---\n\nlet DEFAULT_BUTTON_TAG = 'button' as const\ninterface ButtonRenderPropArg {\n  open: boolean\n}\ntype ButtonPropsWeControl =\n  | 'id'\n  | 'type'\n  | 'aria-expanded'\n  | 'aria-controls'\n  | 'onKeyDown'\n  | 'onClick'\n\nlet Button = forwardRefWithAs(function Button<TTag extends ElementType = typeof DEFAULT_BUTTON_TAG>(\n  props: Props<TTag, ButtonRenderPropArg, ButtonPropsWeControl>,\n  ref: Ref<HTMLButtonElement>\n) {\n  let [state, dispatch] = usePopoverContext([Popover.name, Button.name].join('.'))\n  let internalButtonRef = useRef<HTMLButtonElement | null>(null)\n\n  let groupContext = usePopoverGroupContext()\n  let closeOthers = groupContext?.closeOthers\n\n  let panelContext = usePopoverPanelContext()\n  let isWithinPanel = panelContext === null ? false : panelContext === state.panelId\n\n  let buttonRef = useSyncRefs(\n    internalButtonRef,\n    ref,\n    isWithinPanel ? null : button => dispatch({ type: ActionTypes.SetButton, button })\n  )\n\n  // TODO: Revisit when handling Tab/Shift+Tab when using Portal's\n  let activeElementRef = useRef<Element | null>(null)\n  let previousActiveElementRef = useRef<Element | null>(\n    typeof window === 'undefined' ? null : document.activeElement\n  )\n  useWindowEvent(\n    'focus',\n    () => {\n      previousActiveElementRef.current = activeElementRef.current\n      activeElementRef.current = document.activeElement\n    },\n    true\n  )\n\n  let handleKeyDown = useCallback(\n    (event: ReactKeyboardEvent<HTMLButtonElement>) => {\n      if (isWithinPanel) {\n        if (state.popoverState === PopoverStates.Closed) return\n        switch (event.key) {\n          case Keys.Space:\n          case Keys.Enter:\n            event.preventDefault() // Prevent triggering a *click* event\n            event.stopPropagation()\n            dispatch({ type: ActionTypes.ClosePopover })\n            state.button?.focus() // Re-focus the original opening Button\n            break\n        }\n      } else {\n        switch (event.key) {\n          case Keys.Space:\n          case Keys.Enter:\n            event.preventDefault() // Prevent triggering a *click* event\n            event.stopPropagation()\n            if (state.popoverState === PopoverStates.Closed) closeOthers?.(state.buttonId)\n            dispatch({ type: ActionTypes.TogglePopover })\n            break\n\n          case Keys.Escape:\n            if (state.popoverState !== PopoverStates.Open) return closeOthers?.(state.buttonId)\n            if (!internalButtonRef.current) return\n            if (!internalButtonRef.current.contains(document.activeElement)) return\n            dispatch({ type: ActionTypes.ClosePopover })\n            break\n\n          case Keys.Tab:\n            if (state.popoverState !== PopoverStates.Open) return\n            if (!state.panel) return\n            if (!state.button) return\n\n            // TODO: Revisit when handling Tab/Shift+Tab when using Portal's\n            if (event.shiftKey) {\n              // Check if the last focused element exists, and check that it is not inside button or panel itself\n              if (!previousActiveElementRef.current) return\n              if (state.button?.contains(previousActiveElementRef.current)) return\n              if (state.panel.contains(previousActiveElementRef.current)) return\n\n              // Check if the last focused element is *after* the button in the DOM\n              let focusableElements = getFocusableElements()\n              let previousIdx = focusableElements.indexOf(\n                previousActiveElementRef.current as HTMLElement\n              )\n              let buttonIdx = focusableElements.indexOf(state.button)\n              if (buttonIdx > previousIdx) return\n\n              event.preventDefault()\n              event.stopPropagation()\n\n              focusIn(state.panel, Focus.Last)\n            } else {\n              event.preventDefault()\n              event.stopPropagation()\n\n              focusIn(state.panel, Focus.First)\n            }\n\n            break\n        }\n      }\n    },\n    [\n      dispatch,\n      state.popoverState,\n      state.buttonId,\n      state.button,\n      state.panel,\n      internalButtonRef,\n      closeOthers,\n      isWithinPanel,\n    ]\n  )\n\n  let handleKeyUp = useCallback(\n    (event: ReactKeyboardEvent<HTMLButtonElement>) => {\n      if (isWithinPanel) return\n      if (event.key === Keys.Space) {\n        // Required for firefox, event.preventDefault() in handleKeyDown for\n        // the Space key doesn't cancel the handleKeyUp, which in turn\n        // triggers a *click*.\n        event.preventDefault()\n      }\n      if (state.popoverState !== PopoverStates.Open) return\n      if (!state.panel) return\n      if (!state.button) return\n\n      // TODO: Revisit when handling Tab/Shift+Tab when using Portal's\n      switch (event.key) {\n        case Keys.Tab:\n          // Check if the last focused element exists, and check that it is not inside button or panel itself\n          if (!previousActiveElementRef.current) return\n          if (state.button?.contains(previousActiveElementRef.current)) return\n          if (state.panel.contains(previousActiveElementRef.current)) return\n\n          // Check if the last focused element is *after* the button in the DOM\n          let focusableElements = getFocusableElements()\n          let previousIdx = focusableElements.indexOf(\n            previousActiveElementRef.current as HTMLElement\n          )\n          let buttonIdx = focusableElements.indexOf(state.button)\n          if (buttonIdx > previousIdx) return\n\n          event.preventDefault()\n          event.stopPropagation()\n          focusIn(state.panel, Focus.Last)\n          break\n      }\n    },\n    [state.popoverState, state.panel, state.button, isWithinPanel]\n  )\n\n  let handleClick = useCallback(\n    (event: ReactMouseEvent) => {\n      if (isDisabledReactIssue7711(event.currentTarget)) return\n      if (props.disabled) return\n      if (isWithinPanel) {\n        dispatch({ type: ActionTypes.ClosePopover })\n        state.button?.focus() // Re-focus the original opening Button\n      } else {\n        if (state.popoverState === PopoverStates.Closed) closeOthers?.(state.buttonId)\n        state.button?.focus()\n        dispatch({ type: ActionTypes.TogglePopover })\n      }\n    },\n    [\n      dispatch,\n      state.button,\n      state.popoverState,\n      state.buttonId,\n      props.disabled,\n      closeOthers,\n      isWithinPanel,\n    ]\n  )\n\n  let slot = useMemo<ButtonRenderPropArg>(\n    () => ({ open: state.popoverState === PopoverStates.Open }),\n    [state]\n  )\n\n  let passthroughProps = props\n  let propsWeControl = isWithinPanel\n    ? {\n        type: 'button',\n        onKeyDown: handleKeyDown,\n        onClick: handleClick,\n      }\n    : {\n        ref: buttonRef,\n        id: state.buttonId,\n        type: 'button',\n        'aria-expanded': state.popoverState === PopoverStates.Open ? true : undefined,\n        'aria-controls': state.panel ? state.panelId : undefined,\n        onKeyDown: handleKeyDown,\n        onKeyUp: handleKeyUp,\n        onClick: handleClick,\n      }\n\n  return render({\n    props: { ...passthroughProps, ...propsWeControl },\n    slot,\n    defaultTag: DEFAULT_BUTTON_TAG,\n    name: 'Popover.Button',\n  })\n})\n\n// ---\n\nlet DEFAULT_OVERLAY_TAG = 'div' as const\ninterface OverlayRenderPropArg {\n  open: boolean\n}\ntype OverlayPropsWeControl = 'id' | 'aria-hidden' | 'onClick'\n\nlet OverlayRenderFeatures = Features.RenderStrategy | Features.Static\n\nlet Overlay = forwardRefWithAs(function Overlay<\n  TTag extends ElementType = typeof DEFAULT_OVERLAY_TAG\n>(\n  props: Props<TTag, OverlayRenderPropArg, OverlayPropsWeControl> &\n    PropsForFeatures<typeof OverlayRenderFeatures>,\n  ref: Ref<HTMLDivElement>\n) {\n  let [{ popoverState }, dispatch] = usePopoverContext([Popover.name, Overlay.name].join('.'))\n  let overlayRef = useSyncRefs(ref)\n\n  let id = `headlessui-popover-overlay-${useId()}`\n\n  let handleClick = useCallback(\n    (event: ReactMouseEvent) => {\n      if (isDisabledReactIssue7711(event.currentTarget)) return event.preventDefault()\n      dispatch({ type: ActionTypes.ClosePopover })\n    },\n    [dispatch]\n  )\n\n  let slot = useMemo<OverlayRenderPropArg>(() => ({ open: popoverState === PopoverStates.Open }), [\n    popoverState,\n  ])\n  let propsWeControl = {\n    ref: overlayRef,\n    id,\n    'aria-hidden': true,\n    onClick: handleClick,\n  }\n  let passthroughProps = props\n\n  return render({\n    props: { ...passthroughProps, ...propsWeControl },\n    slot,\n    defaultTag: DEFAULT_OVERLAY_TAG,\n    features: OverlayRenderFeatures,\n    visible: popoverState === PopoverStates.Open,\n    name: 'Popover.Overlay',\n  })\n})\n\n// ---\n\nlet DEFAULT_PANEL_TAG = 'div' as const\ninterface PanelRenderPropArg {\n  open: boolean\n}\ntype PanelPropsWeControl = 'id' | 'onKeyDown'\n\nlet PanelRenderFeatures = Features.RenderStrategy | Features.Static\n\nlet Panel = forwardRefWithAs(function Panel<TTag extends ElementType = typeof DEFAULT_PANEL_TAG>(\n  props: Props<TTag, PanelRenderPropArg, PanelPropsWeControl> &\n    PropsForFeatures<typeof PanelRenderFeatures> & { focus?: boolean },\n  ref: Ref<HTMLDivElement>\n) {\n  let { focus = false, ...passthroughProps } = props\n\n  let [state, dispatch] = usePopoverContext([Popover.name, Panel.name].join('.'))\n  let internalPanelRef = useRef<HTMLDivElement | null>(null)\n  let panelRef = useSyncRefs(internalPanelRef, ref, panel => {\n    dispatch({ type: ActionTypes.SetPanel, panel })\n  })\n\n  let handleKeyDown = useCallback(\n    (event: KeyboardEvent) => {\n      switch (event.key) {\n        case Keys.Escape:\n          if (state.popoverState !== PopoverStates.Open) return\n          if (!internalPanelRef.current) return\n          if (!internalPanelRef.current.contains(document.activeElement)) return\n          event.preventDefault()\n          dispatch({ type: ActionTypes.ClosePopover })\n          state.button?.focus()\n          break\n      }\n    },\n    [state, internalPanelRef, dispatch]\n  )\n\n  // Unlink on \"unmount\" myself\n  useEffect(() => () => dispatch({ type: ActionTypes.SetPanel, panel: null }), [dispatch])\n\n  // Unlink on \"unmount\" children\n  useEffect(() => {\n    if (state.popoverState === PopoverStates.Closed && (props.unmount ?? true)) {\n      dispatch({ type: ActionTypes.SetPanel, panel: null })\n    }\n  }, [state.popoverState, props.unmount, dispatch])\n\n  // Move focus within panel\n  useEffect(() => {\n    if (!focus) return\n    if (state.popoverState !== PopoverStates.Open) return\n    if (!internalPanelRef.current) return\n\n    let activeElement = document.activeElement as HTMLElement\n    if (internalPanelRef.current.contains(activeElement)) return // Already focused within Dialog\n\n    focusIn(internalPanelRef.current, Focus.First)\n  }, [focus, internalPanelRef, state.popoverState])\n\n  // Handle Tab / Shift+Tab focus positioning\n  useWindowEvent('keydown', event => {\n    if (state.popoverState !== PopoverStates.Open) return\n    if (!internalPanelRef.current) return\n    if (event.key !== Keys.Tab) return\n    if (!document.activeElement) return\n    if (!internalPanelRef.current) return\n    if (!internalPanelRef.current.contains(document.activeElement)) return\n\n    // We will take-over the default tab behaviour so that we have a bit\n    // control over what is focused next. It will behave exactly the same,\n    // but it will also \"fix\" some issues based on whether you are using a\n    // Portal or not.\n    event.preventDefault()\n\n    let result = focusIn(internalPanelRef.current, event.shiftKey ? Focus.Previous : Focus.Next)\n\n    if (result === FocusResult.Underflow) {\n      return state.button?.focus()\n    } else if (result === FocusResult.Overflow) {\n      if (!state.button) return\n\n      let elements = getFocusableElements()\n      let buttonIdx = elements.indexOf(state.button)\n\n      let nextElements = elements\n        .splice(buttonIdx + 1) // Elements after button\n        .filter(element => !internalPanelRef.current?.contains(element)) // Ignore items in panel\n\n      // Try to focus the next element, however it could fail if we are in a\n      // Portal that happens to be the very last one in the DOM. In that\n      // case we would Error (because nothing after the button is\n      // focusable). Therefore we will try and focus the very first item in\n      // the document.body.\n      if (focusIn(nextElements, Focus.First) === FocusResult.Error) {\n        focusIn(document.body, Focus.First)\n      }\n    }\n  })\n\n  // Handle focus out when we are in special \"focus\" mode\n  useWindowEvent(\n    'focus',\n    () => {\n      if (!focus) return\n      if (state.popoverState !== PopoverStates.Open) return\n      if (!internalPanelRef.current) return\n\n      if (internalPanelRef.current?.contains(document.activeElement as HTMLElement)) return\n      dispatch({ type: ActionTypes.ClosePopover })\n    },\n    true\n  )\n\n  let slot = useMemo<PanelRenderPropArg>(\n    () => ({ open: state.popoverState === PopoverStates.Open }),\n    [state]\n  )\n  let propsWeControl = {\n    ref: panelRef,\n    id: state.panelId,\n    onKeyDown: handleKeyDown,\n  }\n\n  return (\n    <PopoverPanelContext.Provider value={state.panelId}>\n      {render({\n        props: { ...passthroughProps, ...propsWeControl },\n        slot,\n        defaultTag: DEFAULT_PANEL_TAG,\n        features: PanelRenderFeatures,\n        visible: state.popoverState === PopoverStates.Open,\n        name: 'Popover.Panel',\n      })}\n    </PopoverPanelContext.Provider>\n  )\n})\n\n// ---\n\nlet DEFAULT_GROUP_TAG = 'div' as const\ninterface GroupRenderPropArg {}\ntype GroupPropsWeControl = 'id'\n\nfunction Group<TTag extends ElementType = typeof DEFAULT_PANEL_TAG>(\n  props: Props<TTag, GroupRenderPropArg, GroupPropsWeControl>\n) {\n  let groupRef = useRef<HTMLElement | null>(null)\n  let [popovers, setPopovers] = useState<PopoverRegisterBag[]>([])\n\n  let unregisterPopover = useCallback(\n    (registerbag: PopoverRegisterBag) => {\n      setPopovers(existing => {\n        let idx = existing.indexOf(registerbag)\n        if (idx !== -1) {\n          let clone = existing.slice()\n          clone.splice(idx, 1)\n          return clone\n        }\n        return existing\n      })\n    },\n    [setPopovers]\n  )\n\n  let registerPopover = useCallback(\n    (registerbag: PopoverRegisterBag) => {\n      setPopovers(existing => [...existing, registerbag])\n      return () => unregisterPopover(registerbag)\n    },\n    [setPopovers, unregisterPopover]\n  )\n\n  let isFocusWithinPopoverGroup = useCallback(() => {\n    let element = document.activeElement as HTMLElement\n\n    if (groupRef.current?.contains(element)) return true\n\n    // Check if the focus is in one of the button or panel elements. This is important in case you are rendering inside a Portal.\n    return popovers.some(bag => {\n      return (\n        document.getElementById(bag.buttonId)?.contains(element) ||\n        document.getElementById(bag.panelId)?.contains(element)\n      )\n    })\n  }, [groupRef, popovers])\n\n  let closeOthers = useCallback(\n    (buttonId: string) => {\n      for (let popover of popovers) {\n        if (popover.buttonId !== buttonId) popover.close()\n      }\n    },\n    [popovers]\n  )\n\n  let contextBag = useMemo<ContextType<typeof PopoverGroupContext>>(\n    () => ({\n      registerPopover: registerPopover,\n      unregisterPopover: unregisterPopover,\n      isFocusWithinPopoverGroup,\n      closeOthers,\n    }),\n    [registerPopover, unregisterPopover, isFocusWithinPopoverGroup, closeOthers]\n  )\n\n  let slot = useMemo<GroupRenderPropArg>(() => ({}), [])\n  let propsWeControl = { ref: groupRef }\n  let passthroughProps = props\n\n  return (\n    <PopoverGroupContext.Provider value={contextBag}>\n      {render({\n        props: { ...passthroughProps, ...propsWeControl },\n        slot,\n        defaultTag: DEFAULT_GROUP_TAG,\n        name: 'Popover.Group',\n      })}\n    </PopoverGroupContext.Provider>\n  )\n}\n\n// ---\n\nPopover.Button = Button\nPopover.Overlay = Overlay\nPopover.Panel = Panel\nPopover.Group = Group\n","import { useState, useCallback } from 'react'\n\nexport function useFlags(initialFlags = 0) {\n  let [flags, setFlags] = useState(initialFlags)\n\n  let addFlag = useCallback((flag: number) => setFlags(flags => flags | flag), [setFlags])\n  let hasFlag = useCallback((flag: number) => Boolean(flags & flag), [flags])\n  let removeFlag = useCallback((flag: number) => setFlags(flags => flags & ~flag), [setFlags])\n  let toggleFlag = useCallback((flag: number) => setFlags(flags => flags ^ flag), [setFlags])\n\n  return { addFlag, hasFlag, removeFlag, toggleFlag }\n}\n","import React, {\n  createContext,\n  useCallback,\n  useContext,\n  useMemo,\n  useState,\n\n  // Types\n  ElementType,\n  ReactNode,\n} from 'react'\n\nimport { Props } from '../../types'\nimport { useId } from '../../hooks/use-id'\nimport { render } from '../../utils/render'\nimport { useIsoMorphicEffect } from '../../hooks/use-iso-morphic-effect'\n\n// ---\n\ninterface SharedData {\n  slot?: {}\n  name?: string\n  props?: {}\n}\n\nlet LabelContext = createContext<({ register(value: string): () => void } & SharedData) | null>(\n  null\n)\n\nfunction useLabelContext() {\n  let context = useContext(LabelContext)\n  if (context === null) {\n    let err = new Error('You used a <Label /> component, but it is not inside a relevant parent.')\n    if (Error.captureStackTrace) Error.captureStackTrace(err, useLabelContext)\n    throw err\n  }\n  return context\n}\n\ninterface LabelProviderProps extends SharedData {\n  children: ReactNode\n}\n\nexport function useLabels(): [string | undefined, (props: LabelProviderProps) => JSX.Element] {\n  let [labelIds, setLabelIds] = useState<string[]>([])\n\n  return [\n    // The actual id's as string or undefined.\n    labelIds.length > 0 ? labelIds.join(' ') : undefined,\n\n    // The provider component\n    useMemo(() => {\n      return function LabelProvider(props: LabelProviderProps) {\n        let register = useCallback((value: string) => {\n          setLabelIds(existing => [...existing, value])\n\n          return () =>\n            setLabelIds(existing => {\n              let clone = existing.slice()\n              let idx = clone.indexOf(value)\n              if (idx !== -1) clone.splice(idx, 1)\n              return clone\n            })\n        }, [])\n\n        let contextBag = useMemo(\n          () => ({ register, slot: props.slot, name: props.name, props: props.props }),\n          [register, props.slot, props.name, props.props]\n        )\n\n        return <LabelContext.Provider value={contextBag}>{props.children}</LabelContext.Provider>\n      }\n    }, [setLabelIds]),\n  ]\n}\n\n// ---\n\nlet DEFAULT_LABEL_TAG = 'label' as const\ninterface LabelRenderPropArg {}\ntype LabelPropsWeControl = 'id'\n\nexport function Label<TTag extends ElementType = typeof DEFAULT_LABEL_TAG>(\n  props: Props<TTag, LabelRenderPropArg, LabelPropsWeControl> & {\n    passive?: boolean\n  }\n) {\n  let { passive = false, ...passThroughProps } = props\n  let context = useLabelContext()\n  let id = `headlessui-label-${useId()}`\n\n  useIsoMorphicEffect(() => context.register(id), [id, context.register])\n\n  let propsWeControl = { ...context.props, id }\n\n  let allProps = { ...passThroughProps, ...propsWeControl }\n  // @ts-expect-error props are dynamic via context, some components will\n  //                  provide an onClick then we can delete it.\n  if (passive) delete allProps['onClick']\n\n  return render({\n    props: allProps,\n    slot: context.slot || {},\n    defaultTag: DEFAULT_LABEL_TAG,\n    name: context.name || 'Label',\n  })\n}\n","import React, {\n  createContext,\n  useCallback,\n  useContext,\n  useMemo,\n  useReducer,\n  useRef,\n\n  // Types\n  ElementType,\n  MutableRefObject,\n  KeyboardEvent as ReactKeyboardEvent,\n  ContextType,\n} from 'react'\n\nimport { Props, Expand } from '../../types'\nimport { render } from '../../utils/render'\nimport { useId } from '../../hooks/use-id'\nimport { match } from '../../utils/match'\nimport { useIsoMorphicEffect } from '../../hooks/use-iso-morphic-effect'\nimport { Keys } from '../../components/keyboard'\nimport { focusIn, Focus, FocusResult } from '../../utils/focus-management'\nimport { useFlags } from '../../hooks/use-flags'\nimport { Label, useLabels } from '../../components/label/label'\nimport { Description, useDescriptions } from '../../components/description/description'\nimport { useTreeWalker } from '../../hooks/use-tree-walker'\n\ninterface Option {\n  id: string\n  element: MutableRefObject<HTMLElement | null>\n  propsRef: MutableRefObject<{ value: unknown; disabled: boolean }>\n}\n\ninterface StateDefinition {\n  options: Option[]\n}\n\nenum ActionTypes {\n  RegisterOption,\n  UnregisterOption,\n}\n\ntype Actions =\n  | Expand<{ type: ActionTypes.RegisterOption } & Option>\n  | { type: ActionTypes.UnregisterOption; id: Option['id'] }\n\nlet reducers: {\n  [P in ActionTypes]: (\n    state: StateDefinition,\n    action: Extract<Actions, { type: P }>\n  ) => StateDefinition\n} = {\n  [ActionTypes.RegisterOption](state, action) {\n    return {\n      ...state,\n      options: [\n        ...state.options,\n        { id: action.id, element: action.element, propsRef: action.propsRef },\n      ],\n    }\n  },\n  [ActionTypes.UnregisterOption](state, action) {\n    let options = state.options.slice()\n    let idx = state.options.findIndex(radio => radio.id === action.id)\n    if (idx === -1) return state\n    options.splice(idx, 1)\n    return { ...state, options }\n  },\n}\n\nlet RadioGroupContext = createContext<{\n  registerOption(option: Option): () => void\n  change(value: unknown): boolean\n  value: unknown\n  firstOption?: Option\n  containsCheckedOption: boolean\n  disabled: boolean\n} | null>(null)\nRadioGroupContext.displayName = 'RadioGroupContext'\n\nfunction useRadioGroupContext(component: string) {\n  let context = useContext(RadioGroupContext)\n  if (context === null) {\n    let err = new Error(`<${component} /> is missing a parent <${RadioGroup.name} /> component.`)\n    if (Error.captureStackTrace) Error.captureStackTrace(err, useRadioGroupContext)\n    throw err\n  }\n  return context\n}\n\nfunction stateReducer(state: StateDefinition, action: Actions) {\n  return match(action.type, reducers, state, action)\n}\n\n// ---\n\nlet DEFAULT_RADIO_GROUP_TAG = 'div' as const\ninterface RadioGroupRenderPropArg {}\ntype RadioGroupPropsWeControl = 'role' | 'aria-labelledby' | 'aria-describedby' | 'id'\n\nexport function RadioGroup<\n  TTag extends ElementType = typeof DEFAULT_RADIO_GROUP_TAG,\n  TType = string\n>(\n  props: Props<\n    TTag,\n    RadioGroupRenderPropArg,\n    RadioGroupPropsWeControl | 'value' | 'onChange' | 'disabled'\n  > & {\n    value: TType\n    onChange(value: TType): void\n    disabled?: boolean\n  }\n) {\n  let { value, onChange, disabled = false, ...passThroughProps } = props\n  let [{ options }, dispatch] = useReducer(stateReducer, {\n    options: [],\n  } as StateDefinition)\n  let [labelledby, LabelProvider] = useLabels()\n  let [describedby, DescriptionProvider] = useDescriptions()\n  let id = `headlessui-radiogroup-${useId()}`\n  let radioGroupRef = useRef<HTMLElement | null>(null)\n\n  let firstOption = useMemo(\n    () =>\n      options.find(option => {\n        if (option.propsRef.current.disabled) return false\n        return true\n      }),\n    [options]\n  )\n  let containsCheckedOption = useMemo(\n    () => options.some(option => option.propsRef.current.value === value),\n    [options, value]\n  )\n\n  let triggerChange = useCallback(\n    nextValue => {\n      if (disabled) return false\n      if (nextValue === value) return false\n      let nextOption = options.find(option => option.propsRef.current.value === nextValue)?.propsRef\n        .current\n      if (nextOption?.disabled) return false\n\n      onChange(nextValue)\n      return true\n    },\n    [onChange, value, disabled, options]\n  )\n\n  useTreeWalker({\n    container: radioGroupRef.current,\n    accept(node) {\n      if (node.getAttribute('role') === 'radio') return NodeFilter.FILTER_REJECT\n      if (node.hasAttribute('role')) return NodeFilter.FILTER_SKIP\n      return NodeFilter.FILTER_ACCEPT\n    },\n    walk(node) {\n      node.setAttribute('role', 'none')\n    },\n  })\n\n  let handleKeyDown = useCallback(\n    (event: ReactKeyboardEvent<HTMLButtonElement>) => {\n      let container = radioGroupRef.current\n      if (!container) return\n\n      let all = options\n        .filter(option => option.propsRef.current.disabled === false)\n        .map(radio => radio.element.current) as HTMLElement[]\n\n      switch (event.key) {\n        case Keys.ArrowLeft:\n        case Keys.ArrowUp:\n          {\n            event.preventDefault()\n            event.stopPropagation()\n\n            let result = focusIn(all, Focus.Previous | Focus.WrapAround)\n\n            if (result === FocusResult.Success) {\n              let activeOption = options.find(\n                option => option.element.current === document.activeElement\n              )\n              if (activeOption) triggerChange(activeOption.propsRef.current.value)\n            }\n          }\n          break\n\n        case Keys.ArrowRight:\n        case Keys.ArrowDown:\n          {\n            event.preventDefault()\n            event.stopPropagation()\n\n            let result = focusIn(all, Focus.Next | Focus.WrapAround)\n\n            if (result === FocusResult.Success) {\n              let activeOption = options.find(\n                option => option.element.current === document.activeElement\n              )\n              if (activeOption) triggerChange(activeOption.propsRef.current.value)\n            }\n          }\n          break\n\n        case Keys.Space:\n          {\n            event.preventDefault()\n            event.stopPropagation()\n\n            let activeOption = options.find(\n              option => option.element.current === document.activeElement\n            )\n            if (activeOption) triggerChange(activeOption.propsRef.current.value)\n          }\n          break\n      }\n    },\n    [radioGroupRef, options, triggerChange]\n  )\n\n  let registerOption = useCallback(\n    (option: Option) => {\n      dispatch({ type: ActionTypes.RegisterOption, ...option })\n      return () => dispatch({ type: ActionTypes.UnregisterOption, id: option.id })\n    },\n    [dispatch]\n  )\n\n  let api = useMemo<ContextType<typeof RadioGroupContext>>(\n    () => ({\n      registerOption,\n      firstOption,\n      containsCheckedOption,\n      change: triggerChange,\n      disabled,\n      value,\n    }),\n    [registerOption, firstOption, containsCheckedOption, triggerChange, disabled, value]\n  )\n\n  let propsWeControl = {\n    ref: radioGroupRef,\n    id,\n    role: 'radiogroup',\n    'aria-labelledby': labelledby,\n    'aria-describedby': describedby,\n    onKeyDown: handleKeyDown,\n  }\n\n  return (\n    <DescriptionProvider name=\"RadioGroup.Description\">\n      <LabelProvider name=\"RadioGroup.Label\">\n        <RadioGroupContext.Provider value={api}>\n          {render({\n            props: { ...passThroughProps, ...propsWeControl },\n            defaultTag: DEFAULT_RADIO_GROUP_TAG,\n            name: 'RadioGroup',\n          })}\n        </RadioGroupContext.Provider>\n      </LabelProvider>\n    </DescriptionProvider>\n  )\n}\n\n// ---\n\nenum OptionState {\n  Empty = 1 << 0,\n  Active = 1 << 1,\n}\n\nlet DEFAULT_OPTION_TAG = 'div' as const\ninterface OptionRenderPropArg {\n  checked: boolean\n  active: boolean\n  disabled: boolean\n}\ntype RadioPropsWeControl =\n  | 'aria-checked'\n  | 'id'\n  | 'onBlur'\n  | 'onClick'\n  | 'onFocus'\n  | 'ref'\n  | 'role'\n  | 'tabIndex'\n\nfunction Option<\n  TTag extends ElementType = typeof DEFAULT_OPTION_TAG,\n  // TODO: One day we will be able to infer this type from the generic in RadioGroup itself.\n  // But today is not that day..\n  TType = Parameters<typeof RadioGroup>[0]['value']\n>(\n  props: Props<TTag, OptionRenderPropArg, RadioPropsWeControl | 'value' | 'disabled'> & {\n    value: TType\n    disabled?: boolean\n  }\n) {\n  let optionRef = useRef<HTMLElement | null>(null)\n  let id = `headlessui-radiogroup-option-${useId()}`\n\n  let [labelledby, LabelProvider] = useLabels()\n  let [describedby, DescriptionProvider] = useDescriptions()\n  let { addFlag, removeFlag, hasFlag } = useFlags(OptionState.Empty)\n\n  let { value, disabled = false, ...passThroughProps } = props\n  let propsRef = useRef({ value, disabled })\n\n  useIsoMorphicEffect(() => {\n    propsRef.current.value = value\n  }, [value, propsRef])\n  useIsoMorphicEffect(() => {\n    propsRef.current.disabled = disabled\n  }, [disabled, propsRef])\n\n  let {\n    registerOption,\n    disabled: radioGroupDisabled,\n    change,\n    firstOption,\n    containsCheckedOption,\n    value: radioGroupValue,\n  } = useRadioGroupContext([RadioGroup.name, Option.name].join('.'))\n\n  useIsoMorphicEffect(() => registerOption({ id, element: optionRef, propsRef }), [\n    id,\n    registerOption,\n    optionRef,\n    props,\n  ])\n\n  let handleClick = useCallback(() => {\n    if (!change(value)) return\n\n    addFlag(OptionState.Active)\n    optionRef.current?.focus()\n  }, [addFlag, change, value])\n\n  let handleFocus = useCallback(() => addFlag(OptionState.Active), [addFlag])\n  let handleBlur = useCallback(() => removeFlag(OptionState.Active), [removeFlag])\n\n  let isFirstOption = firstOption?.id === id\n  let isDisabled = radioGroupDisabled || disabled\n\n  let checked = radioGroupValue === value\n  let propsWeControl = {\n    ref: optionRef,\n    id,\n    role: 'radio',\n    'aria-checked': checked ? 'true' : 'false',\n    'aria-labelledby': labelledby,\n    'aria-describedby': describedby,\n    tabIndex: (() => {\n      if (isDisabled) return -1\n      if (checked) return 0\n      if (!containsCheckedOption && isFirstOption) return 0\n      return -1\n    })(),\n    onClick: isDisabled ? undefined : handleClick,\n    onFocus: isDisabled ? undefined : handleFocus,\n    onBlur: isDisabled ? undefined : handleBlur,\n  }\n  let slot = useMemo<OptionRenderPropArg>(\n    () => ({ checked, disabled: isDisabled, active: hasFlag(OptionState.Active) }),\n    [checked, isDisabled, hasFlag]\n  )\n\n  return (\n    <DescriptionProvider name=\"RadioGroup.Description\">\n      <LabelProvider name=\"RadioGroup.Label\">\n        {render({\n          props: { ...passThroughProps, ...propsWeControl },\n          slot,\n          defaultTag: DEFAULT_OPTION_TAG,\n          name: 'RadioGroup.Option',\n        })}\n      </LabelProvider>\n    </DescriptionProvider>\n  )\n}\n\n// ---\n\nRadioGroup.Option = Option\nRadioGroup.Label = Label\nRadioGroup.Description = Description\n","import React, {\n  Fragment,\n  createContext,\n  useCallback,\n  useContext,\n  useMemo,\n  useState,\n\n  // Types\n  ElementType,\n  KeyboardEvent as ReactKeyboardEvent,\n  MouseEvent as ReactMouseEvent,\n} from 'react'\n\nimport { Props } from '../../types'\nimport { render } from '../../utils/render'\nimport { useId } from '../../hooks/use-id'\nimport { Keys } from '../keyboard'\nimport { isDisabledReactIssue7711 } from '../../utils/bugs'\nimport { Label, useLabels } from '../label/label'\nimport { Description, useDescriptions } from '../description/description'\n\ninterface StateDefinition {\n  switch: HTMLButtonElement | null\n  setSwitch(element: HTMLButtonElement): void\n  labelledby: string | undefined\n  describedby: string | undefined\n}\n\nlet GroupContext = createContext<StateDefinition | null>(null)\nGroupContext.displayName = 'GroupContext'\n\n// ---\n\nlet DEFAULT_GROUP_TAG = Fragment\n\nfunction Group<TTag extends ElementType = typeof DEFAULT_GROUP_TAG>(props: Props<TTag>) {\n  let [switchElement, setSwitchElement] = useState<HTMLButtonElement | null>(null)\n  let [labelledby, LabelProvider] = useLabels()\n  let [describedby, DescriptionProvider] = useDescriptions()\n\n  let context = useMemo<StateDefinition>(\n    () => ({ switch: switchElement, setSwitch: setSwitchElement, labelledby, describedby }),\n    [switchElement, setSwitchElement, labelledby, describedby]\n  )\n\n  return (\n    <DescriptionProvider name=\"Switch.Description\">\n      <LabelProvider\n        name=\"Switch.Label\"\n        props={{\n          onClick() {\n            if (!switchElement) return\n            switchElement.click()\n            switchElement.focus({ preventScroll: true })\n          },\n        }}\n      >\n        <GroupContext.Provider value={context}>\n          {render({ props, defaultTag: DEFAULT_GROUP_TAG, name: 'Switch.Group' })}\n        </GroupContext.Provider>\n      </LabelProvider>\n    </DescriptionProvider>\n  )\n}\n\n// ---\n\nlet DEFAULT_SWITCH_TAG = 'button' as const\ninterface SwitchRenderPropArg {\n  checked: boolean\n}\ntype SwitchPropsWeControl =\n  | 'id'\n  | 'role'\n  | 'tabIndex'\n  | 'aria-checked'\n  | 'aria-labelledby'\n  | 'aria-describedby'\n  | 'onClick'\n  | 'onKeyUp'\n  | 'onKeyPress'\n\nexport function Switch<TTag extends ElementType = typeof DEFAULT_SWITCH_TAG>(\n  props: Props<TTag, SwitchRenderPropArg, SwitchPropsWeControl | 'checked' | 'onChange'> & {\n    checked: boolean\n    onChange(checked: boolean): void\n  }\n) {\n  let { checked, onChange, ...passThroughProps } = props\n  let id = `headlessui-switch-${useId()}`\n  let groupContext = useContext(GroupContext)\n\n  let toggle = useCallback(() => onChange(!checked), [onChange, checked])\n  let handleClick = useCallback(\n    (event: ReactMouseEvent) => {\n      if (isDisabledReactIssue7711(event.currentTarget)) return event.preventDefault()\n      event.preventDefault()\n      toggle()\n    },\n    [toggle]\n  )\n  let handleKeyUp = useCallback(\n    (event: ReactKeyboardEvent<HTMLElement>) => {\n      if (event.key !== Keys.Tab) event.preventDefault()\n      if (event.key === Keys.Space) toggle()\n    },\n    [toggle]\n  )\n\n  // This is needed so that we can \"cancel\" the click event when we use the `Enter` key on a button.\n  let handleKeyPress = useCallback(\n    (event: ReactKeyboardEvent<HTMLElement>) => event.preventDefault(),\n    []\n  )\n\n  let slot = useMemo<SwitchRenderPropArg>(() => ({ checked }), [checked])\n  let propsWeControl = {\n    id,\n    ref: groupContext === null ? undefined : groupContext.setSwitch,\n    role: 'switch',\n    tabIndex: 0,\n    'aria-checked': checked,\n    'aria-labelledby': groupContext?.labelledby,\n    'aria-describedby': groupContext?.describedby,\n    onClick: handleClick,\n    onKeyUp: handleKeyUp,\n    onKeyPress: handleKeyPress,\n  }\n\n  if (passThroughProps.as === 'button') {\n    Object.assign(propsWeControl, { type: 'button' })\n  }\n\n  return render({\n    props: { ...passThroughProps, ...propsWeControl },\n    slot,\n    defaultTag: DEFAULT_SWITCH_TAG,\n    name: 'Switch',\n  })\n}\n\n// ---\n\nSwitch.Group = Group\nSwitch.Label = Label\nSwitch.Description = Description\n","import { useRef, useEffect } from 'react'\n\nexport function useIsInitialRender() {\n  let initial = useRef(true)\n\n  useEffect(() => {\n    initial.current = false\n  }, [])\n\n  return initial.current\n}\n","import { useRef, useEffect } from 'react'\n\nexport function useIsMounted() {\n  let mounted = useRef(true)\n\n  useEffect(() => {\n    return () => {\n      mounted.current = false\n    }\n  }, [])\n\n  return mounted\n}\n","export function once<T>(cb: (...args: T[]) => void) {\n  let state = { called: false }\n\n  return (...args: T[]) => {\n    if (state.called) return\n    state.called = true\n    return cb(...args)\n  }\n}\n","import { once } from '../../../utils/once'\nimport { disposables } from '../../../utils/disposables'\n\nfunction addClasses(node: HTMLElement, ...classes: string[]) {\n  node && classes.length > 0 && node.classList.add(...classes)\n}\n\nfunction removeClasses(node: HTMLElement, ...classes: string[]) {\n  node && classes.length > 0 && node.classList.remove(...classes)\n}\n\nexport enum Reason {\n  Finished = 'finished',\n  Cancelled = 'cancelled',\n}\n\nfunction waitForTransition(node: HTMLElement, done: (reason: Reason) => void) {\n  let d = disposables()\n\n  if (!node) return d.dispose\n\n  // Safari returns a comma separated list of values, so let's sort them and take the highest value.\n  let { transitionDuration, transitionDelay } = getComputedStyle(node)\n\n  let [durationMs, delaysMs] = [transitionDuration, transitionDelay].map(value => {\n    let [resolvedValue = 0] = value\n      .split(',')\n      // Remove falsy we can't work with\n      .filter(Boolean)\n      // Values are returned as `0.3s` or `75ms`\n      .map(v => (v.includes('ms') ? parseFloat(v) : parseFloat(v) * 1000))\n      .sort((a, z) => z - a)\n\n    return resolvedValue\n  })\n\n  // Waiting for the transition to end. We could use the `transitionend` event, however when no\n  // actual transition/duration is defined then the `transitionend` event is not fired.\n  //\n  // TODO: Downside is, when you slow down transitions via devtools this timeout is still using the\n  // full 100% speed instead of the 25% or 10%.\n  if (durationMs !== 0) {\n    d.setTimeout(() => {\n      done(Reason.Finished)\n    }, durationMs + delaysMs)\n  } else {\n    // No transition is happening, so we should cleanup already. Otherwise we have to wait until we\n    // get disposed.\n    done(Reason.Finished)\n  }\n\n  // If we get disposed before the timeout runs we should cleanup anyway\n  d.add(() => done(Reason.Cancelled))\n\n  return d.dispose\n}\n\nexport function transition(\n  node: HTMLElement,\n  base: string[],\n  from: string[],\n  to: string[],\n  done?: (reason: Reason) => void\n) {\n  let d = disposables()\n  let _done = done !== undefined ? once(done) : () => {}\n\n  addClasses(node, ...base, ...from)\n\n  d.nextFrame(() => {\n    removeClasses(node, ...from)\n    addClasses(node, ...to)\n\n    d.add(\n      waitForTransition(node, reason => {\n        removeClasses(node, ...to, ...base)\n        return _done(reason)\n      })\n    )\n  })\n\n  // Once we get disposed, we should ensure that we cleanup after ourselves. In case of an unmount,\n  // the node itself will be nullified and will be a no-op. In case of a full transition the classes\n  // are already removed which is also a no-op. However if you go from enter -> leave mid-transition\n  // then we have some leftovers that should be cleaned.\n  d.add(() => removeClasses(node, ...base, ...from, ...to))\n\n  // When we get disposed early, than we should also call the done method but switch the reason.\n  d.add(() => _done(Reason.Cancelled))\n\n  return d.dispose\n}\n","import React, {\n  Fragment,\n  createContext,\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n\n  // Types\n  ElementType,\n  MutableRefObject,\n} from 'react'\nimport { Props } from '../../types'\n\nimport { useId } from '../../hooks/use-id'\nimport { useIsInitialRender } from '../../hooks/use-is-initial-render'\nimport { match } from '../../utils/match'\nimport { useIsMounted } from '../../hooks/use-is-mounted'\nimport { useIsoMorphicEffect } from '../../hooks/use-iso-morphic-effect'\n\nimport { Features, PropsForFeatures, render, RenderStrategy } from '../../utils/render'\nimport { Reason, transition } from './utils/transition'\n\ntype ID = ReturnType<typeof useId>\n\nfunction useSplitClasses(classes: string = '') {\n  return useMemo(() => classes.split(' ').filter(className => className.trim().length > 1), [\n    classes,\n  ])\n}\n\ninterface TransitionContextValues {\n  show: boolean\n  appear: boolean\n}\nlet TransitionContext = createContext<TransitionContextValues | null>(null)\nTransitionContext.displayName = 'TransitionContext'\n\nenum TreeStates {\n  Visible = 'visible',\n  Hidden = 'hidden',\n}\n\nexport interface TransitionClasses {\n  enter?: string\n  enterFrom?: string\n  enterTo?: string\n  leave?: string\n  leaveFrom?: string\n  leaveTo?: string\n}\n\nexport interface TransitionEvents {\n  beforeEnter?: () => void\n  afterEnter?: () => void\n  beforeLeave?: () => void\n  afterLeave?: () => void\n}\n\ntype TransitionChildProps<TTag> = Props<TTag, TransitionChildRenderPropArg> &\n  PropsForFeatures<typeof TransitionChildRenderFeatures> &\n  TransitionClasses &\n  TransitionEvents & { appear?: boolean }\n\nfunction useTransitionContext() {\n  let context = useContext(TransitionContext)\n\n  if (context === null) {\n    throw new Error(\n      'A <Transition.Child /> is used but it is missing a parent <Transition /> or <Transition.Root />.'\n    )\n  }\n\n  return context\n}\n\nfunction useParentNesting() {\n  let context = useContext(NestingContext)\n\n  if (context === null) {\n    throw new Error(\n      'A <Transition.Child /> is used but it is missing a parent <Transition /> or <Transition.Root />.'\n    )\n  }\n\n  return context\n}\n\ninterface NestingContextValues {\n  children: MutableRefObject<{ id: ID; state: TreeStates }[]>\n  register: (id: ID) => () => void\n  unregister: (id: ID, strategy?: RenderStrategy) => void\n}\n\nlet NestingContext = createContext<NestingContextValues | null>(null)\nNestingContext.displayName = 'NestingContext'\n\nfunction hasChildren(\n  bag: NestingContextValues['children'] | { children: NestingContextValues['children'] }\n): boolean {\n  if ('children' in bag) return hasChildren(bag.children)\n  return bag.current.filter(({ state }) => state === TreeStates.Visible).length > 0\n}\n\nfunction useNesting(done?: () => void) {\n  let doneRef = useRef(done)\n  let transitionableChildren = useRef<NestingContextValues['children']['current']>([])\n  let mounted = useIsMounted()\n\n  useEffect(() => {\n    doneRef.current = done\n  }, [done])\n\n  let unregister = useCallback(\n    (childId: ID, strategy = RenderStrategy.Hidden) => {\n      let idx = transitionableChildren.current.findIndex(({ id }) => id === childId)\n      if (idx === -1) return\n\n      match(strategy, {\n        [RenderStrategy.Unmount]() {\n          transitionableChildren.current.splice(idx, 1)\n        },\n        [RenderStrategy.Hidden]() {\n          transitionableChildren.current[idx].state = TreeStates.Hidden\n        },\n      })\n\n      if (!hasChildren(transitionableChildren) && mounted.current) {\n        doneRef.current?.()\n      }\n    },\n    [doneRef, mounted, transitionableChildren]\n  )\n\n  let register = useCallback(\n    (childId: ID) => {\n      let child = transitionableChildren.current.find(({ id }) => id === childId)\n      if (!child) {\n        transitionableChildren.current.push({ id: childId, state: TreeStates.Visible })\n      } else if (child.state !== TreeStates.Visible) {\n        child.state = TreeStates.Visible\n      }\n\n      return () => unregister(childId, RenderStrategy.Unmount)\n    },\n    [transitionableChildren, unregister]\n  )\n\n  return useMemo(\n    () => ({\n      children: transitionableChildren,\n      register,\n      unregister,\n    }),\n    [register, unregister, transitionableChildren]\n  )\n}\n\nfunction noop() {}\nlet eventNames = ['beforeEnter', 'afterEnter', 'beforeLeave', 'afterLeave'] as const\nfunction ensureEventHooksExist(events: TransitionEvents) {\n  let result = {} as Record<keyof typeof events, () => void>\n  for (let name of eventNames) {\n    result[name] = events[name] ?? noop\n  }\n  return result\n}\n\nfunction useEvents(events: TransitionEvents) {\n  let eventsRef = useRef(ensureEventHooksExist(events))\n\n  useEffect(() => {\n    eventsRef.current = ensureEventHooksExist(events)\n  }, [events])\n\n  return eventsRef\n}\n\n// ---\n\nlet DEFAULT_TRANSITION_CHILD_TAG = 'div' as const\ntype TransitionChildRenderPropArg = MutableRefObject<HTMLDivElement>\nlet TransitionChildRenderFeatures = Features.RenderStrategy\n\nfunction TransitionChild<TTag extends ElementType = typeof DEFAULT_TRANSITION_CHILD_TAG>(\n  props: TransitionChildProps<TTag>\n) {\n  let {\n    // Event \"handlers\"\n    beforeEnter,\n    afterEnter,\n    beforeLeave,\n    afterLeave,\n\n    // Class names\n    enter,\n    enterFrom,\n    enterTo,\n    leave,\n    leaveFrom,\n    leaveTo,\n\n    // @ts-expect-error\n    ...rest\n  } = props as typeof props\n  let container = useRef<HTMLElement | null>(null)\n  let [state, setState] = useState(TreeStates.Visible)\n  let strategy = rest.unmount ? RenderStrategy.Unmount : RenderStrategy.Hidden\n\n  let { show, appear } = useTransitionContext()\n  let { register, unregister } = useParentNesting()\n\n  let initial = useIsInitialRender()\n  let id = useId()\n\n  let isTransitioning = useRef(false)\n\n  let nesting = useNesting(() => {\n    // When all children have been unmounted we can only hide ourselves if and only if we are not\n    // transitioning ourselves. Otherwise we would unmount before the transitions are finished.\n    if (!isTransitioning.current) {\n      setState(TreeStates.Hidden)\n      unregister(id)\n      events.current.afterLeave()\n    }\n  })\n\n  useIsoMorphicEffect(() => {\n    if (!id) return\n    return register(id)\n  }, [register, id])\n\n  useIsoMorphicEffect(() => {\n    // If we are in another mode than the Hidden mode then ignore\n    if (strategy !== RenderStrategy.Hidden) return\n    if (!id) return\n\n    // Make sure that we are visible\n    if (show && state !== TreeStates.Visible) {\n      setState(TreeStates.Visible)\n      return\n    }\n\n    match(state, {\n      [TreeStates.Hidden]: () => unregister(id),\n      [TreeStates.Visible]: () => register(id),\n    })\n  }, [state, id, register, unregister, show, strategy])\n\n  let enterClasses = useSplitClasses(enter)\n  let enterFromClasses = useSplitClasses(enterFrom)\n  let enterToClasses = useSplitClasses(enterTo)\n\n  let leaveClasses = useSplitClasses(leave)\n  let leaveFromClasses = useSplitClasses(leaveFrom)\n  let leaveToClasses = useSplitClasses(leaveTo)\n\n  let events = useEvents({ beforeEnter, afterEnter, beforeLeave, afterLeave })\n\n  useEffect(() => {\n    if (state === TreeStates.Visible && container.current === null) {\n      throw new Error('Did you forget to passthrough the `ref` to the actual DOM node?')\n    }\n  }, [container, state])\n\n  // Skipping initial transition\n  let skip = initial && !appear\n\n  useIsoMorphicEffect(() => {\n    let node = container.current\n    if (!node) return\n    if (skip) return\n\n    isTransitioning.current = true\n\n    if (show) events.current.beforeEnter()\n    if (!show) events.current.beforeLeave()\n\n    return show\n      ? transition(node, enterClasses, enterFromClasses, enterToClasses, reason => {\n          isTransitioning.current = false\n          if (reason === Reason.Finished) events.current.afterEnter()\n        })\n      : transition(node, leaveClasses, leaveFromClasses, leaveToClasses, reason => {\n          isTransitioning.current = false\n\n          if (reason !== Reason.Finished) return\n\n          // When we don't have children anymore we can safely unregister from the parent and hide\n          // ourselves.\n          if (!hasChildren(nesting)) {\n            setState(TreeStates.Hidden)\n            unregister(id)\n            events.current.afterLeave()\n          }\n        })\n  }, [\n    events,\n    id,\n    isTransitioning,\n    unregister,\n    nesting,\n    container,\n    skip,\n    show,\n    enterClasses,\n    enterFromClasses,\n    enterToClasses,\n    leaveClasses,\n    leaveFromClasses,\n    leaveToClasses,\n  ])\n\n  let propsWeControl = { ref: container }\n  let passthroughProps = rest\n\n  return (\n    <NestingContext.Provider value={nesting}>\n      {render({\n        props: { ...passthroughProps, ...propsWeControl },\n        defaultTag: DEFAULT_TRANSITION_CHILD_TAG,\n        features: TransitionChildRenderFeatures,\n        visible: state === TreeStates.Visible,\n        name: 'Transition.Child',\n      })}\n    </NestingContext.Provider>\n  )\n}\n\nexport function Transition<TTag extends ElementType = typeof DEFAULT_TRANSITION_CHILD_TAG>(\n  props: TransitionChildProps<TTag> & { show: boolean; appear?: boolean }\n) {\n  // @ts-expect-error\n  let { show, appear = false, unmount, ...passthroughProps } = props as typeof props\n\n  if (![true, false].includes(show)) {\n    throw new Error('A <Transition /> is used but it is missing a `show={true | false}` prop.')\n  }\n\n  let [state, setState] = useState(show ? TreeStates.Visible : TreeStates.Hidden)\n\n  let nestingBag = useNesting(() => {\n    setState(TreeStates.Hidden)\n  })\n\n  let initial = useIsInitialRender()\n  let transitionBag = useMemo<TransitionContextValues>(\n    () => ({ show, appear: appear || !initial }),\n    [show, appear, initial]\n  )\n\n  useEffect(() => {\n    if (show) {\n      setState(TreeStates.Visible)\n    } else if (!hasChildren(nestingBag)) {\n      setState(TreeStates.Hidden)\n    }\n  }, [show, nestingBag])\n\n  let sharedProps = { unmount }\n\n  return (\n    <NestingContext.Provider value={nestingBag}>\n      <TransitionContext.Provider value={transitionBag}>\n        {render({\n          props: {\n            ...sharedProps,\n            as: Fragment,\n            children: <TransitionChild {...sharedProps} {...passthroughProps} />,\n          },\n          defaultTag: Fragment,\n          features: TransitionChildRenderFeatures,\n          visible: state === TreeStates.Visible,\n          name: 'Transition',\n        })}\n      </TransitionContext.Provider>\n    </NestingContext.Provider>\n  )\n}\n\nTransition.Child = TransitionChild\nTransition.Root = Transition\n"]},"metadata":{},"sourceType":"module"}